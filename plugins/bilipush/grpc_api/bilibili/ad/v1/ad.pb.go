// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc_api/bilibili/ad/v1/ad.proto

package bilibili_ad_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 广告控制
type AdsControlDto struct {
	// 视频是否有弹幕，如有，需请求弹幕广告
	HasDanmu int32 `protobuf:"varint,1,opt,name=has_danmu,json=hasDanmu,proto3" json:"has_danmu,omitempty"`
	// 有弹幕的分P视频的cid
	Cids []int64 `protobuf:"varint,2,rep,packed,name=cids,proto3" json:"cids,omitempty"`
	// 有弹幕的ogv ep
	Eps                  []*AdOgvEpDto `protobuf:"bytes,3,rep,name=eps,proto3" json:"eps,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AdsControlDto) Reset()         { *m = AdsControlDto{} }
func (m *AdsControlDto) String() string { return proto.CompactTextString(m) }
func (*AdsControlDto) ProtoMessage()    {}
func (*AdsControlDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{0}
}

func (m *AdsControlDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdsControlDto.Unmarshal(m, b)
}
func (m *AdsControlDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdsControlDto.Marshal(b, m, deterministic)
}
func (m *AdsControlDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdsControlDto.Merge(m, src)
}
func (m *AdsControlDto) XXX_Size() int {
	return xxx_messageInfo_AdsControlDto.Size(m)
}
func (m *AdsControlDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdsControlDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdsControlDto proto.InternalMessageInfo

func (m *AdsControlDto) GetHasDanmu() int32 {
	if m != nil {
		return m.HasDanmu
	}
	return 0
}

func (m *AdsControlDto) GetCids() []int64 {
	if m != nil {
		return m.Cids
	}
	return nil
}

func (m *AdsControlDto) GetEps() []*AdOgvEpDto {
	if m != nil {
		return m.Eps
	}
	return nil
}

// 有弹幕的ogv ep
type AdOgvEpDto struct {
	// 分集epid
	Epid int64 `protobuf:"varint,1,opt,name=epid,proto3" json:"epid,omitempty"`
	// 是否显示 "荐"
	HasRecommend         bool     `protobuf:"varint,2,opt,name=has_recommend,json=hasRecommend,proto3" json:"has_recommend,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdOgvEpDto) Reset()         { *m = AdOgvEpDto{} }
func (m *AdOgvEpDto) String() string { return proto.CompactTextString(m) }
func (*AdOgvEpDto) ProtoMessage()    {}
func (*AdOgvEpDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{1}
}

func (m *AdOgvEpDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdOgvEpDto.Unmarshal(m, b)
}
func (m *AdOgvEpDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdOgvEpDto.Marshal(b, m, deterministic)
}
func (m *AdOgvEpDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdOgvEpDto.Merge(m, src)
}
func (m *AdOgvEpDto) XXX_Size() int {
	return xxx_messageInfo_AdOgvEpDto.Size(m)
}
func (m *AdOgvEpDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdOgvEpDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdOgvEpDto proto.InternalMessageInfo

func (m *AdOgvEpDto) GetEpid() int64 {
	if m != nil {
		return m.Epid
	}
	return 0
}

func (m *AdOgvEpDto) GetHasRecommend() bool {
	if m != nil {
		return m.HasRecommend
	}
	return false
}

// 广告数据
type SourceContentDto struct {
	// 广告请求id
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// 广告资源位source ID
	SourceId int32 `protobuf:"varint,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	// 广告资源位resource ID
	ResourceId int32 `protobuf:"varint,3,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`
	// 广告位上报标记,对广告返回数据恒为true
	IsAdLoc bool `protobuf:"varint,4,opt,name=is_ad_loc,json=isAdLoc,proto3" json:"is_ad_loc,omitempty"`
	// 与天马现有逻辑一致, 0有含义
	// 0:内容 1:广告
	ServerType *wrapperspb.Int32Value `protobuf:"bytes,5,opt,name=server_type,json=serverType,proto3" json:"server_type,omitempty"`
	// 客户端IP回传拼接
	ClientIp string `protobuf:"bytes,6,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	// 广告卡片位置在一刷中的位置, 天马用, 0有含义
	CardIndex *wrapperspb.Int32Value `protobuf:"bytes,7,opt,name=card_index,json=cardIndex,proto3" json:"card_index,omitempty"`
	// 广告资源位source 位次
	Index int32 `protobuf:"varint,8,opt,name=index,proto3" json:"index,omitempty"`
	// 广告内容
	AdContent            *AdDto   `protobuf:"bytes,9,opt,name=ad_content,json=adContent,proto3" json:"ad_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SourceContentDto) Reset()         { *m = SourceContentDto{} }
func (m *SourceContentDto) String() string { return proto.CompactTextString(m) }
func (*SourceContentDto) ProtoMessage()    {}
func (*SourceContentDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{2}
}

func (m *SourceContentDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceContentDto.Unmarshal(m, b)
}
func (m *SourceContentDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceContentDto.Marshal(b, m, deterministic)
}
func (m *SourceContentDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceContentDto.Merge(m, src)
}
func (m *SourceContentDto) XXX_Size() int {
	return xxx_messageInfo_SourceContentDto.Size(m)
}
func (m *SourceContentDto) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceContentDto.DiscardUnknown(m)
}

var xxx_messageInfo_SourceContentDto proto.InternalMessageInfo

func (m *SourceContentDto) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *SourceContentDto) GetSourceId() int32 {
	if m != nil {
		return m.SourceId
	}
	return 0
}

func (m *SourceContentDto) GetResourceId() int32 {
	if m != nil {
		return m.ResourceId
	}
	return 0
}

func (m *SourceContentDto) GetIsAdLoc() bool {
	if m != nil {
		return m.IsAdLoc
	}
	return false
}

func (m *SourceContentDto) GetServerType() *wrapperspb.Int32Value {
	if m != nil {
		return m.ServerType
	}
	return nil
}

func (m *SourceContentDto) GetClientIp() string {
	if m != nil {
		return m.ClientIp
	}
	return ""
}

func (m *SourceContentDto) GetCardIndex() *wrapperspb.Int32Value {
	if m != nil {
		return m.CardIndex
	}
	return nil
}

func (m *SourceContentDto) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *SourceContentDto) GetAdContent() *AdDto {
	if m != nil {
		return m.AdContent
	}
	return nil
}

// 广告内容
type AdDto struct {
	// 广告创意ID
	CreativeId int64 `protobuf:"varint,1,opt,name=creative_id,json=creativeId,proto3" json:"creative_id,omitempty"`
	// 广告闭环上报回传数据
	AdCb string `protobuf:"bytes,2,opt,name=ad_cb,json=adCb,proto3" json:"ad_cb,omitempty"`
	// 额外广告数据
	Extra *AdContentExtraDto `protobuf:"bytes,3,opt,name=extra,proto3" json:"extra,omitempty"`
	// 广告标记
	CmMark int32 `protobuf:"varint,4,opt,name=cm_mark,json=cmMark,proto3" json:"cm_mark,omitempty"`
	//
	TopViewId int64 `protobuf:"varint,5,opt,name=top_view_id,json=topViewId,proto3" json:"top_view_id,omitempty"`
	//
	CreativeType int32 `protobuf:"varint,6,opt,name=creative_type,json=creativeType,proto3" json:"creative_type,omitempty"`
	//
	CardType int32 `protobuf:"varint,7,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	//
	CreativeStyle int32 `protobuf:"varint,8,opt,name=creative_style,json=creativeStyle,proto3" json:"creative_style,omitempty"`
	//
	IsAd int32 `protobuf:"varint,9,opt,name=is_ad,json=isAd,proto3" json:"is_ad,omitempty"`
	//
	CreativeContent      *CreativeDto `protobuf:"bytes,10,opt,name=creative_content,json=creativeContent,proto3" json:"creative_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AdDto) Reset()         { *m = AdDto{} }
func (m *AdDto) String() string { return proto.CompactTextString(m) }
func (*AdDto) ProtoMessage()    {}
func (*AdDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{3}
}

func (m *AdDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdDto.Unmarshal(m, b)
}
func (m *AdDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdDto.Marshal(b, m, deterministic)
}
func (m *AdDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdDto.Merge(m, src)
}
func (m *AdDto) XXX_Size() int {
	return xxx_messageInfo_AdDto.Size(m)
}
func (m *AdDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdDto proto.InternalMessageInfo

func (m *AdDto) GetCreativeId() int64 {
	if m != nil {
		return m.CreativeId
	}
	return 0
}

func (m *AdDto) GetAdCb() string {
	if m != nil {
		return m.AdCb
	}
	return ""
}

func (m *AdDto) GetExtra() *AdContentExtraDto {
	if m != nil {
		return m.Extra
	}
	return nil
}

func (m *AdDto) GetCmMark() int32 {
	if m != nil {
		return m.CmMark
	}
	return 0
}

func (m *AdDto) GetTopViewId() int64 {
	if m != nil {
		return m.TopViewId
	}
	return 0
}

func (m *AdDto) GetCreativeType() int32 {
	if m != nil {
		return m.CreativeType
	}
	return 0
}

func (m *AdDto) GetCardType() int32 {
	if m != nil {
		return m.CardType
	}
	return 0
}

func (m *AdDto) GetCreativeStyle() int32 {
	if m != nil {
		return m.CreativeStyle
	}
	return 0
}

func (m *AdDto) GetIsAd() int32 {
	if m != nil {
		return m.IsAd
	}
	return 0
}

func (m *AdDto) GetCreativeContent() *CreativeDto {
	if m != nil {
		return m.CreativeContent
	}
	return nil
}

// 额外广告数据
type AdContentExtraDto struct {
	// 动态布局
	Layout string `protobuf:"bytes,1,opt,name=layout,proto3" json:"layout,omitempty"`
	// 展现监控url
	ShowUrls []string `protobuf:"bytes,2,rep,name=show_urls,json=showUrls,proto3" json:"show_urls,omitempty"`
	// 点击监控url
	ClickUrls []string `protobuf:"bytes,3,rep,name=click_urls,json=clickUrls,proto3" json:"click_urls,omitempty"`
	// 弹幕创意列表展示第三方上报
	DanmuListShowUrls []string `protobuf:"bytes,4,rep,name=danmu_list_show_urls,json=danmuListShowUrls,proto3" json:"danmu_list_show_urls,omitempty"`
	// 弹幕创意列表点击第三方上报
	DanmuListClickUrls []string `protobuf:"bytes,5,rep,name=danmu_list_click_urls,json=danmuListClickUrls,proto3" json:"danmu_list_click_urls,omitempty"`
	// 弹幕详情页展示第三方上报
	DanmuDetailShowUrls []string `protobuf:"bytes,6,rep,name=danmu_detail_show_urls,json=danmuDetailShowUrls,proto3" json:"danmu_detail_show_urls,omitempty"`
	// 弹幕商品添加购物车第三方上报
	DanmuTrolleyAddUrls []string `protobuf:"bytes,7,rep,name=danmu_trolley_add_urls,json=danmuTrolleyAddUrls,proto3" json:"danmu_trolley_add_urls,omitempty"`
	// useWebView默认false
	UseAdWebV2 bool `protobuf:"varint,8,opt,name=use_ad_web_v2,json=useAdWebV2,proto3" json:"use_ad_web_v2,omitempty"`
	// app唤起白名单
	OpenWhitelist []string `protobuf:"bytes,9,rep,name=open_whitelist,json=openWhitelist,proto3" json:"open_whitelist,omitempty"`
	// app下载白名单
	DownloadWhitelist *AppPackageDto `protobuf:"bytes,10,opt,name=download_whitelist,json=downloadWhitelist,proto3" json:"download_whitelist,omitempty"`
	// 卡片相关信息
	Card *AdCardDto `protobuf:"bytes,11,opt,name=card,proto3" json:"card,omitempty"`
	// 视频播放和弹幕播放上报控制时间 ms
	ReportTime int32 `protobuf:"varint,12,opt,name=report_time,json=reportTime,proto3" json:"report_time,omitempty"`
	// 是否优先唤起app store
	AppstorePriority int32 `protobuf:"varint,13,opt,name=appstore_priority,json=appstorePriority,proto3" json:"appstore_priority,omitempty"`
	// 广告售卖类型
	SalesType int32 `protobuf:"varint,14,opt,name=sales_type,json=salesType,proto3" json:"sales_type,omitempty"`
	// 落地页是否预加载
	PreloadLandingpage int32 `protobuf:"varint,15,opt,name=preload_landingpage,json=preloadLandingpage,proto3" json:"preload_landingpage,omitempty"`
	// 是否需要展示风险行业提示
	SpecialIndustry bool `protobuf:"varint,16,opt,name=special_industry,json=specialIndustry,proto3" json:"special_industry,omitempty"`
	// 风险行业提示
	SpecialIndustryTips string `protobuf:"bytes,17,opt,name=special_industry_tips,json=specialIndustryTips,proto3" json:"special_industry_tips,omitempty"`
	// 是否展示下载弹框
	EnableDownloadDialog bool `protobuf:"varint,18,opt,name=enable_download_dialog,json=enableDownloadDialog,proto3" json:"enable_download_dialog,omitempty"`
	// 是否允许分享
	EnableShare bool `protobuf:"varint,19,opt,name=enable_share,json=enableShare,proto3" json:"enable_share,omitempty"`
	// 个人空间广告入口类型
	// 1:橱窗 2:商品店铺 3:小程序
	UpzoneEntranceType int32 `protobuf:"varint,20,opt,name=upzone_entrance_type,json=upzoneEntranceType,proto3" json:"upzone_entrance_type,omitempty"`
	// 个人空间广告入口上报id,橱窗id(当前用Mid)、店铺id或者小程序id
	UpzoneEntranceReportId int32 `protobuf:"varint,21,opt,name=upzone_entrance_report_id,json=upzoneEntranceReportId,proto3" json:"upzone_entrance_report_id,omitempty"`
	// 分享数据
	ShareInfo *AdShareInfoDto `protobuf:"bytes,22,opt,name=share_info,json=shareInfo,proto3" json:"share_info,omitempty"`
	// topview图片链接，闪屏预下载用
	TopviewPicUrl string `protobuf:"bytes,23,opt,name=topview_pic_url,json=topviewPicUrl,proto3" json:"topview_pic_url,omitempty"`
	// topview视频链接，闪屏预下载用
	TopviewVideoUrl string `protobuf:"bytes,24,opt,name=topview_video_url,json=topviewVideoUrl,proto3" json:"topview_video_url,omitempty"`
	// 点击区域
	// 0:表示banner可点击 1:表示素材可点击
	ClickArea int32 `protobuf:"varint,25,opt,name=click_area,json=clickArea,proto3" json:"click_area,omitempty"`
	// 店铺
	ShopId int64 `protobuf:"varint,26,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	// up主
	UpMid int64 `protobuf:"varint,27,opt,name=up_mid,json=upMid,proto3" json:"up_mid,omitempty"`
	// 回传id
	TrackId string `protobuf:"bytes,28,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	// 商店直投
	EnableStoreDirectLaunch int32 `protobuf:"varint,29,opt,name=enable_store_direct_launch,json=enableStoreDirectLaunch,proto3" json:"enable_store_direct_launch,omitempty"`
	// DPA2.0商品ID
	ProductId            int64    `protobuf:"varint,30,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdContentExtraDto) Reset()         { *m = AdContentExtraDto{} }
func (m *AdContentExtraDto) String() string { return proto.CompactTextString(m) }
func (*AdContentExtraDto) ProtoMessage()    {}
func (*AdContentExtraDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{4}
}

func (m *AdContentExtraDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdContentExtraDto.Unmarshal(m, b)
}
func (m *AdContentExtraDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdContentExtraDto.Marshal(b, m, deterministic)
}
func (m *AdContentExtraDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdContentExtraDto.Merge(m, src)
}
func (m *AdContentExtraDto) XXX_Size() int {
	return xxx_messageInfo_AdContentExtraDto.Size(m)
}
func (m *AdContentExtraDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdContentExtraDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdContentExtraDto proto.InternalMessageInfo

func (m *AdContentExtraDto) GetLayout() string {
	if m != nil {
		return m.Layout
	}
	return ""
}

func (m *AdContentExtraDto) GetShowUrls() []string {
	if m != nil {
		return m.ShowUrls
	}
	return nil
}

func (m *AdContentExtraDto) GetClickUrls() []string {
	if m != nil {
		return m.ClickUrls
	}
	return nil
}

func (m *AdContentExtraDto) GetDanmuListShowUrls() []string {
	if m != nil {
		return m.DanmuListShowUrls
	}
	return nil
}

func (m *AdContentExtraDto) GetDanmuListClickUrls() []string {
	if m != nil {
		return m.DanmuListClickUrls
	}
	return nil
}

func (m *AdContentExtraDto) GetDanmuDetailShowUrls() []string {
	if m != nil {
		return m.DanmuDetailShowUrls
	}
	return nil
}

func (m *AdContentExtraDto) GetDanmuTrolleyAddUrls() []string {
	if m != nil {
		return m.DanmuTrolleyAddUrls
	}
	return nil
}

func (m *AdContentExtraDto) GetUseAdWebV2() bool {
	if m != nil {
		return m.UseAdWebV2
	}
	return false
}

func (m *AdContentExtraDto) GetOpenWhitelist() []string {
	if m != nil {
		return m.OpenWhitelist
	}
	return nil
}

func (m *AdContentExtraDto) GetDownloadWhitelist() *AppPackageDto {
	if m != nil {
		return m.DownloadWhitelist
	}
	return nil
}

func (m *AdContentExtraDto) GetCard() *AdCardDto {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *AdContentExtraDto) GetReportTime() int32 {
	if m != nil {
		return m.ReportTime
	}
	return 0
}

func (m *AdContentExtraDto) GetAppstorePriority() int32 {
	if m != nil {
		return m.AppstorePriority
	}
	return 0
}

func (m *AdContentExtraDto) GetSalesType() int32 {
	if m != nil {
		return m.SalesType
	}
	return 0
}

func (m *AdContentExtraDto) GetPreloadLandingpage() int32 {
	if m != nil {
		return m.PreloadLandingpage
	}
	return 0
}

func (m *AdContentExtraDto) GetSpecialIndustry() bool {
	if m != nil {
		return m.SpecialIndustry
	}
	return false
}

func (m *AdContentExtraDto) GetSpecialIndustryTips() string {
	if m != nil {
		return m.SpecialIndustryTips
	}
	return ""
}

func (m *AdContentExtraDto) GetEnableDownloadDialog() bool {
	if m != nil {
		return m.EnableDownloadDialog
	}
	return false
}

func (m *AdContentExtraDto) GetEnableShare() bool {
	if m != nil {
		return m.EnableShare
	}
	return false
}

func (m *AdContentExtraDto) GetUpzoneEntranceType() int32 {
	if m != nil {
		return m.UpzoneEntranceType
	}
	return 0
}

func (m *AdContentExtraDto) GetUpzoneEntranceReportId() int32 {
	if m != nil {
		return m.UpzoneEntranceReportId
	}
	return 0
}

func (m *AdContentExtraDto) GetShareInfo() *AdShareInfoDto {
	if m != nil {
		return m.ShareInfo
	}
	return nil
}

func (m *AdContentExtraDto) GetTopviewPicUrl() string {
	if m != nil {
		return m.TopviewPicUrl
	}
	return ""
}

func (m *AdContentExtraDto) GetTopviewVideoUrl() string {
	if m != nil {
		return m.TopviewVideoUrl
	}
	return ""
}

func (m *AdContentExtraDto) GetClickArea() int32 {
	if m != nil {
		return m.ClickArea
	}
	return 0
}

func (m *AdContentExtraDto) GetShopId() int64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *AdContentExtraDto) GetUpMid() int64 {
	if m != nil {
		return m.UpMid
	}
	return 0
}

func (m *AdContentExtraDto) GetTrackId() string {
	if m != nil {
		return m.TrackId
	}
	return ""
}

func (m *AdContentExtraDto) GetEnableStoreDirectLaunch() int32 {
	if m != nil {
		return m.EnableStoreDirectLaunch
	}
	return 0
}

func (m *AdContentExtraDto) GetProductId() int64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

//
type CreativeDto struct {
	//
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	//
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	//
	ImageUrl string `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	//
	ImageMd5 string `protobuf:"bytes,4,opt,name=image_md5,json=imageMd5,proto3" json:"image_md5,omitempty"`
	//
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	//
	ClickUrl string `protobuf:"bytes,6,opt,name=click_url,json=clickUrl,proto3" json:"click_url,omitempty"`
	//
	ShowUrl string `protobuf:"bytes,7,opt,name=show_url,json=showUrl,proto3" json:"show_url,omitempty"`
	//
	VideoId int64 `protobuf:"varint,8,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	//
	ThumbnailUrl string `protobuf:"bytes,9,opt,name=thumbnail_url,json=thumbnailUrl,proto3" json:"thumbnail_url,omitempty"`
	//
	ThumbnailUrlMd5 string `protobuf:"bytes,10,opt,name=thumbnail_url_md5,json=thumbnailUrlMd5,proto3" json:"thumbnail_url_md5,omitempty"`
	//
	LogoUrl string `protobuf:"bytes,11,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url,omitempty"`
	//
	LogoMd5 string `protobuf:"bytes,12,opt,name=logo_md5,json=logoMd5,proto3" json:"logo_md5,omitempty"`
	//
	Username             string   `protobuf:"bytes,13,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreativeDto) Reset()         { *m = CreativeDto{} }
func (m *CreativeDto) String() string { return proto.CompactTextString(m) }
func (*CreativeDto) ProtoMessage()    {}
func (*CreativeDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{5}
}

func (m *CreativeDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreativeDto.Unmarshal(m, b)
}
func (m *CreativeDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreativeDto.Marshal(b, m, deterministic)
}
func (m *CreativeDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreativeDto.Merge(m, src)
}
func (m *CreativeDto) XXX_Size() int {
	return xxx_messageInfo_CreativeDto.Size(m)
}
func (m *CreativeDto) XXX_DiscardUnknown() {
	xxx_messageInfo_CreativeDto.DiscardUnknown(m)
}

var xxx_messageInfo_CreativeDto proto.InternalMessageInfo

func (m *CreativeDto) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreativeDto) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreativeDto) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *CreativeDto) GetImageMd5() string {
	if m != nil {
		return m.ImageMd5
	}
	return ""
}

func (m *CreativeDto) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *CreativeDto) GetClickUrl() string {
	if m != nil {
		return m.ClickUrl
	}
	return ""
}

func (m *CreativeDto) GetShowUrl() string {
	if m != nil {
		return m.ShowUrl
	}
	return ""
}

func (m *CreativeDto) GetVideoId() int64 {
	if m != nil {
		return m.VideoId
	}
	return 0
}

func (m *CreativeDto) GetThumbnailUrl() string {
	if m != nil {
		return m.ThumbnailUrl
	}
	return ""
}

func (m *CreativeDto) GetThumbnailUrlMd5() string {
	if m != nil {
		return m.ThumbnailUrlMd5
	}
	return ""
}

func (m *CreativeDto) GetLogoUrl() string {
	if m != nil {
		return m.LogoUrl
	}
	return ""
}

func (m *CreativeDto) GetLogoMd5() string {
	if m != nil {
		return m.LogoMd5
	}
	return ""
}

func (m *CreativeDto) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// app下载白名单
type AppPackageDto struct {
	// 包大小(单位bytes)
	Size int64 `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	//
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	//
	ApkName string `protobuf:"bytes,3,opt,name=apk_name,json=apkName,proto3" json:"apk_name,omitempty"`
	// url
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// bili schema url
	BiliUrl string `protobuf:"bytes,5,opt,name=bili_url,json=biliUrl,proto3" json:"bili_url,omitempty"`
	// 包md5
	Md5 string `protobuf:"bytes,6,opt,name=md5,proto3" json:"md5,omitempty"`
	// 包icon
	Icon string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`
	// 开发者姓名
	DevName string `protobuf:"bytes,8,opt,name=dev_name,json=devName,proto3" json:"dev_name,omitempty"`
	// 权限地址
	AuthUrl string `protobuf:"bytes,9,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	// 权限名，逗号隔开
	AuthName string `protobuf:"bytes,10,opt,name=auth_name,json=authName,proto3" json:"auth_name,omitempty"`
	// 版本
	Version string `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	// 更新时间,yy-mm-hh格式
	UpdateTime string `protobuf:"bytes,12,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// 隐私协议标题
	PrivacyName string `protobuf:"bytes,13,opt,name=privacy_name,json=privacyName,proto3" json:"privacy_name,omitempty"`
	// 隐私协议url
	PrivacyUrl           string   `protobuf:"bytes,14,opt,name=privacy_url,json=privacyUrl,proto3" json:"privacy_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppPackageDto) Reset()         { *m = AppPackageDto{} }
func (m *AppPackageDto) String() string { return proto.CompactTextString(m) }
func (*AppPackageDto) ProtoMessage()    {}
func (*AppPackageDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{6}
}

func (m *AppPackageDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppPackageDto.Unmarshal(m, b)
}
func (m *AppPackageDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppPackageDto.Marshal(b, m, deterministic)
}
func (m *AppPackageDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppPackageDto.Merge(m, src)
}
func (m *AppPackageDto) XXX_Size() int {
	return xxx_messageInfo_AppPackageDto.Size(m)
}
func (m *AppPackageDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AppPackageDto.DiscardUnknown(m)
}

var xxx_messageInfo_AppPackageDto proto.InternalMessageInfo

func (m *AppPackageDto) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *AppPackageDto) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *AppPackageDto) GetApkName() string {
	if m != nil {
		return m.ApkName
	}
	return ""
}

func (m *AppPackageDto) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AppPackageDto) GetBiliUrl() string {
	if m != nil {
		return m.BiliUrl
	}
	return ""
}

func (m *AppPackageDto) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *AppPackageDto) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *AppPackageDto) GetDevName() string {
	if m != nil {
		return m.DevName
	}
	return ""
}

func (m *AppPackageDto) GetAuthUrl() string {
	if m != nil {
		return m.AuthUrl
	}
	return ""
}

func (m *AppPackageDto) GetAuthName() string {
	if m != nil {
		return m.AuthName
	}
	return ""
}

func (m *AppPackageDto) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *AppPackageDto) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *AppPackageDto) GetPrivacyName() string {
	if m != nil {
		return m.PrivacyName
	}
	return ""
}

func (m *AppPackageDto) GetPrivacyUrl() string {
	if m != nil {
		return m.PrivacyUrl
	}
	return ""
}

// 卡片
type AdCardDto struct {
	// 卡片类型
	CardType int32 `protobuf:"varint,1,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
	// 标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 描述
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
	// 额外描述
	ExtraDesc string `protobuf:"bytes,4,opt,name=extra_desc,json=extraDesc,proto3" json:"extra_desc,omitempty"`
	// 长描述
	LongDesc string `protobuf:"bytes,5,opt,name=long_desc,json=longDesc,proto3" json:"long_desc,omitempty"`
	// 短标题, 弹幕广告目录面板标题
	ShortTitle string `protobuf:"bytes,6,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	// 弹幕/浮层广告的弹幕标题
	DanmuTitle string `protobuf:"bytes,7,opt,name=danmu_title,json=danmuTitle,proto3" json:"danmu_title,omitempty"`
	// 弹幕/浮层广告的弹幕高度，整型，分母为100
	DanmuHeight int32 `protobuf:"varint,8,opt,name=danmu_height,json=danmuHeight,proto3" json:"danmu_height,omitempty"`
	// 弹幕/浮层广告的弹幕宽度，整型，分母为100
	DanmuWidth int32 `protobuf:"varint,9,opt,name=danmu_width,json=danmuWidth,proto3" json:"danmu_width,omitempty"`
	// 弹幕/浮层广告生存时间，单位为毫秒
	DanmuLife int32 `protobuf:"varint,10,opt,name=danmu_life,json=danmuLife,proto3" json:"danmu_life,omitempty"`
	// 弹幕/浮层开始时间，单位为毫秒
	DanmuBegin int32 `protobuf:"varint,11,opt,name=danmu_begin,json=danmuBegin,proto3" json:"danmu_begin,omitempty"`
	// 背景色值（含透明度）如#80FFFFFF
	DanmuColor string `protobuf:"bytes,12,opt,name=danmu_color,json=danmuColor,proto3" json:"danmu_color,omitempty"`
	// 弹幕/浮层广告H5落地页
	DanmuH5Url string `protobuf:"bytes,13,opt,name=danmu_h5url,json=danmuH5url,proto3" json:"danmu_h5url,omitempty"`
	// 弹幕/浮层 广告icon
	DanmuIcon string `protobuf:"bytes,14,opt,name=danmu_icon,json=danmuIcon,proto3" json:"danmu_icon,omitempty"`
	// 折叠时间，永驻浮层折叠时间，单位为毫秒
	FoldTime int32 `protobuf:"varint,15,opt,name=fold_time,json=foldTime,proto3" json:"fold_time,omitempty"`
	// 广告标文案
	AdTag string `protobuf:"bytes,16,opt,name=ad_tag,json=adTag,proto3" json:"ad_tag,omitempty"`
	// cover数组
	Covers []*AdCoverDto `protobuf:"bytes,17,rep,name=covers,proto3" json:"covers,omitempty"`
	// 卡片跳转链接
	JumpUrl string `protobuf:"bytes,18,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	//
	ImaxLandingPageJsonString string `protobuf:"bytes,19,opt,name=imax_landing_page_json_string,json=imaxLandingPageJsonString,proto3" json:"imax_landing_page_json_string,omitempty"`
	// app唤起schema
	CallupUrl string `protobuf:"bytes,20,opt,name=callup_url,json=callupUrl,proto3" json:"callup_url,omitempty"`
	// univeral link域名
	UniversalApp string `protobuf:"bytes,21,opt,name=universal_app,json=universalApp,proto3" json:"universal_app,omitempty"`
	// 原价, 单位为分
	OriPrice string `protobuf:"bytes,22,opt,name=ori_price,json=oriPrice,proto3" json:"ori_price,omitempty"`
	// 现价, 同上
	CurPrice int32 `protobuf:"varint,23,opt,name=cur_price,json=curPrice,proto3" json:"cur_price,omitempty"`
	// 券后/现价 价格描述
	PriceDesc string `protobuf:"bytes,24,opt,name=price_desc,json=priceDesc,proto3" json:"price_desc,omitempty"`
	// 价格单位符号
	PriceSymbol string `protobuf:"bytes,25,opt,name=price_symbol,json=priceSymbol,proto3" json:"price_symbol,omitempty"`
	// 券后价格 "1000"
	GoodsCurPrice string `protobuf:"bytes,26,opt,name=goods_cur_price,json=goodsCurPrice,proto3" json:"goods_cur_price,omitempty"`
	// 原价 "¥1002"
	GoodsOriPrice string `protobuf:"bytes,27,opt,name=goods_ori_price,json=goodsOriPrice,proto3" json:"goods_ori_price,omitempty"`
	// 开放平台商品
	Good *AdGoodDto `protobuf:"bytes,28,opt,name=good,proto3" json:"good,omitempty"`
	// 打分? 满分为100
	Rank int32 `protobuf:"varint,29,opt,name=rank,proto3" json:"rank,omitempty"`
	// 热度
	HotScore int32 `protobuf:"varint,30,opt,name=hot_score,json=hotScore,proto3" json:"hot_score,omitempty"`
	// 按钮
	Button *AdButtonDto `protobuf:"bytes,31,opt,name=button,proto3" json:"button,omitempty"`
	// 广告主logo
	AdverLogo string `protobuf:"bytes,32,opt,name=adver_logo,json=adverLogo,proto3" json:"adver_logo,omitempty"`
	// 广告主name
	AdverName string `protobuf:"bytes,33,opt,name=adver_name,json=adverName,proto3" json:"adver_name,omitempty"`
	// 广告主主页链接
	AdverPageUrl string `protobuf:"bytes,34,opt,name=adver_page_url,json=adverPageUrl,proto3" json:"adver_page_url,omitempty"`
	// 视频弹幕，视频广告用
	VideoBarrage []string `protobuf:"bytes,35,rep,name=video_barrage,json=videoBarrage,proto3" json:"video_barrage,omitempty"`
	// 商业标信息
	AdTagStyle *AdBusinessMarkDto `protobuf:"bytes,36,opt,name=ad_tag_style,json=adTagStyle,proto3" json:"ad_tag_style,omitempty"`
	// 自动播放视频
	Video *AdAutoPlayVideoDto `protobuf:"bytes,37,opt,name=video,proto3" json:"video,omitempty"`
	// 反馈面板功能模块，屏蔽、投诉、广告介绍
	FeedbackPanel *AdFeedbackPanelDto `protobuf:"bytes,38,opt,name=feedback_panel,json=feedbackPanel,proto3" json:"feedback_panel,omitempty"`
	//
	AdverMid int64 `protobuf:"varint,39,opt,name=adver_mid,json=adverMid,proto3" json:"adver_mid,omitempty"`
	//
	AdverAccountId int64 `protobuf:"varint,40,opt,name=adver_account_id,json=adverAccountId,proto3" json:"adver_account_id,omitempty"`
	//
	Duration string `protobuf:"bytes,41,opt,name=duration,proto3" json:"duration,omitempty"`
	//
	QualityInfos []*QualityInfo `protobuf:"bytes,42,rep,name=quality_infos,json=qualityInfos,proto3" json:"quality_infos,omitempty"`
	// 动态广告文本
	DynamicText string `protobuf:"bytes,43,opt,name=dynamic_text,json=dynamicText,proto3" json:"dynamic_text,omitempty"`
	// 广告主信息
	Adver *AdverDto `protobuf:"bytes,44,opt,name=adver,proto3" json:"adver,omitempty"`
	// 评分
	GradeLevel           int32    `protobuf:"varint,45,opt,name=grade_level,json=gradeLevel,proto3" json:"grade_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdCardDto) Reset()         { *m = AdCardDto{} }
func (m *AdCardDto) String() string { return proto.CompactTextString(m) }
func (*AdCardDto) ProtoMessage()    {}
func (*AdCardDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{7}
}

func (m *AdCardDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdCardDto.Unmarshal(m, b)
}
func (m *AdCardDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdCardDto.Marshal(b, m, deterministic)
}
func (m *AdCardDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdCardDto.Merge(m, src)
}
func (m *AdCardDto) XXX_Size() int {
	return xxx_messageInfo_AdCardDto.Size(m)
}
func (m *AdCardDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdCardDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdCardDto proto.InternalMessageInfo

func (m *AdCardDto) GetCardType() int32 {
	if m != nil {
		return m.CardType
	}
	return 0
}

func (m *AdCardDto) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdCardDto) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *AdCardDto) GetExtraDesc() string {
	if m != nil {
		return m.ExtraDesc
	}
	return ""
}

func (m *AdCardDto) GetLongDesc() string {
	if m != nil {
		return m.LongDesc
	}
	return ""
}

func (m *AdCardDto) GetShortTitle() string {
	if m != nil {
		return m.ShortTitle
	}
	return ""
}

func (m *AdCardDto) GetDanmuTitle() string {
	if m != nil {
		return m.DanmuTitle
	}
	return ""
}

func (m *AdCardDto) GetDanmuHeight() int32 {
	if m != nil {
		return m.DanmuHeight
	}
	return 0
}

func (m *AdCardDto) GetDanmuWidth() int32 {
	if m != nil {
		return m.DanmuWidth
	}
	return 0
}

func (m *AdCardDto) GetDanmuLife() int32 {
	if m != nil {
		return m.DanmuLife
	}
	return 0
}

func (m *AdCardDto) GetDanmuBegin() int32 {
	if m != nil {
		return m.DanmuBegin
	}
	return 0
}

func (m *AdCardDto) GetDanmuColor() string {
	if m != nil {
		return m.DanmuColor
	}
	return ""
}

func (m *AdCardDto) GetDanmuH5Url() string {
	if m != nil {
		return m.DanmuH5Url
	}
	return ""
}

func (m *AdCardDto) GetDanmuIcon() string {
	if m != nil {
		return m.DanmuIcon
	}
	return ""
}

func (m *AdCardDto) GetFoldTime() int32 {
	if m != nil {
		return m.FoldTime
	}
	return 0
}

func (m *AdCardDto) GetAdTag() string {
	if m != nil {
		return m.AdTag
	}
	return ""
}

func (m *AdCardDto) GetCovers() []*AdCoverDto {
	if m != nil {
		return m.Covers
	}
	return nil
}

func (m *AdCardDto) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *AdCardDto) GetImaxLandingPageJsonString() string {
	if m != nil {
		return m.ImaxLandingPageJsonString
	}
	return ""
}

func (m *AdCardDto) GetCallupUrl() string {
	if m != nil {
		return m.CallupUrl
	}
	return ""
}

func (m *AdCardDto) GetUniversalApp() string {
	if m != nil {
		return m.UniversalApp
	}
	return ""
}

func (m *AdCardDto) GetOriPrice() string {
	if m != nil {
		return m.OriPrice
	}
	return ""
}

func (m *AdCardDto) GetCurPrice() int32 {
	if m != nil {
		return m.CurPrice
	}
	return 0
}

func (m *AdCardDto) GetPriceDesc() string {
	if m != nil {
		return m.PriceDesc
	}
	return ""
}

func (m *AdCardDto) GetPriceSymbol() string {
	if m != nil {
		return m.PriceSymbol
	}
	return ""
}

func (m *AdCardDto) GetGoodsCurPrice() string {
	if m != nil {
		return m.GoodsCurPrice
	}
	return ""
}

func (m *AdCardDto) GetGoodsOriPrice() string {
	if m != nil {
		return m.GoodsOriPrice
	}
	return ""
}

func (m *AdCardDto) GetGood() *AdGoodDto {
	if m != nil {
		return m.Good
	}
	return nil
}

func (m *AdCardDto) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *AdCardDto) GetHotScore() int32 {
	if m != nil {
		return m.HotScore
	}
	return 0
}

func (m *AdCardDto) GetButton() *AdButtonDto {
	if m != nil {
		return m.Button
	}
	return nil
}

func (m *AdCardDto) GetAdverLogo() string {
	if m != nil {
		return m.AdverLogo
	}
	return ""
}

func (m *AdCardDto) GetAdverName() string {
	if m != nil {
		return m.AdverName
	}
	return ""
}

func (m *AdCardDto) GetAdverPageUrl() string {
	if m != nil {
		return m.AdverPageUrl
	}
	return ""
}

func (m *AdCardDto) GetVideoBarrage() []string {
	if m != nil {
		return m.VideoBarrage
	}
	return nil
}

func (m *AdCardDto) GetAdTagStyle() *AdBusinessMarkDto {
	if m != nil {
		return m.AdTagStyle
	}
	return nil
}

func (m *AdCardDto) GetVideo() *AdAutoPlayVideoDto {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *AdCardDto) GetFeedbackPanel() *AdFeedbackPanelDto {
	if m != nil {
		return m.FeedbackPanel
	}
	return nil
}

func (m *AdCardDto) GetAdverMid() int64 {
	if m != nil {
		return m.AdverMid
	}
	return 0
}

func (m *AdCardDto) GetAdverAccountId() int64 {
	if m != nil {
		return m.AdverAccountId
	}
	return 0
}

func (m *AdCardDto) GetDuration() string {
	if m != nil {
		return m.Duration
	}
	return ""
}

func (m *AdCardDto) GetQualityInfos() []*QualityInfo {
	if m != nil {
		return m.QualityInfos
	}
	return nil
}

func (m *AdCardDto) GetDynamicText() string {
	if m != nil {
		return m.DynamicText
	}
	return ""
}

func (m *AdCardDto) GetAdver() *AdverDto {
	if m != nil {
		return m.Adver
	}
	return nil
}

func (m *AdCardDto) GetGradeLevel() int32 {
	if m != nil {
		return m.GradeLevel
	}
	return 0
}

// 分享
type AdShareInfoDto struct {
	// 分享标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 分享副标题
	Subtitle string `protobuf:"bytes,2,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 分享图片url
	ImageUrl             string   `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdShareInfoDto) Reset()         { *m = AdShareInfoDto{} }
func (m *AdShareInfoDto) String() string { return proto.CompactTextString(m) }
func (*AdShareInfoDto) ProtoMessage()    {}
func (*AdShareInfoDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{8}
}

func (m *AdShareInfoDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdShareInfoDto.Unmarshal(m, b)
}
func (m *AdShareInfoDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdShareInfoDto.Marshal(b, m, deterministic)
}
func (m *AdShareInfoDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdShareInfoDto.Merge(m, src)
}
func (m *AdShareInfoDto) XXX_Size() int {
	return xxx_messageInfo_AdShareInfoDto.Size(m)
}
func (m *AdShareInfoDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdShareInfoDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdShareInfoDto proto.InternalMessageInfo

func (m *AdShareInfoDto) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AdShareInfoDto) GetSubtitle() string {
	if m != nil {
		return m.Subtitle
	}
	return ""
}

func (m *AdShareInfoDto) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

// 广告卡片封面数据
type AdCoverDto struct {
	// 图片链接
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// 动图循环次数
	// 0:无限循环
	Loop int32 `protobuf:"varint,2,opt,name=loop,proto3" json:"loop,omitempty"`
	// 图片点击跳转地址，截至目前为空
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 跳转监测链接， 数组，单个图片的监控，出区别于click_urls，应前端要求。（此字段截至目前为空，使用时需再次确认）
	ReportUrls []string `protobuf:"bytes,4,rep,name=report_urls,json=reportUrls,proto3" json:"report_urls,omitempty"`
	// 图片高度
	ImageHeight int32 `protobuf:"varint,5,opt,name=image_height,json=imageHeight,proto3" json:"image_height,omitempty"`
	// 图片宽度
	ImageWidth           int32    `protobuf:"varint,6,opt,name=image_width,json=imageWidth,proto3" json:"image_width,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdCoverDto) Reset()         { *m = AdCoverDto{} }
func (m *AdCoverDto) String() string { return proto.CompactTextString(m) }
func (*AdCoverDto) ProtoMessage()    {}
func (*AdCoverDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{9}
}

func (m *AdCoverDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdCoverDto.Unmarshal(m, b)
}
func (m *AdCoverDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdCoverDto.Marshal(b, m, deterministic)
}
func (m *AdCoverDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdCoverDto.Merge(m, src)
}
func (m *AdCoverDto) XXX_Size() int {
	return xxx_messageInfo_AdCoverDto.Size(m)
}
func (m *AdCoverDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdCoverDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdCoverDto proto.InternalMessageInfo

func (m *AdCoverDto) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AdCoverDto) GetLoop() int32 {
	if m != nil {
		return m.Loop
	}
	return 0
}

func (m *AdCoverDto) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *AdCoverDto) GetReportUrls() []string {
	if m != nil {
		return m.ReportUrls
	}
	return nil
}

func (m *AdCoverDto) GetImageHeight() int32 {
	if m != nil {
		return m.ImageHeight
	}
	return 0
}

func (m *AdCoverDto) GetImageWidth() int32 {
	if m != nil {
		return m.ImageWidth
	}
	return 0
}

// 按钮
type AdButtonDto struct {
	// 类型
	// 1:落地页 2:应用唤起 3:应用下载
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 按钮文案
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 按钮跳转地址
	JumpUrl string `protobuf:"bytes,3,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 跳转监测链接
	ReportUrls string `protobuf:"bytes,4,opt,name=report_urls,json=reportUrls,proto3" json:"report_urls,omitempty"`
	// 唤起schema
	DlsucCallupUrl string `protobuf:"bytes,5,opt,name=dlsuc_callup_url,json=dlsucCallupUrl,proto3" json:"dlsuc_callup_url,omitempty"`
	//游戏id
	GameId int32 `protobuf:"varint,6,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	//游戏监控字段
	GameMonitorParam     string   `protobuf:"bytes,7,opt,name=game_monitor_param,json=gameMonitorParam,proto3" json:"game_monitor_param,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdButtonDto) Reset()         { *m = AdButtonDto{} }
func (m *AdButtonDto) String() string { return proto.CompactTextString(m) }
func (*AdButtonDto) ProtoMessage()    {}
func (*AdButtonDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{10}
}

func (m *AdButtonDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdButtonDto.Unmarshal(m, b)
}
func (m *AdButtonDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdButtonDto.Marshal(b, m, deterministic)
}
func (m *AdButtonDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdButtonDto.Merge(m, src)
}
func (m *AdButtonDto) XXX_Size() int {
	return xxx_messageInfo_AdButtonDto.Size(m)
}
func (m *AdButtonDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdButtonDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdButtonDto proto.InternalMessageInfo

func (m *AdButtonDto) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *AdButtonDto) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AdButtonDto) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *AdButtonDto) GetReportUrls() string {
	if m != nil {
		return m.ReportUrls
	}
	return ""
}

func (m *AdButtonDto) GetDlsucCallupUrl() string {
	if m != nil {
		return m.DlsucCallupUrl
	}
	return ""
}

func (m *AdButtonDto) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *AdButtonDto) GetGameMonitorParam() string {
	if m != nil {
		return m.GameMonitorParam
	}
	return ""
}

// 商业标信息
type AdBusinessMarkDto struct {
	// 商业标样式
	// 0:不展示标 1:实心+文字 2:空心框+文字 3:纯文字标 4:纯图片标
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 商业标文案
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	// 商业标文案颜色,如#80FFFFFF RGBA
	TextColor string `protobuf:"bytes,3,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	// 夜间模式文字色
	TextColorNight string `protobuf:"bytes,4,opt,name=text_color_night,json=textColorNight,proto3" json:"text_color_night,omitempty"`
	// 背景色
	BgColor string `protobuf:"bytes,5,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	// 夜间模式背景色
	BgColorNight string `protobuf:"bytes,6,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	// 边框色
	BorderColor string `protobuf:"bytes,7,opt,name=border_color,json=borderColor,proto3" json:"border_color,omitempty"`
	// 夜间模式边框色
	BorderColorNight string `protobuf:"bytes,8,opt,name=border_color_night,json=borderColorNight,proto3" json:"border_color_night,omitempty"`
	// 图片商业标
	ImgUrl string `protobuf:"bytes,9,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	// 图片高度
	ImgHeight int32 `protobuf:"varint,10,opt,name=img_height,json=imgHeight,proto3" json:"img_height,omitempty"`
	// 图片宽度
	ImgWidth int32 `protobuf:"varint,11,opt,name=img_width,json=imgWidth,proto3" json:"img_width,omitempty"`
	//
	BgBorderColor        string   `protobuf:"bytes,12,opt,name=bg_border_color,json=bgBorderColor,proto3" json:"bg_border_color,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdBusinessMarkDto) Reset()         { *m = AdBusinessMarkDto{} }
func (m *AdBusinessMarkDto) String() string { return proto.CompactTextString(m) }
func (*AdBusinessMarkDto) ProtoMessage()    {}
func (*AdBusinessMarkDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{11}
}

func (m *AdBusinessMarkDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdBusinessMarkDto.Unmarshal(m, b)
}
func (m *AdBusinessMarkDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdBusinessMarkDto.Marshal(b, m, deterministic)
}
func (m *AdBusinessMarkDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdBusinessMarkDto.Merge(m, src)
}
func (m *AdBusinessMarkDto) XXX_Size() int {
	return xxx_messageInfo_AdBusinessMarkDto.Size(m)
}
func (m *AdBusinessMarkDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdBusinessMarkDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdBusinessMarkDto proto.InternalMessageInfo

func (m *AdBusinessMarkDto) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *AdBusinessMarkDto) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AdBusinessMarkDto) GetTextColor() string {
	if m != nil {
		return m.TextColor
	}
	return ""
}

func (m *AdBusinessMarkDto) GetTextColorNight() string {
	if m != nil {
		return m.TextColorNight
	}
	return ""
}

func (m *AdBusinessMarkDto) GetBgColor() string {
	if m != nil {
		return m.BgColor
	}
	return ""
}

func (m *AdBusinessMarkDto) GetBgColorNight() string {
	if m != nil {
		return m.BgColorNight
	}
	return ""
}

func (m *AdBusinessMarkDto) GetBorderColor() string {
	if m != nil {
		return m.BorderColor
	}
	return ""
}

func (m *AdBusinessMarkDto) GetBorderColorNight() string {
	if m != nil {
		return m.BorderColorNight
	}
	return ""
}

func (m *AdBusinessMarkDto) GetImgUrl() string {
	if m != nil {
		return m.ImgUrl
	}
	return ""
}

func (m *AdBusinessMarkDto) GetImgHeight() int32 {
	if m != nil {
		return m.ImgHeight
	}
	return 0
}

func (m *AdBusinessMarkDto) GetImgWidth() int32 {
	if m != nil {
		return m.ImgWidth
	}
	return 0
}

func (m *AdBusinessMarkDto) GetBgBorderColor() string {
	if m != nil {
		return m.BgBorderColor
	}
	return ""
}

// 自动播放视频
type AdAutoPlayVideoDto struct {
	// avid
	Avid int64 `protobuf:"varint,1,opt,name=avid,proto3" json:"avid,omitempty"`
	// cid
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	// 分P
	Page int64 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	//
	From string `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	// 是否自动播放
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// 是否自动播放
	Cover string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	// 是否自动播放
	AutoPlay bool `protobuf:"varint,7,opt,name=auto_play,json=autoPlay,proto3" json:"auto_play,omitempty"`
	// 按钮是否动态变色
	BtnDycColor bool `protobuf:"varint,8,opt,name=btn_dyc_color,json=btnDycColor,proto3" json:"btn_dyc_color,omitempty"`
	// 按钮动态变色时间 ms
	BtnDycTime int32 `protobuf:"varint,9,opt,name=btn_dyc_time,json=btnDycTime,proto3" json:"btn_dyc_time,omitempty"`
	// 用于做联播是否是同一个视频的id
	BizId int64 `protobuf:"varint,10,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	// 开始播放三方监控
	Process0Urls []string `protobuf:"bytes,11,rep,name=process0_urls,json=process0Urls,proto3" json:"process0_urls,omitempty"`
	// 播放3S三方监控
	Play_3SUrls []string `protobuf:"bytes,12,rep,name=play_3s_urls,json=play3sUrls,proto3" json:"play_3s_urls,omitempty"`
	// 播放5S三方监控
	Play_5SUrls []string `protobuf:"bytes,13,rep,name=play_5s_urls,json=play5sUrls,proto3" json:"play_5s_urls,omitempty"`
	// 横竖屏
	Orientation          int32    `protobuf:"varint,14,opt,name=orientation,proto3" json:"orientation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdAutoPlayVideoDto) Reset()         { *m = AdAutoPlayVideoDto{} }
func (m *AdAutoPlayVideoDto) String() string { return proto.CompactTextString(m) }
func (*AdAutoPlayVideoDto) ProtoMessage()    {}
func (*AdAutoPlayVideoDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{12}
}

func (m *AdAutoPlayVideoDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdAutoPlayVideoDto.Unmarshal(m, b)
}
func (m *AdAutoPlayVideoDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdAutoPlayVideoDto.Marshal(b, m, deterministic)
}
func (m *AdAutoPlayVideoDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdAutoPlayVideoDto.Merge(m, src)
}
func (m *AdAutoPlayVideoDto) XXX_Size() int {
	return xxx_messageInfo_AdAutoPlayVideoDto.Size(m)
}
func (m *AdAutoPlayVideoDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdAutoPlayVideoDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdAutoPlayVideoDto proto.InternalMessageInfo

func (m *AdAutoPlayVideoDto) GetAvid() int64 {
	if m != nil {
		return m.Avid
	}
	return 0
}

func (m *AdAutoPlayVideoDto) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *AdAutoPlayVideoDto) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *AdAutoPlayVideoDto) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *AdAutoPlayVideoDto) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AdAutoPlayVideoDto) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *AdAutoPlayVideoDto) GetAutoPlay() bool {
	if m != nil {
		return m.AutoPlay
	}
	return false
}

func (m *AdAutoPlayVideoDto) GetBtnDycColor() bool {
	if m != nil {
		return m.BtnDycColor
	}
	return false
}

func (m *AdAutoPlayVideoDto) GetBtnDycTime() int32 {
	if m != nil {
		return m.BtnDycTime
	}
	return 0
}

func (m *AdAutoPlayVideoDto) GetBizId() int64 {
	if m != nil {
		return m.BizId
	}
	return 0
}

func (m *AdAutoPlayVideoDto) GetProcess0Urls() []string {
	if m != nil {
		return m.Process0Urls
	}
	return nil
}

func (m *AdAutoPlayVideoDto) GetPlay_3SUrls() []string {
	if m != nil {
		return m.Play_3SUrls
	}
	return nil
}

func (m *AdAutoPlayVideoDto) GetPlay_5SUrls() []string {
	if m != nil {
		return m.Play_5SUrls
	}
	return nil
}

func (m *AdAutoPlayVideoDto) GetOrientation() int32 {
	if m != nil {
		return m.Orientation
	}
	return 0
}

// 反馈面板功能模块
type AdFeedbackPanelDto struct {
	// 面板类型，广告、推广
	PanelTypeText string `protobuf:"bytes,1,opt,name=panel_type_text,json=panelTypeText,proto3" json:"panel_type_text,omitempty"`
	// 反馈面版信息
	FeedbackPanelDetail  []*AdFeedbackPanelModuleDto `protobuf:"bytes,2,rep,name=feedback_panel_detail,json=feedbackPanelDetail,proto3" json:"feedback_panel_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *AdFeedbackPanelDto) Reset()         { *m = AdFeedbackPanelDto{} }
func (m *AdFeedbackPanelDto) String() string { return proto.CompactTextString(m) }
func (*AdFeedbackPanelDto) ProtoMessage()    {}
func (*AdFeedbackPanelDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{13}
}

func (m *AdFeedbackPanelDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdFeedbackPanelDto.Unmarshal(m, b)
}
func (m *AdFeedbackPanelDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdFeedbackPanelDto.Marshal(b, m, deterministic)
}
func (m *AdFeedbackPanelDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdFeedbackPanelDto.Merge(m, src)
}
func (m *AdFeedbackPanelDto) XXX_Size() int {
	return xxx_messageInfo_AdFeedbackPanelDto.Size(m)
}
func (m *AdFeedbackPanelDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdFeedbackPanelDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdFeedbackPanelDto proto.InternalMessageInfo

func (m *AdFeedbackPanelDto) GetPanelTypeText() string {
	if m != nil {
		return m.PanelTypeText
	}
	return ""
}

func (m *AdFeedbackPanelDto) GetFeedbackPanelDetail() []*AdFeedbackPanelModuleDto {
	if m != nil {
		return m.FeedbackPanelDetail
	}
	return nil
}

// 反馈面版信息
type AdFeedbackPanelModuleDto struct {
	// 模块id
	ModuleId int32 `protobuf:"varint,1,opt,name=module_id,json=moduleId,proto3" json:"module_id,omitempty"`
	// icon url
	IconUrl string `protobuf:"bytes,2,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	// 跳转类型
	// 1:气泡 2:H5
	JumpType int32 `protobuf:"varint,3,opt,name=jump_type,json=jumpType,proto3" json:"jump_type,omitempty"`
	// 跳转地址
	JumpUrl string `protobuf:"bytes,4,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url,omitempty"`
	// 文案
	Text string `protobuf:"bytes,5,opt,name=text,proto3" json:"text,omitempty"`
	// 二级文案数组
	SecondaryPanel       []*AdSecondFeedbackPanelDto `protobuf:"bytes,6,rep,name=secondary_panel,json=secondaryPanel,proto3" json:"secondary_panel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *AdFeedbackPanelModuleDto) Reset()         { *m = AdFeedbackPanelModuleDto{} }
func (m *AdFeedbackPanelModuleDto) String() string { return proto.CompactTextString(m) }
func (*AdFeedbackPanelModuleDto) ProtoMessage()    {}
func (*AdFeedbackPanelModuleDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{14}
}

func (m *AdFeedbackPanelModuleDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdFeedbackPanelModuleDto.Unmarshal(m, b)
}
func (m *AdFeedbackPanelModuleDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdFeedbackPanelModuleDto.Marshal(b, m, deterministic)
}
func (m *AdFeedbackPanelModuleDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdFeedbackPanelModuleDto.Merge(m, src)
}
func (m *AdFeedbackPanelModuleDto) XXX_Size() int {
	return xxx_messageInfo_AdFeedbackPanelModuleDto.Size(m)
}
func (m *AdFeedbackPanelModuleDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdFeedbackPanelModuleDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdFeedbackPanelModuleDto proto.InternalMessageInfo

func (m *AdFeedbackPanelModuleDto) GetModuleId() int32 {
	if m != nil {
		return m.ModuleId
	}
	return 0
}

func (m *AdFeedbackPanelModuleDto) GetIconUrl() string {
	if m != nil {
		return m.IconUrl
	}
	return ""
}

func (m *AdFeedbackPanelModuleDto) GetJumpType() int32 {
	if m != nil {
		return m.JumpType
	}
	return 0
}

func (m *AdFeedbackPanelModuleDto) GetJumpUrl() string {
	if m != nil {
		return m.JumpUrl
	}
	return ""
}

func (m *AdFeedbackPanelModuleDto) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AdFeedbackPanelModuleDto) GetSecondaryPanel() []*AdSecondFeedbackPanelDto {
	if m != nil {
		return m.SecondaryPanel
	}
	return nil
}

// 二级文案
type AdSecondFeedbackPanelDto struct {
	// 屏蔽理由id
	ReasonId int32 `protobuf:"varint,1,opt,name=reason_id,json=reasonId,proto3" json:"reason_id,omitempty"`
	// 理由文案
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdSecondFeedbackPanelDto) Reset()         { *m = AdSecondFeedbackPanelDto{} }
func (m *AdSecondFeedbackPanelDto) String() string { return proto.CompactTextString(m) }
func (*AdSecondFeedbackPanelDto) ProtoMessage()    {}
func (*AdSecondFeedbackPanelDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{15}
}

func (m *AdSecondFeedbackPanelDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdSecondFeedbackPanelDto.Unmarshal(m, b)
}
func (m *AdSecondFeedbackPanelDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdSecondFeedbackPanelDto.Marshal(b, m, deterministic)
}
func (m *AdSecondFeedbackPanelDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdSecondFeedbackPanelDto.Merge(m, src)
}
func (m *AdSecondFeedbackPanelDto) XXX_Size() int {
	return xxx_messageInfo_AdSecondFeedbackPanelDto.Size(m)
}
func (m *AdSecondFeedbackPanelDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdSecondFeedbackPanelDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdSecondFeedbackPanelDto proto.InternalMessageInfo

func (m *AdSecondFeedbackPanelDto) GetReasonId() int32 {
	if m != nil {
		return m.ReasonId
	}
	return 0
}

func (m *AdSecondFeedbackPanelDto) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// 开放平台商品
type AdGoodDto struct {
	// 电商商品ID
	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// 电商SKU ID
	SkuId int64 `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	// 店铺ID
	ShopId int64 `protobuf:"varint,3,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	// SKU库存
	SkuNum               int64    `protobuf:"varint,4,opt,name=sku_num,json=skuNum,proto3" json:"sku_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdGoodDto) Reset()         { *m = AdGoodDto{} }
func (m *AdGoodDto) String() string { return proto.CompactTextString(m) }
func (*AdGoodDto) ProtoMessage()    {}
func (*AdGoodDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{16}
}

func (m *AdGoodDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdGoodDto.Unmarshal(m, b)
}
func (m *AdGoodDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdGoodDto.Marshal(b, m, deterministic)
}
func (m *AdGoodDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdGoodDto.Merge(m, src)
}
func (m *AdGoodDto) XXX_Size() int {
	return xxx_messageInfo_AdGoodDto.Size(m)
}
func (m *AdGoodDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdGoodDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdGoodDto proto.InternalMessageInfo

func (m *AdGoodDto) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *AdGoodDto) GetSkuId() int64 {
	if m != nil {
		return m.SkuId
	}
	return 0
}

func (m *AdGoodDto) GetShopId() int64 {
	if m != nil {
		return m.ShopId
	}
	return 0
}

func (m *AdGoodDto) GetSkuNum() int64 {
	if m != nil {
		return m.SkuNum
	}
	return 0
}

//
type QualityInfo struct {
	//
	Icon string `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`
	//
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	//
	IsBg bool `protobuf:"varint,3,opt,name=is_bg,json=isBg,proto3" json:"is_bg,omitempty"`
	//
	BgColor string `protobuf:"bytes,4,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	//
	BgColorNight         string   `protobuf:"bytes,5,opt,name=bg_color_night,json=bgColorNight,proto3" json:"bg_color_night,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QualityInfo) Reset()         { *m = QualityInfo{} }
func (m *QualityInfo) String() string { return proto.CompactTextString(m) }
func (*QualityInfo) ProtoMessage()    {}
func (*QualityInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{17}
}

func (m *QualityInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QualityInfo.Unmarshal(m, b)
}
func (m *QualityInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QualityInfo.Marshal(b, m, deterministic)
}
func (m *QualityInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QualityInfo.Merge(m, src)
}
func (m *QualityInfo) XXX_Size() int {
	return xxx_messageInfo_QualityInfo.Size(m)
}
func (m *QualityInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_QualityInfo.DiscardUnknown(m)
}

var xxx_messageInfo_QualityInfo proto.InternalMessageInfo

func (m *QualityInfo) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *QualityInfo) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *QualityInfo) GetIsBg() bool {
	if m != nil {
		return m.IsBg
	}
	return false
}

func (m *QualityInfo) GetBgColor() string {
	if m != nil {
		return m.BgColor
	}
	return ""
}

func (m *QualityInfo) GetBgColorNight() string {
	if m != nil {
		return m.BgColorNight
	}
	return ""
}

// 广告主信息
type AdverDto struct {
	//
	AdverId int64 `protobuf:"varint,1,opt,name=adver_id,json=adverId,proto3" json:"adver_id,omitempty"`
	//
	AdverLogo string `protobuf:"bytes,2,opt,name=adver_logo,json=adverLogo,proto3" json:"adver_logo,omitempty"`
	//
	AdverName string `protobuf:"bytes,3,opt,name=adver_name,json=adverName,proto3" json:"adver_name,omitempty"`
	//
	AdverType int32 `protobuf:"varint,4,opt,name=adver_type,json=adverType,proto3" json:"adver_type,omitempty"`
	//
	AdverPageUrl string `protobuf:"bytes,5,opt,name=adver_page_url,json=adverPageUrl,proto3" json:"adver_page_url,omitempty"`
	//
	AdverDesc            string   `protobuf:"bytes,6,opt,name=adver_desc,json=adverDesc,proto3" json:"adver_desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdverDto) Reset()         { *m = AdverDto{} }
func (m *AdverDto) String() string { return proto.CompactTextString(m) }
func (*AdverDto) ProtoMessage()    {}
func (*AdverDto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4674a5d196ac4afc, []int{18}
}

func (m *AdverDto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdverDto.Unmarshal(m, b)
}
func (m *AdverDto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdverDto.Marshal(b, m, deterministic)
}
func (m *AdverDto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdverDto.Merge(m, src)
}
func (m *AdverDto) XXX_Size() int {
	return xxx_messageInfo_AdverDto.Size(m)
}
func (m *AdverDto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdverDto.DiscardUnknown(m)
}

var xxx_messageInfo_AdverDto proto.InternalMessageInfo

func (m *AdverDto) GetAdverId() int64 {
	if m != nil {
		return m.AdverId
	}
	return 0
}

func (m *AdverDto) GetAdverLogo() string {
	if m != nil {
		return m.AdverLogo
	}
	return ""
}

func (m *AdverDto) GetAdverName() string {
	if m != nil {
		return m.AdverName
	}
	return ""
}

func (m *AdverDto) GetAdverType() int32 {
	if m != nil {
		return m.AdverType
	}
	return 0
}

func (m *AdverDto) GetAdverPageUrl() string {
	if m != nil {
		return m.AdverPageUrl
	}
	return ""
}

func (m *AdverDto) GetAdverDesc() string {
	if m != nil {
		return m.AdverDesc
	}
	return ""
}

func init() {
	proto.RegisterType((*AdsControlDto)(nil), "bilibili.ad.v1.AdsControlDto")
	proto.RegisterType((*AdOgvEpDto)(nil), "bilibili.ad.v1.AdOgvEpDto")
	proto.RegisterType((*SourceContentDto)(nil), "bilibili.ad.v1.SourceContentDto")
	proto.RegisterType((*AdDto)(nil), "bilibili.ad.v1.AdDto")
	proto.RegisterType((*AdContentExtraDto)(nil), "bilibili.ad.v1.AdContentExtraDto")
	proto.RegisterType((*CreativeDto)(nil), "bilibili.ad.v1.CreativeDto")
	proto.RegisterType((*AppPackageDto)(nil), "bilibili.ad.v1.AppPackageDto")
	proto.RegisterType((*AdCardDto)(nil), "bilibili.ad.v1.AdCardDto")
	proto.RegisterType((*AdShareInfoDto)(nil), "bilibili.ad.v1.AdShareInfoDto")
	proto.RegisterType((*AdCoverDto)(nil), "bilibili.ad.v1.AdCoverDto")
	proto.RegisterType((*AdButtonDto)(nil), "bilibili.ad.v1.AdButtonDto")
	proto.RegisterType((*AdBusinessMarkDto)(nil), "bilibili.ad.v1.AdBusinessMarkDto")
	proto.RegisterType((*AdAutoPlayVideoDto)(nil), "bilibili.ad.v1.AdAutoPlayVideoDto")
	proto.RegisterType((*AdFeedbackPanelDto)(nil), "bilibili.ad.v1.AdFeedbackPanelDto")
	proto.RegisterType((*AdFeedbackPanelModuleDto)(nil), "bilibili.ad.v1.AdFeedbackPanelModuleDto")
	proto.RegisterType((*AdSecondFeedbackPanelDto)(nil), "bilibili.ad.v1.AdSecondFeedbackPanelDto")
	proto.RegisterType((*AdGoodDto)(nil), "bilibili.ad.v1.AdGoodDto")
	proto.RegisterType((*QualityInfo)(nil), "bilibili.ad.v1.QualityInfo")
	proto.RegisterType((*AdverDto)(nil), "bilibili.ad.v1.AdverDto")
}

func init() { proto.RegisterFile("grpc_api/bilibili/ad/v1/ad.proto", fileDescriptor_4674a5d196ac4afc) }

var fileDescriptor_4674a5d196ac4afc = []byte{
	// 2990 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x59, 0xdb, 0x72, 0xdc, 0xc6,
	0xd1, 0x2e, 0x6a, 0xb9, 0xa7, 0xde, 0x5d, 0x8a, 0x84, 0x4e, 0x10, 0xf5, 0x4b, 0xa2, 0x56, 0xb6,
	0x7f, 0xda, 0x96, 0x49, 0x9b, 0xb2, 0xea, 0xff, 0x73, 0xaa, 0x32, 0x45, 0xca, 0xf1, 0x26, 0x92,
	0x4d, 0x2f, 0x65, 0xf9, 0x26, 0x55, 0xa8, 0x59, 0xcc, 0x10, 0x1c, 0x13, 0xc0, 0xc0, 0x03, 0x80,
	0x14, 0xf5, 0x00, 0xc9, 0x85, 0x2f, 0x72, 0x91, 0x9b, 0x54, 0x1e, 0x23, 0x2f, 0x91, 0xf7, 0xc8,
	0x03, 0xa4, 0x2a, 0x17, 0xb9, 0x4f, 0x75, 0xf7, 0x00, 0x0b, 0x1e, 0x64, 0x27, 0x17, 0x2c, 0x62,
	0xbe, 0x3e, 0xcc, 0x4c, 0x77, 0x4f, 0x77, 0xcf, 0x2c, 0xac, 0x45, 0x36, 0x0b, 0x03, 0x91, 0xe9,
	0xcd, 0x99, 0x8e, 0x35, 0xfe, 0x6d, 0x0a, 0xb9, 0x79, 0xfc, 0xc9, 0xa6, 0x90, 0x1b, 0x99, 0x35,
	0x85, 0xf1, 0x96, 0x2a, 0xc2, 0x86, 0x90, 0x1b, 0xc7, 0x9f, 0xac, 0xde, 0x8b, 0x8c, 0x89, 0x62,
	0xb5, 0x49, 0xd4, 0x59, 0x79, 0xb0, 0x79, 0x62, 0x45, 0x96, 0x29, 0x9b, 0x33, 0xff, 0x38, 0x85,
	0xd1, 0xb6, 0xcc, 0x77, 0x4c, 0x5a, 0x58, 0x13, 0xef, 0x16, 0xc6, 0xbb, 0x03, 0xfd, 0x43, 0x91,
	0x07, 0x52, 0xa4, 0x49, 0xe9, 0x2f, 0xac, 0x2d, 0xac, 0xb7, 0xa7, 0xbd, 0x43, 0x91, 0xef, 0xe2,
	0xd8, 0xf3, 0x60, 0x31, 0xd4, 0x32, 0xf7, 0xaf, 0xac, 0xb5, 0xd6, 0x5b, 0x53, 0xfa, 0xf6, 0x1e,
	0x41, 0x4b, 0x65, 0xb9, 0xdf, 0x5a, 0x6b, 0xad, 0x0f, 0xb6, 0x56, 0x37, 0xce, 0xce, 0xbf, 0xb1,
	0x2d, 0xbf, 0x8a, 0x8e, 0x9f, 0x65, 0xbb, 0x85, 0x99, 0x22, 0xdb, 0xf8, 0x19, 0xc0, 0x1c, 0x42,
	0x7d, 0x2a, 0xd3, 0x92, 0xe6, 0x69, 0x4d, 0xe9, 0xdb, 0x7b, 0x08, 0x23, 0x5c, 0x80, 0x55, 0xa1,
	0x49, 0x12, 0x95, 0x4a, 0xff, 0xca, 0xda, 0xc2, 0x7a, 0x6f, 0x3a, 0x3c, 0x14, 0xf9, 0xb4, 0xc2,
	0xc6, 0xff, 0xb8, 0x02, 0xcb, 0xfb, 0xa6, 0xb4, 0xa1, 0xc2, 0xa5, 0xab, 0xb4, 0x40, 0x6d, 0x77,
	0x01, 0xac, 0xfa, 0xbe, 0x54, 0x79, 0x11, 0x38, 0x9d, 0xfd, 0x69, 0xdf, 0x21, 0x13, 0x89, 0x3b,
	0xcb, 0x49, 0x04, 0xa9, 0x57, 0x78, 0x67, 0x0c, 0x4c, 0xa4, 0x77, 0x1f, 0x06, 0x56, 0xcd, 0xc9,
	0x2d, 0x22, 0x43, 0x05, 0x4d, 0xa4, 0xb7, 0x0a, 0x7d, 0x9d, 0x07, 0x42, 0x06, 0xb1, 0x09, 0xfd,
	0x45, 0x5a, 0x52, 0x57, 0xe7, 0xdb, 0xf2, 0xb9, 0x09, 0xbd, 0x5f, 0xc2, 0x20, 0x57, 0xf6, 0x58,
	0xd9, 0xa0, 0x38, 0xcd, 0x94, 0xdf, 0x5e, 0x5b, 0x58, 0x1f, 0x6c, 0xdd, 0xd9, 0x60, 0xd3, 0x6f,
	0x54, 0xa6, 0xdf, 0x98, 0xa4, 0xc5, 0xe3, 0xad, 0x57, 0x22, 0x2e, 0xd5, 0x14, 0x98, 0xff, 0xe5,
	0x69, 0xa6, 0x70, 0x5d, 0x61, 0xac, 0x55, 0x5a, 0x04, 0x3a, 0xf3, 0x3b, 0xb4, 0xea, 0x1e, 0x03,
	0x93, 0xcc, 0xfb, 0x39, 0x40, 0x28, 0xac, 0x0c, 0x74, 0x2a, 0xd5, 0x6b, 0xbf, 0xfb, 0xd3, 0x9a,
	0xfb, 0xc8, 0x3e, 0x41, 0x6e, 0xef, 0x3a, 0xb4, 0x59, 0xac, 0x47, 0xbb, 0xe1, 0x81, 0xf7, 0x29,
	0x80, 0x90, 0x41, 0xc8, 0x66, 0xf3, 0xfb, 0xa4, 0xf1, 0xc6, 0x45, 0xb7, 0xa1, 0xc7, 0xfa, 0x42,
	0x3a, 0xf3, 0x8e, 0xff, 0x75, 0x05, 0xda, 0x04, 0xa2, 0xa5, 0x42, 0xab, 0x44, 0xa1, 0x8f, 0x55,
	0x50, 0xbb, 0x0e, 0x2a, 0x68, 0x22, 0xbd, 0x6b, 0xd0, 0xc6, 0x09, 0x66, 0x64, 0xe3, 0xfe, 0x74,
	0x51, 0xc8, 0x9d, 0x99, 0xf7, 0x7f, 0xd0, 0x56, 0xaf, 0x0b, 0x2b, 0xc8, 0xb2, 0x83, 0xad, 0x07,
	0x17, 0x27, 0x74, 0x33, 0x3d, 0x43, 0x2e, 0x9c, 0x9c, 0xf9, 0xbd, 0x5b, 0xd0, 0x0d, 0x93, 0x20,
	0x11, 0xf6, 0x88, 0xac, 0xde, 0x9e, 0x76, 0xc2, 0xe4, 0x85, 0xb0, 0x47, 0xde, 0x3d, 0x18, 0x14,
	0x26, 0x0b, 0x8e, 0xb5, 0x3a, 0xc1, 0x75, 0xb4, 0x69, 0x1d, 0xfd, 0xc2, 0x64, 0xaf, 0xb4, 0x3a,
	0x99, 0x50, 0x1c, 0xd5, 0xeb, 0x24, 0xb7, 0x74, 0x48, 0x7c, 0x58, 0x81, 0xb5, 0xed, 0xd1, 0xbc,
	0xc4, 0xd0, 0xe5, 0x98, 0x40, 0x80, 0x88, 0xef, 0xc2, 0x52, 0xad, 0x21, 0x2f, 0x4e, 0x63, 0xe5,
	0x0c, 0x59, 0xeb, 0xdd, 0x47, 0x10, 0xf7, 0x4b, 0x91, 0x41, 0xb6, 0x6c, 0x4f, 0x17, 0x31, 0x2a,
	0xbc, 0xcf, 0x61, 0xb9, 0x96, 0xad, 0x6c, 0x0d, 0xce, 0x7b, 0xe7, 0xb6, 0xbe, 0xe3, 0xf8, 0x70,
	0xd3, 0x57, 0x2b, 0xa1, 0xca, 0xee, 0x7f, 0x06, 0x58, 0xb9, 0x60, 0x1b, 0xef, 0x26, 0x74, 0x62,
	0x71, 0x6a, 0xca, 0xc2, 0x45, 0xb9, 0x1b, 0x51, 0x88, 0x1f, 0x9a, 0x93, 0xa0, 0xb4, 0x31, 0x1f,
	0xd2, 0xfe, 0xb4, 0x87, 0xc0, 0x37, 0x36, 0xce, 0xf1, 0x78, 0x84, 0xb1, 0x0e, 0x8f, 0x98, 0xda,
	0x22, 0x6a, 0x9f, 0x10, 0x22, 0x6f, 0xc2, 0x75, 0x3a, 0xf4, 0x41, 0xac, 0xf3, 0x22, 0x98, 0xab,
	0x59, 0x24, 0xc6, 0x15, 0xa2, 0x3d, 0xd7, 0x79, 0xb1, 0x5f, 0xe9, 0xfb, 0x04, 0x6e, 0x34, 0x04,
	0x1a, 0xaa, 0xdb, 0x24, 0xe1, 0xd5, 0x12, 0x3b, 0xf5, 0x1c, 0x8f, 0xe1, 0x26, 0x8b, 0x48, 0x55,
	0x08, 0x1d, 0x37, 0x66, 0xe9, 0x90, 0xcc, 0x35, 0xa2, 0xee, 0x12, 0xb1, 0x9e, 0xa7, 0x16, 0xc2,
	0x14, 0x15, 0xab, 0xd3, 0x40, 0x48, 0xc9, 0x42, 0xdd, 0x86, 0xd0, 0x4b, 0x26, 0x6e, 0x4b, 0x49,
	0x42, 0x0f, 0x60, 0x54, 0xe6, 0x0a, 0xcf, 0xeb, 0x89, 0x9a, 0x05, 0xc7, 0x5b, 0xe4, 0xba, 0xde,
	0x14, 0xca, 0x5c, 0x6d, 0xcb, 0x6f, 0xd5, 0xec, 0xd5, 0x16, 0xba, 0xd7, 0x64, 0x2a, 0x0d, 0x4e,
	0x0e, 0x75, 0xa1, 0x70, 0x0f, 0x7e, 0x9f, 0xf4, 0x8d, 0x10, 0xfd, 0xb6, 0x02, 0xbd, 0xe7, 0xe0,
	0x49, 0x73, 0x92, 0xc6, 0x06, 0x75, 0xd5, 0xac, 0xec, 0xcb, 0xbb, 0x17, 0xc2, 0x38, 0xcb, 0xf6,
	0x44, 0x78, 0x24, 0x22, 0xf2, 0xe6, 0x4a, 0x25, 0x38, 0xd7, 0xf6, 0x11, 0x2c, 0x62, 0x7c, 0xf9,
	0x03, 0x92, 0xbf, 0x7d, 0xc9, 0x31, 0x10, 0x96, 0xce, 0x1e, 0xb1, 0x71, 0x5a, 0xca, 0x8c, 0x2d,
	0x82, 0x42, 0x27, 0xca, 0x1f, 0x56, 0x69, 0x09, 0xa1, 0x97, 0x3a, 0x51, 0xde, 0x87, 0xb0, 0x22,
	0xb2, 0x2c, 0x2f, 0x8c, 0x55, 0x41, 0x66, 0xb5, 0xb1, 0xba, 0x38, 0xf5, 0x47, 0xc4, 0xb6, 0x5c,
	0x11, 0xf6, 0x1c, 0x8e, 0x11, 0x90, 0x8b, 0x58, 0xe5, 0x1c, 0xee, 0x4b, 0xc4, 0xd5, 0x27, 0x84,
	0xe2, 0x7d, 0x13, 0xae, 0x65, 0x56, 0xd1, 0x46, 0x63, 0x91, 0x4a, 0x9d, 0x46, 0x99, 0x88, 0x94,
	0x7f, 0x95, 0xf8, 0x3c, 0x47, 0x7a, 0x3e, 0xa7, 0x78, 0xef, 0xc3, 0x72, 0x9e, 0xa9, 0x50, 0x8b,
	0x18, 0xf3, 0x53, 0x99, 0x17, 0xf6, 0xd4, 0x5f, 0x26, 0x3b, 0x5f, 0x75, 0xf8, 0xc4, 0xc1, 0xde,
	0x16, 0xdc, 0x38, 0xcf, 0x1a, 0x14, 0x3a, 0xcb, 0xfd, 0x15, 0x0a, 0xe0, 0x6b, 0xe7, 0xf8, 0x5f,
	0xea, 0x2c, 0xf7, 0x3e, 0x85, 0x9b, 0x2a, 0x15, 0xb3, 0x58, 0x05, 0xb5, 0x03, 0xa4, 0x16, 0xb1,
	0x89, 0x7c, 0x8f, 0x26, 0xb9, 0xce, 0xd4, 0x5d, 0x47, 0xdc, 0x25, 0x9a, 0xf7, 0x00, 0x86, 0x4e,
	0x2a, 0x3f, 0x14, 0x56, 0xf9, 0xd7, 0x88, 0x77, 0xc0, 0xd8, 0x3e, 0x42, 0xde, 0xc7, 0x70, 0xbd,
	0xcc, 0xde, 0x98, 0x54, 0x05, 0x2a, 0x2d, 0xac, 0x48, 0x43, 0x97, 0x21, 0xae, 0xf3, 0x4e, 0x99,
	0xf6, 0xcc, 0x91, 0xc8, 0x34, 0x3f, 0x83, 0xdb, 0xe7, 0x25, 0x9c, 0x5f, 0xb4, 0xf4, 0x6f, 0x90,
	0xd8, 0xcd, 0xb3, 0x62, 0x53, 0x22, 0x4f, 0xa4, 0xf7, 0x2b, 0x00, 0x5a, 0x48, 0xa0, 0xd3, 0x03,
	0xe3, 0xdf, 0x24, 0xbf, 0xdf, 0xbb, 0xe8, 0x77, 0x5a, 0xd9, 0x24, 0x3d, 0x30, 0x94, 0x78, 0xf3,
	0x6a, 0xe4, 0xbd, 0x07, 0x57, 0x0b, 0x93, 0x51, 0x96, 0xcb, 0x74, 0x88, 0x71, 0xef, 0xdf, 0x22,
	0x93, 0x8d, 0x1c, 0xbc, 0xa7, 0xc3, 0x6f, 0x6c, 0xec, 0x7d, 0x00, 0x2b, 0x15, 0xdf, 0xb1, 0x96,
	0xca, 0x10, 0xa7, 0x4f, 0x9c, 0x95, 0x82, 0x57, 0x88, 0x23, 0x6f, 0x9d, 0x09, 0x84, 0x55, 0xc2,
	0xbf, 0xcd, 0x71, 0x40, 0xc8, 0xb6, 0x55, 0x94, 0x72, 0xf3, 0x43, 0x93, 0xe1, 0xd6, 0x56, 0x29,
	0xab, 0x76, 0x70, 0x38, 0x91, 0xde, 0x0d, 0xe8, 0x94, 0x59, 0x90, 0x68, 0xe9, 0xdf, 0x21, 0xbc,
	0x5d, 0x66, 0x2f, 0xb4, 0xf4, 0x6e, 0x43, 0xaf, 0xb0, 0x22, 0x3c, 0x42, 0x81, 0xff, 0xa1, 0x19,
	0xbb, 0x34, 0x9e, 0x48, 0xef, 0x17, 0xb0, 0x5a, 0x39, 0x83, 0x42, 0x54, 0x6a, 0xab, 0xc2, 0x22,
	0x88, 0x45, 0x99, 0x86, 0x87, 0xfe, 0x5d, 0x9a, 0xf9, 0x96, 0x73, 0x0d, 0x32, 0xec, 0x12, 0xfd,
	0x39, 0x91, 0x71, 0x99, 0x99, 0x35, 0xb2, 0x0c, 0xc9, 0xca, 0xf7, 0x38, 0xc1, 0x3b, 0x64, 0x22,
	0xc7, 0x7f, 0x68, 0xc1, 0xa0, 0x91, 0x3b, 0xb1, 0xdc, 0x15, 0xba, 0x88, 0x95, 0xcb, 0x89, 0x3c,
	0xf0, 0xd6, 0x60, 0x20, 0x55, 0x1e, 0x5a, 0x9d, 0x15, 0xda, 0xa4, 0xae, 0x26, 0x35, 0x21, 0x4c,
	0x9a, 0x3a, 0x11, 0x91, 0x22, 0x8b, 0xb5, 0xb8, 0xfe, 0x12, 0x80, 0xa6, 0xaa, 0x89, 0x89, 0x7c,
	0x42, 0x05, 0xa8, 0x22, 0xbe, 0x90, 0x4f, 0xbc, 0x65, 0x68, 0xa1, 0x4c, 0x9b, 0x60, 0xfc, 0x74,
	0xb5, 0x9c, 0x13, 0x61, 0xa3, 0x96, 0x53, 0xfa, 0x43, 0x3b, 0x55, 0x09, 0x8f, 0x6a, 0x4d, 0x7f,
	0xda, 0x75, 0xc9, 0x19, 0x49, 0xec, 0x35, 0x2d, 0x29, 0x53, 0xb5, 0xa6, 0x5d, 0x1a, 0x73, 0x1d,
	0x2b, 0x0e, 0xcb, 0x64, 0x96, 0x62, 0xc2, 0x44, 0xd1, 0x3e, 0x89, 0x0e, 0x6b, 0xb0, 0xf2, 0x7e,
	0x93, 0x89, 0x96, 0x0b, 0xce, 0xfb, 0x0d, 0x46, 0x5c, 0xf5, 0x6d, 0xe8, 0xc5, 0x26, 0xe2, 0x00,
	0x19, 0xf0, 0x32, 0x70, 0xec, 0x96, 0x41, 0x24, 0x94, 0x1e, 0xce, 0x49, 0x28, 0xb5, 0x0a, 0xbd,
	0x32, 0x57, 0x36, 0x15, 0x89, 0xa2, 0xfc, 0xd2, 0x9f, 0xd6, 0xe3, 0xf1, 0xef, 0x5b, 0x30, 0x3a,
	0x93, 0xf9, 0xb0, 0xb1, 0xcb, 0xf5, 0x1b, 0x55, 0x35, 0x76, 0xf8, 0x8d, 0x07, 0x53, 0xea, 0x3c,
	0x8b, 0xc5, 0x69, 0x40, 0x5a, 0x2a, 0x57, 0x30, 0xf6, 0xa5, 0x48, 0x14, 0xce, 0x2f, 0xb2, 0x23,
	0x26, 0xb3, 0x27, 0xba, 0x22, 0x3b, 0x22, 0x92, 0xb3, 0xf5, 0xe2, 0xdc, 0xd6, 0xb7, 0xa1, 0x87,
	0x27, 0x28, 0x98, 0xbb, 0xa0, 0x8b, 0x63, 0xdc, 0xc7, 0x32, 0xb4, 0x70, 0x0b, 0xec, 0x00, 0xfc,
	0xc4, 0x05, 0xe9, 0xd0, 0xa4, 0xce, 0xee, 0xf4, 0x8d, 0x0a, 0xa4, 0x3a, 0xe6, 0xd9, 0x7a, 0xac,
	0x40, 0xaa, 0xe3, 0x7a, 0x21, 0x65, 0x71, 0xd8, 0xb0, 0x77, 0x17, 0xc7, 0x2e, 0x22, 0x88, 0x44,
	0x62, 0x6c, 0x62, 0xe2, 0x25, 0x39, 0x1f, 0xba, 0xc7, 0xca, 0xe6, 0x18, 0x69, 0xce, 0xb4, 0x6e,
	0x88, 0x99, 0xbc, 0xcc, 0xa4, 0x28, 0xd4, 0x3c, 0x93, 0xf7, 0xa7, 0xc0, 0x10, 0x65, 0xf2, 0x07,
	0x30, 0xcc, 0xac, 0x3e, 0x16, 0xa1, 0x33, 0x0f, 0x1b, 0x79, 0xe0, 0x30, 0xd2, 0x7e, 0x1f, 0xaa,
	0x21, 0x2d, 0x6c, 0x89, 0x75, 0x38, 0xe8, 0x1b, 0x1b, 0x8f, 0x7f, 0x18, 0x41, 0xbf, 0x2e, 0x21,
	0x67, 0x9b, 0x9b, 0x85, 0x73, 0xcd, 0x4d, 0x7d, 0x5a, 0xae, 0x34, 0x4f, 0x8b, 0x07, 0x8b, 0x78,
	0x34, 0x9c, 0xf1, 0xe9, 0x1b, 0x8f, 0x21, 0xb5, 0x62, 0x01, 0x51, 0xd8, 0x01, 0x7d, 0x42, 0x76,
	0x91, 0x7c, 0x07, 0xfa, 0xb1, 0x49, 0x23, 0xa6, 0xb2, 0x1f, 0x7a, 0x08, 0x10, 0xf1, 0x3e, 0x0c,
	0xf2, 0x43, 0x2e, 0x5f, 0x38, 0x17, 0x3b, 0x04, 0x08, 0x7a, 0x49, 0x13, 0xde, 0x87, 0x81, 0x2b,
	0xee, 0xc4, 0xc0, 0xee, 0x01, 0xae, 0xe8, 0xc4, 0x80, 0x51, 0x43, 0x0c, 0x87, 0x4a, 0x47, 0x87,
	0x85, 0x6b, 0xc1, 0x58, 0xe8, 0x0b, 0x82, 0xe6, 0x3a, 0x4e, 0xb4, 0x2c, 0x0e, 0x5d, 0x1b, 0xc6,
	0x3a, 0xbe, 0x45, 0x04, 0x77, 0x50, 0x75, 0x2a, 0x07, 0xec, 0xb3, 0xf6, 0xb4, 0xef, 0xda, 0x93,
	0x83, 0xc6, 0x1a, 0x66, 0x2a, 0xd2, 0xec, 0xb8, 0x4a, 0xfe, 0x29, 0x22, 0x73, 0x86, 0xd0, 0xc4,
	0xc6, 0x56, 0xbe, 0x23, 0x68, 0x07, 0x91, 0x39, 0xc3, 0xe1, 0x13, 0x74, 0xcc, 0xa8, 0xc1, 0xf0,
	0x05, 0x22, 0xf3, 0x15, 0x50, 0x10, 0xb2, 0xe3, 0x78, 0x05, 0x93, 0x90, 0x53, 0xd0, 0x81, 0x89,
	0x25, 0x87, 0x06, 0xd7, 0xdb, 0x1e, 0x02, 0x14, 0x18, 0x37, 0xa0, 0x23, 0x64, 0x50, 0x88, 0x88,
	0x6a, 0x6b, 0x7f, 0xda, 0x16, 0xf2, 0xa5, 0x88, 0xbc, 0x2d, 0xe8, 0x84, 0x06, 0xa3, 0xcb, 0x5f,
	0x79, 0xdb, 0xd5, 0x6b, 0x07, 0xe9, 0x58, 0x4f, 0x1c, 0x27, 0x86, 0xf5, 0x77, 0x65, 0x92, 0x51,
	0xf4, 0x78, 0x1c, 0x9f, 0x38, 0xc6, 0xb0, 0xfe, 0x0c, 0xee, 0xea, 0x44, 0xbc, 0xae, 0x2a, 0x7f,
	0x80, 0x05, 0x3e, 0xf8, 0x2e, 0x37, 0x69, 0x90, 0x17, 0x56, 0xa7, 0x11, 0xd5, 0xd1, 0xfe, 0xf4,
	0x36, 0x32, 0xb9, 0x1e, 0x60, 0x4f, 0x44, 0xea, 0x37, 0xb9, 0x49, 0xf7, 0x89, 0x81, 0xaa, 0x8a,
	0x88, 0xe3, 0x92, 0xd5, 0x5f, 0xe7, 0x3d, 0x32, 0x82, 0x13, 0x3c, 0x84, 0x51, 0x99, 0x6a, 0x5c,
	0x86, 0x88, 0x03, 0x91, 0x65, 0x54, 0x36, 0xfb, 0xd3, 0x61, 0x0d, 0x6e, 0x67, 0x19, 0x1a, 0xc2,
	0x58, 0x8d, 0x9d, 0x4c, 0xa8, 0xa8, 0x56, 0xf6, 0xa7, 0x3d, 0x63, 0xf5, 0x1e, 0x8e, 0x29, 0x9e,
	0x4b, 0xeb, 0x88, 0xb7, 0x5c, 0x3c, 0x97, 0x96, 0x89, 0x54, 0x2c, 0x74, 0xa8, 0x38, 0x0e, 0xb9,
	0xf0, 0xf5, 0x09, 0xa1, 0x40, 0xe4, 0xd3, 0x15, 0xaa, 0x20, 0x3f, 0x4d, 0x66, 0x26, 0xa6, 0xa2,
	0xc7, 0xa7, 0x2b, 0x54, 0xfb, 0x04, 0x61, 0xa5, 0x8d, 0x8c, 0x91, 0x79, 0x30, 0x9f, 0x64, 0x95,
	0x2b, 0x2d, 0xc1, 0x3b, 0xd5, 0x4c, 0x35, 0xdf, 0x7c, 0xa5, 0x77, 0x1a, 0x7c, 0x5f, 0x55, 0xcb,
	0xfd, 0x08, 0x16, 0x11, 0xa0, 0x92, 0x78, 0x69, 0xab, 0xf7, 0x6b, 0x63, 0xb8, 0xd5, 0x43, 0x36,
	0x3c, 0x7a, 0x56, 0xa4, 0x47, 0xae, 0x28, 0xd2, 0x37, 0x5d, 0xc6, 0x4d, 0x11, 0xe4, 0xa1, 0xb1,
	0x8a, 0x0a, 0x20, 0x5e, 0xc6, 0x4d, 0xb1, 0x8f, 0x63, 0xef, 0x31, 0x74, 0x66, 0x65, 0x51, 0x98,
	0xd4, 0xbf, 0x7f, 0xf9, 0xc5, 0x62, 0x5b, 0x3e, 0x25, 0x3a, 0x45, 0x00, 0xb3, 0xa2, 0x99, 0x84,
	0xc4, 0x9b, 0x2a, 0xe6, 0x75, 0x7f, 0x8d, 0xcd, 0x44, 0xc8, 0x73, 0x13, 0x99, 0x39, 0x99, 0x52,
	0xd0, 0x83, 0x06, 0x99, 0x12, 0xd0, 0x3b, 0xb0, 0xc4, 0xe4, 0xac, 0xaa, 0x97, 0x63, 0x76, 0x22,
	0xa1, 0x7b, 0xae, 0x66, 0x3e, 0x84, 0x11, 0x17, 0xb3, 0x99, 0xb0, 0x16, 0x3b, 0xc8, 0x87, 0xd4,
	0x57, 0x0f, 0x09, 0x7c, 0xca, 0x98, 0xb7, 0x03, 0x43, 0x8e, 0x6a, 0x77, 0xb5, 0x7a, 0xe7, 0x6d,
	0xf7, 0xc2, 0xa7, 0x65, 0xae, 0x53, 0x95, 0xe7, 0x78, 0xe9, 0xc3, 0x9d, 0x00, 0x85, 0x3f, 0x5f,
	0xbd, 0xfe, 0x1f, 0xda, 0xa4, 0xd4, 0x7f, 0x97, 0xa4, 0xc7, 0x17, 0xa5, 0xb7, 0xcb, 0xc2, 0xec,
	0xc5, 0xe2, 0x94, 0x7a, 0x1f, 0xba, 0x56, 0x92, 0x80, 0x37, 0x81, 0xa5, 0x03, 0xa5, 0xe4, 0x0c,
	0xdb, 0x96, 0x4c, 0xa4, 0x2a, 0xf6, 0xdf, 0x7b, 0x9b, 0x8a, 0xcf, 0x1d, 0xdf, 0x1e, 0xb2, 0xa1,
	0x8a, 0xd1, 0x41, 0x13, 0xa1, 0x82, 0x40, 0x46, 0xc1, 0xc6, 0xe8, 0x7f, 0xa9, 0xe0, 0xf5, 0x08,
	0xc0, 0xde, 0x68, 0x1d, 0x96, 0x99, 0x28, 0xc2, 0xd0, 0x94, 0x29, 0x75, 0x32, 0xeb, 0xc4, 0xc3,
	0x96, 0xdc, 0x66, 0x98, 0x1e, 0x18, 0x7a, 0xb2, 0xb4, 0x82, 0xba, 0x94, 0xf7, 0x39, 0xf2, 0xab,
	0xb1, 0xf7, 0x19, 0x8c, 0xbe, 0x2f, 0x45, 0xac, 0x8b, 0x53, 0xea, 0x22, 0x73, 0xff, 0x03, 0x3a,
	0xf2, 0x17, 0x3c, 0xfe, 0x35, 0x33, 0x61, 0xe3, 0x38, 0x1d, 0x7e, 0x3f, 0x1f, 0xe4, 0x94, 0x46,
	0x4f, 0x53, 0x91, 0xe8, 0x30, 0x28, 0xd4, 0xeb, 0xc2, 0xff, 0xd0, 0x15, 0x5f, 0xc6, 0x5e, 0xaa,
	0xd7, 0x85, 0xb7, 0x81, 0xf7, 0xf6, 0x63, 0x65, 0xfd, 0x47, 0x64, 0x09, 0xff, 0xa2, 0x25, 0x5c,
	0x36, 0x61, 0x36, 0x4c, 0x7a, 0x91, 0x15, 0x52, 0x05, 0xb1, 0x3a, 0x56, 0xb1, 0xff, 0x11, 0xa7,
	0x4d, 0x82, 0x9e, 0x23, 0x32, 0x0e, 0x60, 0xe9, 0x6c, 0x5f, 0xfb, 0x96, 0x16, 0x6d, 0x15, 0x7a,
	0x79, 0x39, 0x6b, 0x56, 0xa3, 0x7a, 0xfc, 0xa3, 0xcd, 0xd9, 0xf8, 0xaf, 0x0b, 0x00, 0xf3, 0x2c,
	0x57, 0xb5, 0x08, 0x0b, 0xf3, 0x16, 0xc1, 0x83, 0xc5, 0xd8, 0x98, 0xcc, 0xbd, 0xf6, 0xd0, 0xf7,
	0x99, 0x1c, 0xd8, 0x3a, 0x9b, 0x03, 0xe7, 0xb7, 0xad, 0xc6, 0xcd, 0xd7, 0xdd, 0xb6, 0xdc, 0xad,
	0x72, 0xc8, 0xab, 0x71, 0xc5, 0xa8, 0xcd, 0xc5, 0x88, 0xb0, 0x79, 0x31, 0x62, 0x16, 0x2e, 0x46,
	0xfc, 0xe8, 0x00, 0x04, 0x51, 0x31, 0x1a, 0xff, 0x7d, 0x01, 0x06, 0x8d, 0x93, 0x89, 0x6b, 0x6c,
	0x14, 0x68, 0xfa, 0x26, 0x0c, 0xbd, 0xe4, 0x5e, 0x50, 0xf0, 0xfb, 0xbf, 0x5a, 0xf7, 0xc2, 0xb9,
	0x75, 0xaf, 0xc3, 0xb2, 0x8c, 0xf3, 0x32, 0x0c, 0x1a, 0x09, 0x9a, 0x4b, 0xf5, 0x12, 0xe1, 0x3b,
	0x75, 0x96, 0xbe, 0x05, 0xdd, 0x48, 0x24, 0xf4, 0xb2, 0xc3, 0x4b, 0xef, 0xe0, 0x70, 0x22, 0xbd,
	0x47, 0xe0, 0x11, 0x21, 0x31, 0xa9, 0x2e, 0x0c, 0x66, 0x00, 0x2b, 0x12, 0x57, 0xaf, 0x97, 0x91,
	0xf2, 0x82, 0x09, 0x7b, 0x88, 0x8f, 0xff, 0xd4, 0x82, 0x95, 0x0b, 0x47, 0xf7, 0x3f, 0xde, 0xea,
	0x5d, 0x00, 0xfc, 0xef, 0xca, 0x2d, 0x6f, 0xb6, 0x8f, 0x08, 0x57, 0xdb, 0x75, 0x58, 0x9e, 0x93,
	0x83, 0x94, 0x3c, 0xc1, 0x7b, 0x5e, 0xaa, 0x99, 0xbe, 0x24, 0x67, 0x60, 0x8b, 0x18, 0x39, 0x35,
	0x55, 0x8b, 0x18, 0xb1, 0x92, 0x77, 0x60, 0xa9, 0x22, 0x39, 0x15, 0xdc, 0x9c, 0x0c, 0x1d, 0x03,
	0x2b, 0x78, 0x00, 0xc3, 0x99, 0xb1, 0x52, 0x59, 0xa7, 0x84, 0xf7, 0x3b, 0x60, 0x8c, 0x15, 0x3d,
	0x02, 0xaf, 0xc9, 0xe2, 0x94, 0x71, 0x3f, 0xb9, 0xdc, 0x60, 0x64, 0x85, 0xb7, 0xa0, 0xab, 0x93,
	0xa8, 0xd1, 0x57, 0x76, 0x74, 0x12, 0xb9, 0x3b, 0x19, 0x12, 0x5c, 0x60, 0xb9, 0x1e, 0x45, 0x27,
	0x91, 0x0b, 0x2b, 0x3a, 0x07, 0x91, 0x0b, 0x2a, 0xee, 0x50, 0x7a, 0x3a, 0x89, 0xb8, 0xbf, 0x79,
	0x0f, 0xae, 0xce, 0xa2, 0xe0, 0xcc, 0x42, 0xb9, 0x47, 0x19, 0xcd, 0xa2, 0xa7, 0xf3, 0x15, 0x8c,
	0xff, 0xd8, 0x02, 0xef, 0x62, 0x4a, 0x44, 0x17, 0x88, 0xe3, 0xf9, 0x2b, 0x2c, 0x7e, 0xe3, 0x59,
	0x0a, 0xdd, 0x33, 0x69, 0x6b, 0x8a, 0x9f, 0xc8, 0x45, 0xcf, 0x01, 0x2d, 0xe6, 0xa2, 0x07, 0x00,
	0x0f, 0x16, 0x0f, 0xac, 0x49, 0x9c, 0xf5, 0xe9, 0xfb, 0x92, 0x4b, 0xd1, 0x75, 0x68, 0x53, 0xff,
	0xe1, 0x2c, 0xcc, 0x03, 0xd7, 0x47, 0x9b, 0x00, 0x9b, 0x7f, 0xb2, 0x6b, 0x8f, 0xfa, 0x68, 0x5a,
	0x9a, 0x37, 0x86, 0xd1, 0xac, 0x48, 0x03, 0x79, 0x1a, 0xba, 0xfd, 0xf0, 0xf3, 0xcd, 0x60, 0x56,
	0xa4, 0xbb, 0xa7, 0x21, 0x1b, 0x7e, 0x0d, 0x86, 0x15, 0x0f, 0xf5, 0x4d, 0xae, 0xef, 0x63, 0x96,
	0xaa, 0x73, 0x9a, 0xe9, 0x37, 0x18, 0xcb, 0xc0, 0xf7, 0xd5, 0x99, 0x7e, 0xc3, 0x37, 0xaa, 0xcc,
	0x9a, 0x50, 0xe5, 0xf9, 0xc7, 0x7c, 0x60, 0x06, 0x5c, 0x9f, 0x2a, 0x90, 0x8e, 0xcc, 0x1a, 0x0c,
	0xe9, 0xaa, 0xf2, 0x38, 0x67, 0x9e, 0x21, 0x27, 0x03, 0xc4, 0x1e, 0xe7, 0x67, 0x38, 0x9e, 0x38,
	0x8e, 0xd1, 0x9c, 0xe3, 0x49, 0xc5, 0x31, 0x30, 0x56, 0xab, 0xb4, 0xe0, 0xac, 0xce, 0x0f, 0x2e,
	0x4d, 0x68, 0xfc, 0x97, 0x05, 0xf4, 0xc8, 0xf9, 0x0a, 0x83, 0x0e, 0xa5, 0xa2, 0x44, 0xad, 0x3b,
	0x27, 0x6c, 0xce, 0x6a, 0x23, 0x82, 0xb1, 0x81, 0xa7, 0x94, 0xfd, 0x3b, 0xb8, 0x71, 0xb6, 0x8a,
	0xb9, 0x87, 0x35, 0x7a, 0xfb, 0x1b, 0x6c, 0xad, 0xff, 0x44, 0x31, 0x7b, 0x61, 0x64, 0x19, 0xd3,
	0x4b, 0xd5, 0xb5, 0x33, 0x25, 0x8d, 0x1f, 0xe0, 0xc6, 0xff, 0x5c, 0x00, 0xff, 0x6d, 0x12, 0xe8,
	0xbe, 0x84, 0x06, 0xd5, 0x23, 0x70, 0x7b, 0xda, 0x63, 0x60, 0x42, 0x2f, 0x02, 0xd8, 0xe8, 0x52,
	0x98, 0xf3, 0xc1, 0xee, 0xe2, 0xd8, 0x5d, 0x9f, 0x28, 0x8d, 0x51, 0x22, 0xe0, 0x67, 0x76, 0xca,
	0x6b, 0x74, 0x29, 0x69, 0xe6, 0xb8, 0xc5, 0xb3, 0x39, 0xae, 0xca, 0x13, 0xed, 0x46, 0x9e, 0xf8,
	0x1a, 0xae, 0xe6, 0x2a, 0x34, 0xa9, 0x14, 0xf6, 0xd4, 0x55, 0xf1, 0xce, 0xdb, 0x36, 0xbe, 0x4f,
	0x8c, 0x17, 0x6a, 0xf9, 0x52, 0xad, 0x80, 0xa0, 0xf1, 0x6f, 0x71, 0xcb, 0x97, 0xf3, 0xe2, 0xd2,
	0xad, 0x12, 0xd8, 0x12, 0xcf, 0xb7, 0xcc, 0xc0, 0x44, 0x5e, 0x96, 0xc7, 0xc6, 0x09, 0xde, 0xc6,
	0x5c, 0x97, 0x47, 0x27, 0xbf, 0x50, 0xc9, 0xfc, 0xcd, 0xbc, 0x83, 0x43, 0x7e, 0x55, 0xc9, 0x8f,
	0xca, 0xa0, 0x3e, 0x6d, 0xed, 0xfc, 0xa8, 0x9c, 0xc8, 0xe6, 0x2b, 0x4c, 0xeb, 0xcc, 0x2b, 0x0c,
	0x12, 0x8e, 0xca, 0x20, 0x2d, 0xf9, 0xdc, 0x21, 0xe1, 0xa8, 0xfc, 0xb2, 0x4c, 0xc6, 0x3f, 0x2c,
	0xc0, 0xa0, 0xd1, 0x01, 0xd4, 0x77, 0xde, 0x85, 0xc6, 0x9d, 0xf7, 0xb2, 0x74, 0xcb, 0x0f, 0xd8,
	0xb3, 0x88, 0xe6, 0xe9, 0x4d, 0x17, 0x75, 0xfe, 0x34, 0x3a, 0x93, 0x3a, 0x17, 0x7f, 0x2a, 0x75,
	0xb6, 0x2f, 0xa6, 0xce, 0xf1, 0xdf, 0x16, 0xa0, 0x57, 0xb5, 0x0c, 0x74, 0x9f, 0xa6, 0x36, 0xa8,
	0xde, 0x7d, 0x97, 0xc6, 0x13, 0x79, 0xae, 0x23, 0xbd, 0xf2, 0xe3, 0x1d, 0x69, 0xeb, 0x7c, 0x47,
	0x5a, 0x93, 0x29, 0x9e, 0xf8, 0x17, 0x02, 0x26, 0x53, 0x40, 0x5d, 0x6c, 0x58, 0xdb, 0x97, 0x34,
	0xac, 0xb5, 0x12, 0xba, 0x3b, 0x74, 0x1a, 0x73, 0xe0, 0xdd, 0x61, 0xd6, 0xa1, 0xdf, 0x59, 0x1e,
	0xff, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xc6, 0xee, 0x53, 0x7d, 0x7e, 0x1b, 0x00, 0x00,
}
