// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc_api/bilibili/app/playurl/v1/playurl.proto

package bilibili_app_playurl_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 业务类型
type Business int32

const (
	Business_UNKNOWN Business = 0
	Business_STORY   Business = 1
)

var Business_name = map[int32]string{
	0: "UNKNOWN",
	1: "STORY",
}

var Business_value = map[string]int32{
	"UNKNOWN": 0,
	"STORY":   1,
}

func (x Business) String() string {
	return proto.EnumName(Business_name, int32(x))
}

func (Business) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{0}
}

// 编码类型
type CodeType int32

const (
	CodeType_NOCODE  CodeType = 0
	CodeType_CODE264 CodeType = 1
	CodeType_CODE265 CodeType = 2
	CodeType_CODEAV1 CodeType = 3
)

var CodeType_name = map[int32]string{
	0: "NOCODE",
	1: "CODE264",
	2: "CODE265",
	3: "CODEAV1",
}

var CodeType_value = map[string]int32{
	"NOCODE":  0,
	"CODE264": 1,
	"CODE265": 2,
	"CODEAV1": 3,
}

func (x CodeType) String() string {
	return proto.EnumName(CodeType_name, int32(x))
}

func (CodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{1}
}

// 设置类型
type ConfType int32

const (
	ConfType_NoType         ConfType = 0
	ConfType_FLIPCONF       ConfType = 1
	ConfType_CASTCONF       ConfType = 2
	ConfType_FEEDBACK       ConfType = 3
	ConfType_SUBTITLE       ConfType = 4
	ConfType_PLAYBACKRATE   ConfType = 5
	ConfType_TIMEUP         ConfType = 6
	ConfType_PLAYBACKMODE   ConfType = 7
	ConfType_SCALEMODE      ConfType = 8
	ConfType_BACKGROUNDPLAY ConfType = 9
	ConfType_LIKE           ConfType = 10
	ConfType_DISLIKE        ConfType = 11
	ConfType_COIN           ConfType = 12
	ConfType_ELEC           ConfType = 13
	ConfType_SHARE          ConfType = 14
	ConfType_SCREENSHOT     ConfType = 15
	ConfType_LOCKSCREEN     ConfType = 16
	ConfType_RECOMMEND      ConfType = 17
	ConfType_PLAYBACKSPEED  ConfType = 18
	ConfType_DEFINITION     ConfType = 19
	ConfType_SELECTIONS     ConfType = 20
	ConfType_NEXT           ConfType = 21
	ConfType_EDITDM         ConfType = 22
	ConfType_SMALLWINDOW    ConfType = 23
	ConfType_SHAKE          ConfType = 24
	ConfType_OUTERDM        ConfType = 25
	ConfType_INNERDM        ConfType = 26
	ConfType_PANORAMA       ConfType = 27
	ConfType_DOLBY          ConfType = 28
	ConfType_COLORFILTER    ConfType = 29
)

var ConfType_name = map[int32]string{
	0:  "NoType",
	1:  "FLIPCONF",
	2:  "CASTCONF",
	3:  "FEEDBACK",
	4:  "SUBTITLE",
	5:  "PLAYBACKRATE",
	6:  "TIMEUP",
	7:  "PLAYBACKMODE",
	8:  "SCALEMODE",
	9:  "BACKGROUNDPLAY",
	10: "LIKE",
	11: "DISLIKE",
	12: "COIN",
	13: "ELEC",
	14: "SHARE",
	15: "SCREENSHOT",
	16: "LOCKSCREEN",
	17: "RECOMMEND",
	18: "PLAYBACKSPEED",
	19: "DEFINITION",
	20: "SELECTIONS",
	21: "NEXT",
	22: "EDITDM",
	23: "SMALLWINDOW",
	24: "SHAKE",
	25: "OUTERDM",
	26: "INNERDM",
	27: "PANORAMA",
	28: "DOLBY",
	29: "COLORFILTER",
}

var ConfType_value = map[string]int32{
	"NoType":         0,
	"FLIPCONF":       1,
	"CASTCONF":       2,
	"FEEDBACK":       3,
	"SUBTITLE":       4,
	"PLAYBACKRATE":   5,
	"TIMEUP":         6,
	"PLAYBACKMODE":   7,
	"SCALEMODE":      8,
	"BACKGROUNDPLAY": 9,
	"LIKE":           10,
	"DISLIKE":        11,
	"COIN":           12,
	"ELEC":           13,
	"SHARE":          14,
	"SCREENSHOT":     15,
	"LOCKSCREEN":     16,
	"RECOMMEND":      17,
	"PLAYBACKSPEED":  18,
	"DEFINITION":     19,
	"SELECTIONS":     20,
	"NEXT":           21,
	"EDITDM":         22,
	"SMALLWINDOW":    23,
	"SHAKE":          24,
	"OUTERDM":        25,
	"INNERDM":        26,
	"PANORAMA":       27,
	"DOLBY":          28,
	"COLORFILTER":    29,
}

func (x ConfType) String() string {
	return proto.EnumName(ConfType_name, int32(x))
}

func (ConfType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{2}
}

//
type Group int32

const (
	Group_UnknownGroup Group = 0
	Group_A            Group = 1
	Group_B            Group = 2
	Group_C            Group = 3
)

var Group_name = map[int32]string{
	0: "UnknownGroup",
	1: "A",
	2: "B",
	3: "C",
}

var Group_value = map[string]int32{
	"UnknownGroup": 0,
	"A":            1,
	"B":            2,
	"C":            3,
}

func (x Group) String() string {
	return proto.EnumName(Group_name, int32(x))
}

func (Group) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{3}
}

// 错误码
type PlayErr int32

const (
	PlayErr_NoErr                   PlayErr = 0
	PlayErr_WithMultiDeviceLoginErr PlayErr = 1
)

var PlayErr_name = map[int32]string{
	0: "NoErr",
	1: "WithMultiDeviceLoginErr",
}

var PlayErr_value = map[string]int32{
	"NoErr":                   0,
	"WithMultiDeviceLoginErr": 1,
}

func (x PlayErr) String() string {
	return proto.EnumName(PlayErr_name, int32(x))
}

func (PlayErr) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{4}
}

//
type PlayLimitCode int32

const (
	PlayLimitCode_PLCUnkown      PlayLimitCode = 0
	PlayLimitCode_PLCUgcNotPayed PlayLimitCode = 1
)

var PlayLimitCode_name = map[int32]string{
	0: "PLCUnkown",
	1: "PLCUgcNotPayed",
}

var PlayLimitCode_value = map[string]int32{
	"PLCUnkown":      0,
	"PLCUgcNotPayed": 1,
}

func (x PlayLimitCode) String() string {
	return proto.EnumName(PlayLimitCode_name, int32(x))
}

func (PlayLimitCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{5}
}

// 视频类型
type VideoType int32

const (
	VideoType_Unknown_VALUE VideoType = 0
	VideoType_FLV_VALUE     VideoType = 1
	VideoType_DASH_VALUE    VideoType = 2
	VideoType_MP4_VALUE     VideoType = 3
)

var VideoType_name = map[int32]string{
	0: "Unknown_VALUE",
	1: "FLV_VALUE",
	2: "DASH_VALUE",
	3: "MP4_VALUE",
}

var VideoType_value = map[string]int32{
	"Unknown_VALUE": 0,
	"FLV_VALUE":     1,
	"DASH_VALUE":    2,
	"MP4_VALUE":     3,
}

func (x VideoType) String() string {
	return proto.EnumName(VideoType_name, int32(x))
}

func (VideoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{6}
}

type DolbyItem_Type int32

const (
	DolbyItem_NONE   DolbyItem_Type = 0
	DolbyItem_COMMON DolbyItem_Type = 1
	DolbyItem_ATMOS  DolbyItem_Type = 2
)

var DolbyItem_Type_name = map[int32]string{
	0: "NONE",
	1: "COMMON",
	2: "ATMOS",
}

var DolbyItem_Type_value = map[string]int32{
	"NONE":   0,
	"COMMON": 1,
	"ATMOS":  2,
}

func (x DolbyItem_Type) String() string {
	return proto.EnumName(DolbyItem_Type_name, int32(x))
}

func (DolbyItem_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{8, 0}
}

//
type AB struct {
	//
	Glance *Glance `protobuf:"bytes,1,opt,name=glance,proto3" json:"glance,omitempty"`
	//
	Group                int32    `protobuf:"varint,2,opt,name=group,proto3" json:"group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AB) Reset()         { *m = AB{} }
func (m *AB) String() string { return proto.CompactTextString(m) }
func (*AB) ProtoMessage()    {}
func (*AB) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{0}
}

func (m *AB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AB.Unmarshal(m, b)
}
func (m *AB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AB.Marshal(b, m, deterministic)
}
func (m *AB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AB.Merge(m, src)
}
func (m *AB) XXX_Size() int {
	return xxx_messageInfo_AB.Size(m)
}
func (m *AB) XXX_DiscardUnknown() {
	xxx_messageInfo_AB.DiscardUnknown(m)
}

var xxx_messageInfo_AB proto.InternalMessageInfo

func (m *AB) GetGlance() *Glance {
	if m != nil {
		return m.Glance
	}
	return nil
}

func (m *AB) GetGroup() int32 {
	if m != nil {
		return m.Group
	}
	return 0
}

// 配置项
type ArcConf struct {
	// 是否支持
	IsSupport bool `protobuf:"varint,1,opt,name=is_support,json=isSupport,proto3" json:"is_support,omitempty"`
	//
	Disabled bool `protobuf:"varint,2,opt,name=disabled,proto3" json:"disabled,omitempty"`
	//
	ExtraContent         *ExtraContent `protobuf:"bytes,3,opt,name=extra_content,json=extraContent,proto3" json:"extra_content,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ArcConf) Reset()         { *m = ArcConf{} }
func (m *ArcConf) String() string { return proto.CompactTextString(m) }
func (*ArcConf) ProtoMessage()    {}
func (*ArcConf) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{1}
}

func (m *ArcConf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArcConf.Unmarshal(m, b)
}
func (m *ArcConf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArcConf.Marshal(b, m, deterministic)
}
func (m *ArcConf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArcConf.Merge(m, src)
}
func (m *ArcConf) XXX_Size() int {
	return xxx_messageInfo_ArcConf.Size(m)
}
func (m *ArcConf) XXX_DiscardUnknown() {
	xxx_messageInfo_ArcConf.DiscardUnknown(m)
}

var xxx_messageInfo_ArcConf proto.InternalMessageInfo

func (m *ArcConf) GetIsSupport() bool {
	if m != nil {
		return m.IsSupport
	}
	return false
}

func (m *ArcConf) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *ArcConf) GetExtraContent() *ExtraContent {
	if m != nil {
		return m.ExtraContent
	}
	return nil
}

// Chronos灰度管理
type Chronos struct {
	// 资源md5
	Md5 string `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`
	// 资源文件
	File                 string   `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chronos) Reset()         { *m = Chronos{} }
func (m *Chronos) String() string { return proto.CompactTextString(m) }
func (*Chronos) ProtoMessage()    {}
func (*Chronos) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{2}
}

func (m *Chronos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chronos.Unmarshal(m, b)
}
func (m *Chronos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chronos.Marshal(b, m, deterministic)
}
func (m *Chronos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chronos.Merge(m, src)
}
func (m *Chronos) XXX_Size() int {
	return xxx_messageInfo_Chronos.Size(m)
}
func (m *Chronos) XXX_DiscardUnknown() {
	xxx_messageInfo_Chronos.DiscardUnknown(m)
}

var xxx_messageInfo_Chronos proto.InternalMessageInfo

func (m *Chronos) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *Chronos) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

//
type ButtonStyle struct {
	//
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	//
	TextColor string `protobuf:"bytes,2,opt,name=text_color,json=textColor,proto3" json:"text_color,omitempty"`
	//
	BgColor string `protobuf:"bytes,3,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	//
	JumpLink             string   `protobuf:"bytes,4,opt,name=jump_link,json=jumpLink,proto3" json:"jump_link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ButtonStyle) Reset()         { *m = ButtonStyle{} }
func (m *ButtonStyle) String() string { return proto.CompactTextString(m) }
func (*ButtonStyle) ProtoMessage()    {}
func (*ButtonStyle) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{3}
}

func (m *ButtonStyle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ButtonStyle.Unmarshal(m, b)
}
func (m *ButtonStyle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ButtonStyle.Marshal(b, m, deterministic)
}
func (m *ButtonStyle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ButtonStyle.Merge(m, src)
}
func (m *ButtonStyle) XXX_Size() int {
	return xxx_messageInfo_ButtonStyle.Size(m)
}
func (m *ButtonStyle) XXX_DiscardUnknown() {
	xxx_messageInfo_ButtonStyle.DiscardUnknown(m)
}

var xxx_messageInfo_ButtonStyle proto.InternalMessageInfo

func (m *ButtonStyle) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ButtonStyle) GetTextColor() string {
	if m != nil {
		return m.TextColor
	}
	return ""
}

func (m *ButtonStyle) GetBgColor() string {
	if m != nil {
		return m.BgColor
	}
	return ""
}

func (m *ButtonStyle) GetJumpLink() string {
	if m != nil {
		return m.JumpLink
	}
	return ""
}

//
type CloudConf struct {
	// 是否展示功能
	Show bool `protobuf:"varint,1,opt,name=show,proto3" json:"show,omitempty"`
	// 设置类型
	ConfType ConfType `protobuf:"varint,2,opt,name=conf_type,json=confType,proto3,enum=bilibili.app.playurl.v1.ConfType" json:"conf_type,omitempty"`
	//
	FieldValue *FieldValue `protobuf:"bytes,3,opt,name=field_value,json=fieldValue,proto3" json:"field_value,omitempty"`
	//
	ConfValue            *ConfValue `protobuf:"bytes,4,opt,name=conf_value,json=confValue,proto3" json:"conf_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CloudConf) Reset()         { *m = CloudConf{} }
func (m *CloudConf) String() string { return proto.CompactTextString(m) }
func (*CloudConf) ProtoMessage()    {}
func (*CloudConf) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{4}
}

func (m *CloudConf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudConf.Unmarshal(m, b)
}
func (m *CloudConf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudConf.Marshal(b, m, deterministic)
}
func (m *CloudConf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudConf.Merge(m, src)
}
func (m *CloudConf) XXX_Size() int {
	return xxx_messageInfo_CloudConf.Size(m)
}
func (m *CloudConf) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudConf.DiscardUnknown(m)
}

var xxx_messageInfo_CloudConf proto.InternalMessageInfo

func (m *CloudConf) GetShow() bool {
	if m != nil {
		return m.Show
	}
	return false
}

func (m *CloudConf) GetConfType() ConfType {
	if m != nil {
		return m.ConfType
	}
	return ConfType_NoType
}

func (m *CloudConf) GetFieldValue() *FieldValue {
	if m != nil {
		return m.FieldValue
	}
	return nil
}

func (m *CloudConf) GetConfValue() *ConfValue {
	if m != nil {
		return m.ConfValue
	}
	return nil
}

//
type ConfValue struct {
	// Types that are valid to be assigned to Value:
	//	*ConfValue_SwitchVal
	//	*ConfValue_SelectedVal
	Value                isConfValue_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ConfValue) Reset()         { *m = ConfValue{} }
func (m *ConfValue) String() string { return proto.CompactTextString(m) }
func (*ConfValue) ProtoMessage()    {}
func (*ConfValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{5}
}

func (m *ConfValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfValue.Unmarshal(m, b)
}
func (m *ConfValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfValue.Marshal(b, m, deterministic)
}
func (m *ConfValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfValue.Merge(m, src)
}
func (m *ConfValue) XXX_Size() int {
	return xxx_messageInfo_ConfValue.Size(m)
}
func (m *ConfValue) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfValue.DiscardUnknown(m)
}

var xxx_messageInfo_ConfValue proto.InternalMessageInfo

type isConfValue_Value interface {
	isConfValue_Value()
}

type ConfValue_SwitchVal struct {
	SwitchVal bool `protobuf:"varint,1,opt,name=switch_val,json=switchVal,proto3,oneof"`
}

type ConfValue_SelectedVal struct {
	SelectedVal int64 `protobuf:"varint,2,opt,name=selected_val,json=selectedVal,proto3,oneof"`
}

func (*ConfValue_SwitchVal) isConfValue_Value() {}

func (*ConfValue_SelectedVal) isConfValue_Value() {}

func (m *ConfValue) GetValue() isConfValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *ConfValue) GetSwitchVal() bool {
	if x, ok := m.GetValue().(*ConfValue_SwitchVal); ok {
		return x.SwitchVal
	}
	return false
}

func (m *ConfValue) GetSelectedVal() int64 {
	if x, ok := m.GetValue().(*ConfValue_SelectedVal); ok {
		return x.SelectedVal
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ConfValue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ConfValue_SwitchVal)(nil),
		(*ConfValue_SelectedVal)(nil),
	}
}

// dash条目
type DashItem struct {
	// 清晰度
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 主线流
	BaseUrl string `protobuf:"bytes,2,opt,name=baseUrl,proto3" json:"baseUrl,omitempty"`
	// 备用流
	BackupUrl []string `protobuf:"bytes,3,rep,name=backup_url,json=backupUrl,proto3" json:"backup_url,omitempty"`
	// 带宽
	Bandwidth uint32 `protobuf:"varint,4,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	// 编码id
	Codecid uint32 `protobuf:"varint,5,opt,name=codecid,proto3" json:"codecid,omitempty"`
	// md5
	Md5 string `protobuf:"bytes,6,opt,name=md5,proto3" json:"md5,omitempty"`
	// 大小
	Size uint64 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	// 帧率
	FrameRate string `protobuf:"bytes,8,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	//
	WidevinePssh         string   `protobuf:"bytes,9,opt,name=widevine_pssh,json=widevinePssh,proto3" json:"widevine_pssh,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DashItem) Reset()         { *m = DashItem{} }
func (m *DashItem) String() string { return proto.CompactTextString(m) }
func (*DashItem) ProtoMessage()    {}
func (*DashItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{6}
}

func (m *DashItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DashItem.Unmarshal(m, b)
}
func (m *DashItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DashItem.Marshal(b, m, deterministic)
}
func (m *DashItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DashItem.Merge(m, src)
}
func (m *DashItem) XXX_Size() int {
	return xxx_messageInfo_DashItem.Size(m)
}
func (m *DashItem) XXX_DiscardUnknown() {
	xxx_messageInfo_DashItem.DiscardUnknown(m)
}

var xxx_messageInfo_DashItem proto.InternalMessageInfo

func (m *DashItem) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DashItem) GetBaseUrl() string {
	if m != nil {
		return m.BaseUrl
	}
	return ""
}

func (m *DashItem) GetBackupUrl() []string {
	if m != nil {
		return m.BackupUrl
	}
	return nil
}

func (m *DashItem) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *DashItem) GetCodecid() uint32 {
	if m != nil {
		return m.Codecid
	}
	return 0
}

func (m *DashItem) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *DashItem) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *DashItem) GetFrameRate() string {
	if m != nil {
		return m.FrameRate
	}
	return ""
}

func (m *DashItem) GetWidevinePssh() string {
	if m != nil {
		return m.WidevinePssh
	}
	return ""
}

// dash视频流
type DashVideo struct {
	// 主线流
	BaseUrl string `protobuf:"bytes,1,opt,name=base_url,json=baseUrl,proto3" json:"base_url,omitempty"`
	// 备用流
	BackupUrl []string `protobuf:"bytes,2,rep,name=backup_url,json=backupUrl,proto3" json:"backup_url,omitempty"`
	// 带宽
	Bandwidth uint32 `protobuf:"varint,3,opt,name=bandwidth,proto3" json:"bandwidth,omitempty"`
	// 编码id
	Codecid uint32 `protobuf:"varint,4,opt,name=codecid,proto3" json:"codecid,omitempty"`
	// md5
	Md5 string `protobuf:"bytes,5,opt,name=md5,proto3" json:"md5,omitempty"`
	// 大小
	Size uint64 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	// 伴音质量id
	AudioId uint32 `protobuf:"varint,7,opt,name=audioId,proto3" json:"audioId,omitempty"`
	// 是否非全二压
	NoRexcode bool `protobuf:"varint,8,opt,name=no_rexcode,json=noRexcode,proto3" json:"no_rexcode,omitempty"`
	// 码率
	FrameRate string `protobuf:"bytes,9,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	// 宽度
	Width int32 `protobuf:"varint,10,opt,name=width,proto3" json:"width,omitempty"`
	// 高度
	Height int32 `protobuf:"varint,11,opt,name=height,proto3" json:"height,omitempty"`
	//
	WidevinePssh         string   `protobuf:"bytes,12,opt,name=widevine_pssh,json=widevinePssh,proto3" json:"widevine_pssh,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DashVideo) Reset()         { *m = DashVideo{} }
func (m *DashVideo) String() string { return proto.CompactTextString(m) }
func (*DashVideo) ProtoMessage()    {}
func (*DashVideo) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{7}
}

func (m *DashVideo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DashVideo.Unmarshal(m, b)
}
func (m *DashVideo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DashVideo.Marshal(b, m, deterministic)
}
func (m *DashVideo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DashVideo.Merge(m, src)
}
func (m *DashVideo) XXX_Size() int {
	return xxx_messageInfo_DashVideo.Size(m)
}
func (m *DashVideo) XXX_DiscardUnknown() {
	xxx_messageInfo_DashVideo.DiscardUnknown(m)
}

var xxx_messageInfo_DashVideo proto.InternalMessageInfo

func (m *DashVideo) GetBaseUrl() string {
	if m != nil {
		return m.BaseUrl
	}
	return ""
}

func (m *DashVideo) GetBackupUrl() []string {
	if m != nil {
		return m.BackupUrl
	}
	return nil
}

func (m *DashVideo) GetBandwidth() uint32 {
	if m != nil {
		return m.Bandwidth
	}
	return 0
}

func (m *DashVideo) GetCodecid() uint32 {
	if m != nil {
		return m.Codecid
	}
	return 0
}

func (m *DashVideo) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *DashVideo) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *DashVideo) GetAudioId() uint32 {
	if m != nil {
		return m.AudioId
	}
	return 0
}

func (m *DashVideo) GetNoRexcode() bool {
	if m != nil {
		return m.NoRexcode
	}
	return false
}

func (m *DashVideo) GetFrameRate() string {
	if m != nil {
		return m.FrameRate
	}
	return ""
}

func (m *DashVideo) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *DashVideo) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *DashVideo) GetWidevinePssh() string {
	if m != nil {
		return m.WidevinePssh
	}
	return ""
}

// 杜比伴音信息
type DolbyItem struct {
	// 杜比类型
	Type DolbyItem_Type `protobuf:"varint,1,opt,name=type,proto3,enum=bilibili.app.playurl.v1.DolbyItem_Type" json:"type,omitempty"`
	// 音频流
	Audio                *DashItem `protobuf:"bytes,2,opt,name=audio,proto3" json:"audio,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DolbyItem) Reset()         { *m = DolbyItem{} }
func (m *DolbyItem) String() string { return proto.CompactTextString(m) }
func (*DolbyItem) ProtoMessage()    {}
func (*DolbyItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{8}
}

func (m *DolbyItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DolbyItem.Unmarshal(m, b)
}
func (m *DolbyItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DolbyItem.Marshal(b, m, deterministic)
}
func (m *DolbyItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DolbyItem.Merge(m, src)
}
func (m *DolbyItem) XXX_Size() int {
	return xxx_messageInfo_DolbyItem.Size(m)
}
func (m *DolbyItem) XXX_DiscardUnknown() {
	xxx_messageInfo_DolbyItem.DiscardUnknown(m)
}

var xxx_messageInfo_DolbyItem proto.InternalMessageInfo

func (m *DolbyItem) GetType() DolbyItem_Type {
	if m != nil {
		return m.Type
	}
	return DolbyItem_NONE
}

func (m *DolbyItem) GetAudio() *DashItem {
	if m != nil {
		return m.Audio
	}
	return nil
}

// 事件
type Event struct {
	// 震动
	Shake                *Shake   `protobuf:"bytes,1,opt,name=shake,proto3" json:"shake,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{9}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetShake() *Shake {
	if m != nil {
		return m.Shake
	}
	return nil
}

//
type ExtraContent struct {
	//
	DisabledReason string `protobuf:"bytes,1,opt,name=disabled_reason,json=disabledReason,proto3" json:"disabled_reason,omitempty"`
	//
	DisabledCode         int64    `protobuf:"varint,2,opt,name=disabled_code,json=disabledCode,proto3" json:"disabled_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtraContent) Reset()         { *m = ExtraContent{} }
func (m *ExtraContent) String() string { return proto.CompactTextString(m) }
func (*ExtraContent) ProtoMessage()    {}
func (*ExtraContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{10}
}

func (m *ExtraContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtraContent.Unmarshal(m, b)
}
func (m *ExtraContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtraContent.Marshal(b, m, deterministic)
}
func (m *ExtraContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtraContent.Merge(m, src)
}
func (m *ExtraContent) XXX_Size() int {
	return xxx_messageInfo_ExtraContent.Size(m)
}
func (m *ExtraContent) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtraContent.DiscardUnknown(m)
}

var xxx_messageInfo_ExtraContent proto.InternalMessageInfo

func (m *ExtraContent) GetDisabledReason() string {
	if m != nil {
		return m.DisabledReason
	}
	return ""
}

func (m *ExtraContent) GetDisabledCode() int64 {
	if m != nil {
		return m.DisabledCode
	}
	return 0
}

// 配置字段值
type FieldValue struct {
	// Types that are valid to be assigned to Value:
	//	*FieldValue_Switch
	Value                isFieldValue_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FieldValue) Reset()         { *m = FieldValue{} }
func (m *FieldValue) String() string { return proto.CompactTextString(m) }
func (*FieldValue) ProtoMessage()    {}
func (*FieldValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{11}
}

func (m *FieldValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldValue.Unmarshal(m, b)
}
func (m *FieldValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldValue.Marshal(b, m, deterministic)
}
func (m *FieldValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldValue.Merge(m, src)
}
func (m *FieldValue) XXX_Size() int {
	return xxx_messageInfo_FieldValue.Size(m)
}
func (m *FieldValue) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldValue.DiscardUnknown(m)
}

var xxx_messageInfo_FieldValue proto.InternalMessageInfo

type isFieldValue_Value interface {
	isFieldValue_Value()
}

type FieldValue_Switch struct {
	Switch bool `protobuf:"varint,1,opt,name=switch,proto3,oneof"`
}

func (*FieldValue_Switch) isFieldValue_Value() {}

func (m *FieldValue) GetValue() isFieldValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *FieldValue) GetSwitch() bool {
	if x, ok := m.GetValue().(*FieldValue_Switch); ok {
		return x.Switch
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FieldValue) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FieldValue_Switch)(nil),
	}
}

// 清晰度描述
type FormatDescription struct {
	// 清晰度
	Quality int32 `protobuf:"varint,1,opt,name=quality,proto3" json:"quality,omitempty"`
	// 清晰度格式
	Format string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	// 清晰度描述
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// 新描述
	NewDescription string `protobuf:"bytes,4,opt,name=new_description,json=newDescription,proto3" json:"new_description,omitempty"`
	// 选中态的清晰度描述
	DisplayDesc string `protobuf:"bytes,5,opt,name=display_desc,json=displayDesc,proto3" json:"display_desc,omitempty"`
	// 选中态的清晰度描述的角标
	Superscript          string   `protobuf:"bytes,6,opt,name=superscript,proto3" json:"superscript,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FormatDescription) Reset()         { *m = FormatDescription{} }
func (m *FormatDescription) String() string { return proto.CompactTextString(m) }
func (*FormatDescription) ProtoMessage()    {}
func (*FormatDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{12}
}

func (m *FormatDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormatDescription.Unmarshal(m, b)
}
func (m *FormatDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormatDescription.Marshal(b, m, deterministic)
}
func (m *FormatDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormatDescription.Merge(m, src)
}
func (m *FormatDescription) XXX_Size() int {
	return xxx_messageInfo_FormatDescription.Size(m)
}
func (m *FormatDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_FormatDescription.DiscardUnknown(m)
}

var xxx_messageInfo_FormatDescription proto.InternalMessageInfo

func (m *FormatDescription) GetQuality() int32 {
	if m != nil {
		return m.Quality
	}
	return 0
}

func (m *FormatDescription) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *FormatDescription) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *FormatDescription) GetNewDescription() string {
	if m != nil {
		return m.NewDescription
	}
	return ""
}

func (m *FormatDescription) GetDisplayDesc() string {
	if m != nil {
		return m.DisplayDesc
	}
	return ""
}

func (m *FormatDescription) GetSuperscript() string {
	if m != nil {
		return m.Superscript
	}
	return ""
}

//
type Glance struct {
	//
	CanWatch bool `protobuf:"varint,1,opt,name=can_watch,json=canWatch,proto3" json:"can_watch,omitempty"`
	//
	Times int64 `protobuf:"varint,2,opt,name=times,proto3" json:"times,omitempty"`
	//
	Duration             int64    `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Glance) Reset()         { *m = Glance{} }
func (m *Glance) String() string { return proto.CompactTextString(m) }
func (*Glance) ProtoMessage()    {}
func (*Glance) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{13}
}

func (m *Glance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Glance.Unmarshal(m, b)
}
func (m *Glance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Glance.Marshal(b, m, deterministic)
}
func (m *Glance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Glance.Merge(m, src)
}
func (m *Glance) XXX_Size() int {
	return xxx_messageInfo_Glance.Size(m)
}
func (m *Glance) XXX_DiscardUnknown() {
	xxx_messageInfo_Glance.DiscardUnknown(m)
}

var xxx_messageInfo_Glance proto.InternalMessageInfo

func (m *Glance) GetCanWatch() bool {
	if m != nil {
		return m.CanWatch
	}
	return false
}

func (m *Glance) GetTimes() int64 {
	if m != nil {
		return m.Times
	}
	return 0
}

func (m *Glance) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

// 禁用功能配置
type PlayAbilityConf struct {
	BackgroundPlayConf   *CloudConf `protobuf:"bytes,1,opt,name=background_play_conf,json=backgroundPlayConf,proto3" json:"background_play_conf,omitempty"`
	FlipConf             *CloudConf `protobuf:"bytes,2,opt,name=flip_conf,json=flipConf,proto3" json:"flip_conf,omitempty"`
	CastConf             *CloudConf `protobuf:"bytes,3,opt,name=cast_conf,json=castConf,proto3" json:"cast_conf,omitempty"`
	FeedbackConf         *CloudConf `protobuf:"bytes,4,opt,name=feedback_conf,json=feedbackConf,proto3" json:"feedback_conf,omitempty"`
	SubtitleConf         *CloudConf `protobuf:"bytes,5,opt,name=subtitle_conf,json=subtitleConf,proto3" json:"subtitle_conf,omitempty"`
	PlaybackRateConf     *CloudConf `protobuf:"bytes,6,opt,name=playback_rate_conf,json=playbackRateConf,proto3" json:"playback_rate_conf,omitempty"`
	TimeUpConf           *CloudConf `protobuf:"bytes,7,opt,name=time_up_conf,json=timeUpConf,proto3" json:"time_up_conf,omitempty"`
	PlaybackModeConf     *CloudConf `protobuf:"bytes,8,opt,name=playback_mode_conf,json=playbackModeConf,proto3" json:"playback_mode_conf,omitempty"`
	ScaleModeConf        *CloudConf `protobuf:"bytes,9,opt,name=scale_mode_conf,json=scaleModeConf,proto3" json:"scale_mode_conf,omitempty"`
	LikeConf             *CloudConf `protobuf:"bytes,10,opt,name=like_conf,json=likeConf,proto3" json:"like_conf,omitempty"`
	DislikeConf          *CloudConf `protobuf:"bytes,11,opt,name=dislike_conf,json=dislikeConf,proto3" json:"dislike_conf,omitempty"`
	CoinConf             *CloudConf `protobuf:"bytes,12,opt,name=coin_conf,json=coinConf,proto3" json:"coin_conf,omitempty"`
	ElecConf             *CloudConf `protobuf:"bytes,13,opt,name=elec_conf,json=elecConf,proto3" json:"elec_conf,omitempty"`
	ShareConf            *CloudConf `protobuf:"bytes,14,opt,name=share_conf,json=shareConf,proto3" json:"share_conf,omitempty"`
	ScreenShotConf       *CloudConf `protobuf:"bytes,15,opt,name=screen_shot_conf,json=screenShotConf,proto3" json:"screen_shot_conf,omitempty"`
	LockScreenConf       *CloudConf `protobuf:"bytes,16,opt,name=lock_screen_conf,json=lockScreenConf,proto3" json:"lock_screen_conf,omitempty"`
	RecommendConf        *CloudConf `protobuf:"bytes,17,opt,name=recommend_conf,json=recommendConf,proto3" json:"recommend_conf,omitempty"`
	PlaybackSpeedConf    *CloudConf `protobuf:"bytes,18,opt,name=playback_speed_conf,json=playbackSpeedConf,proto3" json:"playback_speed_conf,omitempty"`
	DefinitionConf       *CloudConf `protobuf:"bytes,19,opt,name=definition_conf,json=definitionConf,proto3" json:"definition_conf,omitempty"`
	SelectionsConf       *CloudConf `protobuf:"bytes,20,opt,name=selections_conf,json=selectionsConf,proto3" json:"selections_conf,omitempty"`
	NextConf             *CloudConf `protobuf:"bytes,21,opt,name=next_conf,json=nextConf,proto3" json:"next_conf,omitempty"`
	EditDmConf           *CloudConf `protobuf:"bytes,22,opt,name=edit_dm_conf,json=editDmConf,proto3" json:"edit_dm_conf,omitempty"`
	SmallWindowConf      *CloudConf `protobuf:"bytes,23,opt,name=small_window_conf,json=smallWindowConf,proto3" json:"small_window_conf,omitempty"`
	ShakeConf            *CloudConf `protobuf:"bytes,24,opt,name=shake_conf,json=shakeConf,proto3" json:"shake_conf,omitempty"`
	OuterDmConf          *CloudConf `protobuf:"bytes,25,opt,name=outer_dm_conf,json=outerDmConf,proto3" json:"outer_dm_conf,omitempty"`
	InnerDmDisable       *CloudConf `protobuf:"bytes,26,opt,name=innerDmDisable,proto3" json:"innerDmDisable,omitempty"`
	InnerDmConf          *CloudConf `protobuf:"bytes,27,opt,name=inner_dm_conf,json=innerDmConf,proto3" json:"inner_dm_conf,omitempty"`
	DolbyConf            *CloudConf `protobuf:"bytes,28,opt,name=dolby_conf,json=dolbyConf,proto3" json:"dolby_conf,omitempty"`
	ColorFilterConf      *CloudConf `protobuf:"bytes,29,opt,name=color_filter_conf,json=colorFilterConf,proto3" json:"color_filter_conf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PlayAbilityConf) Reset()         { *m = PlayAbilityConf{} }
func (m *PlayAbilityConf) String() string { return proto.CompactTextString(m) }
func (*PlayAbilityConf) ProtoMessage()    {}
func (*PlayAbilityConf) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{14}
}

func (m *PlayAbilityConf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayAbilityConf.Unmarshal(m, b)
}
func (m *PlayAbilityConf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayAbilityConf.Marshal(b, m, deterministic)
}
func (m *PlayAbilityConf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayAbilityConf.Merge(m, src)
}
func (m *PlayAbilityConf) XXX_Size() int {
	return xxx_messageInfo_PlayAbilityConf.Size(m)
}
func (m *PlayAbilityConf) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayAbilityConf.DiscardUnknown(m)
}

var xxx_messageInfo_PlayAbilityConf proto.InternalMessageInfo

func (m *PlayAbilityConf) GetBackgroundPlayConf() *CloudConf {
	if m != nil {
		return m.BackgroundPlayConf
	}
	return nil
}

func (m *PlayAbilityConf) GetFlipConf() *CloudConf {
	if m != nil {
		return m.FlipConf
	}
	return nil
}

func (m *PlayAbilityConf) GetCastConf() *CloudConf {
	if m != nil {
		return m.CastConf
	}
	return nil
}

func (m *PlayAbilityConf) GetFeedbackConf() *CloudConf {
	if m != nil {
		return m.FeedbackConf
	}
	return nil
}

func (m *PlayAbilityConf) GetSubtitleConf() *CloudConf {
	if m != nil {
		return m.SubtitleConf
	}
	return nil
}

func (m *PlayAbilityConf) GetPlaybackRateConf() *CloudConf {
	if m != nil {
		return m.PlaybackRateConf
	}
	return nil
}

func (m *PlayAbilityConf) GetTimeUpConf() *CloudConf {
	if m != nil {
		return m.TimeUpConf
	}
	return nil
}

func (m *PlayAbilityConf) GetPlaybackModeConf() *CloudConf {
	if m != nil {
		return m.PlaybackModeConf
	}
	return nil
}

func (m *PlayAbilityConf) GetScaleModeConf() *CloudConf {
	if m != nil {
		return m.ScaleModeConf
	}
	return nil
}

func (m *PlayAbilityConf) GetLikeConf() *CloudConf {
	if m != nil {
		return m.LikeConf
	}
	return nil
}

func (m *PlayAbilityConf) GetDislikeConf() *CloudConf {
	if m != nil {
		return m.DislikeConf
	}
	return nil
}

func (m *PlayAbilityConf) GetCoinConf() *CloudConf {
	if m != nil {
		return m.CoinConf
	}
	return nil
}

func (m *PlayAbilityConf) GetElecConf() *CloudConf {
	if m != nil {
		return m.ElecConf
	}
	return nil
}

func (m *PlayAbilityConf) GetShareConf() *CloudConf {
	if m != nil {
		return m.ShareConf
	}
	return nil
}

func (m *PlayAbilityConf) GetScreenShotConf() *CloudConf {
	if m != nil {
		return m.ScreenShotConf
	}
	return nil
}

func (m *PlayAbilityConf) GetLockScreenConf() *CloudConf {
	if m != nil {
		return m.LockScreenConf
	}
	return nil
}

func (m *PlayAbilityConf) GetRecommendConf() *CloudConf {
	if m != nil {
		return m.RecommendConf
	}
	return nil
}

func (m *PlayAbilityConf) GetPlaybackSpeedConf() *CloudConf {
	if m != nil {
		return m.PlaybackSpeedConf
	}
	return nil
}

func (m *PlayAbilityConf) GetDefinitionConf() *CloudConf {
	if m != nil {
		return m.DefinitionConf
	}
	return nil
}

func (m *PlayAbilityConf) GetSelectionsConf() *CloudConf {
	if m != nil {
		return m.SelectionsConf
	}
	return nil
}

func (m *PlayAbilityConf) GetNextConf() *CloudConf {
	if m != nil {
		return m.NextConf
	}
	return nil
}

func (m *PlayAbilityConf) GetEditDmConf() *CloudConf {
	if m != nil {
		return m.EditDmConf
	}
	return nil
}

func (m *PlayAbilityConf) GetSmallWindowConf() *CloudConf {
	if m != nil {
		return m.SmallWindowConf
	}
	return nil
}

func (m *PlayAbilityConf) GetShakeConf() *CloudConf {
	if m != nil {
		return m.ShakeConf
	}
	return nil
}

func (m *PlayAbilityConf) GetOuterDmConf() *CloudConf {
	if m != nil {
		return m.OuterDmConf
	}
	return nil
}

func (m *PlayAbilityConf) GetInnerDmDisable() *CloudConf {
	if m != nil {
		return m.InnerDmDisable
	}
	return nil
}

func (m *PlayAbilityConf) GetInnerDmConf() *CloudConf {
	if m != nil {
		return m.InnerDmConf
	}
	return nil
}

func (m *PlayAbilityConf) GetDolbyConf() *CloudConf {
	if m != nil {
		return m.DolbyConf
	}
	return nil
}

func (m *PlayAbilityConf) GetColorFilterConf() *CloudConf {
	if m != nil {
		return m.ColorFilterConf
	}
	return nil
}

// 播放控件稿件配置
type PlayArcConf struct {
	BackgroundPlayConf   *ArcConf `protobuf:"bytes,1,opt,name=background_play_conf,json=backgroundPlayConf,proto3" json:"background_play_conf,omitempty"`
	FlipConf             *ArcConf `protobuf:"bytes,2,opt,name=flip_conf,json=flipConf,proto3" json:"flip_conf,omitempty"`
	CastConf             *ArcConf `protobuf:"bytes,3,opt,name=cast_conf,json=castConf,proto3" json:"cast_conf,omitempty"`
	FeedbackConf         *ArcConf `protobuf:"bytes,4,opt,name=feedback_conf,json=feedbackConf,proto3" json:"feedback_conf,omitempty"`
	SubtitleConf         *ArcConf `protobuf:"bytes,5,opt,name=subtitle_conf,json=subtitleConf,proto3" json:"subtitle_conf,omitempty"`
	PlaybackRateConf     *ArcConf `protobuf:"bytes,6,opt,name=playback_rate_conf,json=playbackRateConf,proto3" json:"playback_rate_conf,omitempty"`
	TimeUpConf           *ArcConf `protobuf:"bytes,7,opt,name=time_up_conf,json=timeUpConf,proto3" json:"time_up_conf,omitempty"`
	PlaybackModeConf     *ArcConf `protobuf:"bytes,8,opt,name=playback_mode_conf,json=playbackModeConf,proto3" json:"playback_mode_conf,omitempty"`
	ScaleModeConf        *ArcConf `protobuf:"bytes,9,opt,name=scale_mode_conf,json=scaleModeConf,proto3" json:"scale_mode_conf,omitempty"`
	LikeConf             *ArcConf `protobuf:"bytes,10,opt,name=like_conf,json=likeConf,proto3" json:"like_conf,omitempty"`
	DislikeConf          *ArcConf `protobuf:"bytes,11,opt,name=dislike_conf,json=dislikeConf,proto3" json:"dislike_conf,omitempty"`
	CoinConf             *ArcConf `protobuf:"bytes,12,opt,name=coin_conf,json=coinConf,proto3" json:"coin_conf,omitempty"`
	ElecConf             *ArcConf `protobuf:"bytes,13,opt,name=elec_conf,json=elecConf,proto3" json:"elec_conf,omitempty"`
	ShareConf            *ArcConf `protobuf:"bytes,14,opt,name=share_conf,json=shareConf,proto3" json:"share_conf,omitempty"`
	ScreenShotConf       *ArcConf `protobuf:"bytes,15,opt,name=screen_shot_conf,json=screenShotConf,proto3" json:"screen_shot_conf,omitempty"`
	LockScreenConf       *ArcConf `protobuf:"bytes,16,opt,name=lock_screen_conf,json=lockScreenConf,proto3" json:"lock_screen_conf,omitempty"`
	RecommendConf        *ArcConf `protobuf:"bytes,17,opt,name=recommend_conf,json=recommendConf,proto3" json:"recommend_conf,omitempty"`
	PlaybackSpeedConf    *ArcConf `protobuf:"bytes,18,opt,name=playback_speed_conf,json=playbackSpeedConf,proto3" json:"playback_speed_conf,omitempty"`
	DefinitionConf       *ArcConf `protobuf:"bytes,19,opt,name=definition_conf,json=definitionConf,proto3" json:"definition_conf,omitempty"`
	SelectionsConf       *ArcConf `protobuf:"bytes,20,opt,name=selections_conf,json=selectionsConf,proto3" json:"selections_conf,omitempty"`
	NextConf             *ArcConf `protobuf:"bytes,21,opt,name=next_conf,json=nextConf,proto3" json:"next_conf,omitempty"`
	EditDmConf           *ArcConf `protobuf:"bytes,22,opt,name=edit_dm_conf,json=editDmConf,proto3" json:"edit_dm_conf,omitempty"`
	SmallWindowConf      *ArcConf `protobuf:"bytes,23,opt,name=small_window_conf,json=smallWindowConf,proto3" json:"small_window_conf,omitempty"`
	ShakeConf            *ArcConf `protobuf:"bytes,24,opt,name=shake_conf,json=shakeConf,proto3" json:"shake_conf,omitempty"`
	OuterDmConf          *ArcConf `protobuf:"bytes,25,opt,name=outer_dm_conf,json=outerDmConf,proto3" json:"outer_dm_conf,omitempty"`
	InnerDmConf          *ArcConf `protobuf:"bytes,26,opt,name=inner_dm_conf,json=innerDmConf,proto3" json:"inner_dm_conf,omitempty"`
	PanoramaConf         *ArcConf `protobuf:"bytes,27,opt,name=panorama_conf,json=panoramaConf,proto3" json:"panorama_conf,omitempty"`
	DolbyConf            *ArcConf `protobuf:"bytes,28,opt,name=dolby_conf,json=dolbyConf,proto3" json:"dolby_conf,omitempty"`
	ScreenRecordingConf  *ArcConf `protobuf:"bytes,29,opt,name=screen_recording_conf,json=screenRecordingConf,proto3" json:"screen_recording_conf,omitempty"`
	ColorFilterConf      *ArcConf `protobuf:"bytes,30,opt,name=color_filter_conf,json=colorFilterConf,proto3" json:"color_filter_conf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayArcConf) Reset()         { *m = PlayArcConf{} }
func (m *PlayArcConf) String() string { return proto.CompactTextString(m) }
func (*PlayArcConf) ProtoMessage()    {}
func (*PlayArcConf) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{15}
}

func (m *PlayArcConf) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayArcConf.Unmarshal(m, b)
}
func (m *PlayArcConf) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayArcConf.Marshal(b, m, deterministic)
}
func (m *PlayArcConf) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayArcConf.Merge(m, src)
}
func (m *PlayArcConf) XXX_Size() int {
	return xxx_messageInfo_PlayArcConf.Size(m)
}
func (m *PlayArcConf) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayArcConf.DiscardUnknown(m)
}

var xxx_messageInfo_PlayArcConf proto.InternalMessageInfo

func (m *PlayArcConf) GetBackgroundPlayConf() *ArcConf {
	if m != nil {
		return m.BackgroundPlayConf
	}
	return nil
}

func (m *PlayArcConf) GetFlipConf() *ArcConf {
	if m != nil {
		return m.FlipConf
	}
	return nil
}

func (m *PlayArcConf) GetCastConf() *ArcConf {
	if m != nil {
		return m.CastConf
	}
	return nil
}

func (m *PlayArcConf) GetFeedbackConf() *ArcConf {
	if m != nil {
		return m.FeedbackConf
	}
	return nil
}

func (m *PlayArcConf) GetSubtitleConf() *ArcConf {
	if m != nil {
		return m.SubtitleConf
	}
	return nil
}

func (m *PlayArcConf) GetPlaybackRateConf() *ArcConf {
	if m != nil {
		return m.PlaybackRateConf
	}
	return nil
}

func (m *PlayArcConf) GetTimeUpConf() *ArcConf {
	if m != nil {
		return m.TimeUpConf
	}
	return nil
}

func (m *PlayArcConf) GetPlaybackModeConf() *ArcConf {
	if m != nil {
		return m.PlaybackModeConf
	}
	return nil
}

func (m *PlayArcConf) GetScaleModeConf() *ArcConf {
	if m != nil {
		return m.ScaleModeConf
	}
	return nil
}

func (m *PlayArcConf) GetLikeConf() *ArcConf {
	if m != nil {
		return m.LikeConf
	}
	return nil
}

func (m *PlayArcConf) GetDislikeConf() *ArcConf {
	if m != nil {
		return m.DislikeConf
	}
	return nil
}

func (m *PlayArcConf) GetCoinConf() *ArcConf {
	if m != nil {
		return m.CoinConf
	}
	return nil
}

func (m *PlayArcConf) GetElecConf() *ArcConf {
	if m != nil {
		return m.ElecConf
	}
	return nil
}

func (m *PlayArcConf) GetShareConf() *ArcConf {
	if m != nil {
		return m.ShareConf
	}
	return nil
}

func (m *PlayArcConf) GetScreenShotConf() *ArcConf {
	if m != nil {
		return m.ScreenShotConf
	}
	return nil
}

func (m *PlayArcConf) GetLockScreenConf() *ArcConf {
	if m != nil {
		return m.LockScreenConf
	}
	return nil
}

func (m *PlayArcConf) GetRecommendConf() *ArcConf {
	if m != nil {
		return m.RecommendConf
	}
	return nil
}

func (m *PlayArcConf) GetPlaybackSpeedConf() *ArcConf {
	if m != nil {
		return m.PlaybackSpeedConf
	}
	return nil
}

func (m *PlayArcConf) GetDefinitionConf() *ArcConf {
	if m != nil {
		return m.DefinitionConf
	}
	return nil
}

func (m *PlayArcConf) GetSelectionsConf() *ArcConf {
	if m != nil {
		return m.SelectionsConf
	}
	return nil
}

func (m *PlayArcConf) GetNextConf() *ArcConf {
	if m != nil {
		return m.NextConf
	}
	return nil
}

func (m *PlayArcConf) GetEditDmConf() *ArcConf {
	if m != nil {
		return m.EditDmConf
	}
	return nil
}

func (m *PlayArcConf) GetSmallWindowConf() *ArcConf {
	if m != nil {
		return m.SmallWindowConf
	}
	return nil
}

func (m *PlayArcConf) GetShakeConf() *ArcConf {
	if m != nil {
		return m.ShakeConf
	}
	return nil
}

func (m *PlayArcConf) GetOuterDmConf() *ArcConf {
	if m != nil {
		return m.OuterDmConf
	}
	return nil
}

func (m *PlayArcConf) GetInnerDmConf() *ArcConf {
	if m != nil {
		return m.InnerDmConf
	}
	return nil
}

func (m *PlayArcConf) GetPanoramaConf() *ArcConf {
	if m != nil {
		return m.PanoramaConf
	}
	return nil
}

func (m *PlayArcConf) GetDolbyConf() *ArcConf {
	if m != nil {
		return m.DolbyConf
	}
	return nil
}

func (m *PlayArcConf) GetScreenRecordingConf() *ArcConf {
	if m != nil {
		return m.ScreenRecordingConf
	}
	return nil
}

func (m *PlayArcConf) GetColorFilterConf() *ArcConf {
	if m != nil {
		return m.ColorFilterConf
	}
	return nil
}

// 编辑播放界面配置-响应
type PlayConfEditReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayConfEditReply) Reset()         { *m = PlayConfEditReply{} }
func (m *PlayConfEditReply) String() string { return proto.CompactTextString(m) }
func (*PlayConfEditReply) ProtoMessage()    {}
func (*PlayConfEditReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{16}
}

func (m *PlayConfEditReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayConfEditReply.Unmarshal(m, b)
}
func (m *PlayConfEditReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayConfEditReply.Marshal(b, m, deterministic)
}
func (m *PlayConfEditReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayConfEditReply.Merge(m, src)
}
func (m *PlayConfEditReply) XXX_Size() int {
	return xxx_messageInfo_PlayConfEditReply.Size(m)
}
func (m *PlayConfEditReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayConfEditReply.DiscardUnknown(m)
}

var xxx_messageInfo_PlayConfEditReply proto.InternalMessageInfo

// 编辑播放界面配置-请求
type PlayConfEditReq struct {
	// 播放界面配置
	PlayConf             []*PlayConfState `protobuf:"bytes,1,rep,name=play_conf,json=playConf,proto3" json:"play_conf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PlayConfEditReq) Reset()         { *m = PlayConfEditReq{} }
func (m *PlayConfEditReq) String() string { return proto.CompactTextString(m) }
func (*PlayConfEditReq) ProtoMessage()    {}
func (*PlayConfEditReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{17}
}

func (m *PlayConfEditReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayConfEditReq.Unmarshal(m, b)
}
func (m *PlayConfEditReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayConfEditReq.Marshal(b, m, deterministic)
}
func (m *PlayConfEditReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayConfEditReq.Merge(m, src)
}
func (m *PlayConfEditReq) XXX_Size() int {
	return xxx_messageInfo_PlayConfEditReq.Size(m)
}
func (m *PlayConfEditReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayConfEditReq.DiscardUnknown(m)
}

var xxx_messageInfo_PlayConfEditReq proto.InternalMessageInfo

func (m *PlayConfEditReq) GetPlayConf() []*PlayConfState {
	if m != nil {
		return m.PlayConf
	}
	return nil
}

// 获取播放界面配置-响应
type PlayConfReply struct {
	//播放控件用户自定义配置
	PlayConf             *PlayAbilityConf `protobuf:"bytes,1,opt,name=play_conf,json=playConf,proto3" json:"play_conf,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PlayConfReply) Reset()         { *m = PlayConfReply{} }
func (m *PlayConfReply) String() string { return proto.CompactTextString(m) }
func (*PlayConfReply) ProtoMessage()    {}
func (*PlayConfReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{18}
}

func (m *PlayConfReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayConfReply.Unmarshal(m, b)
}
func (m *PlayConfReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayConfReply.Marshal(b, m, deterministic)
}
func (m *PlayConfReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayConfReply.Merge(m, src)
}
func (m *PlayConfReply) XXX_Size() int {
	return xxx_messageInfo_PlayConfReply.Size(m)
}
func (m *PlayConfReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayConfReply.DiscardUnknown(m)
}

var xxx_messageInfo_PlayConfReply proto.InternalMessageInfo

func (m *PlayConfReply) GetPlayConf() *PlayAbilityConf {
	if m != nil {
		return m.PlayConf
	}
	return nil
}

// 获取播放界面配置-请求
type PlayConfReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayConfReq) Reset()         { *m = PlayConfReq{} }
func (m *PlayConfReq) String() string { return proto.CompactTextString(m) }
func (*PlayConfReq) ProtoMessage()    {}
func (*PlayConfReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{19}
}

func (m *PlayConfReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayConfReq.Unmarshal(m, b)
}
func (m *PlayConfReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayConfReq.Marshal(b, m, deterministic)
}
func (m *PlayConfReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayConfReq.Merge(m, src)
}
func (m *PlayConfReq) XXX_Size() int {
	return xxx_messageInfo_PlayConfReq.Size(m)
}
func (m *PlayConfReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayConfReq.DiscardUnknown(m)
}

var xxx_messageInfo_PlayConfReq proto.InternalMessageInfo

// 播放界面配置
type PlayConfState struct {
	// 设置类型
	ConfType ConfType `protobuf:"varint,1,opt,name=conf_type,json=confType,proto3,enum=bilibili.app.playurl.v1.ConfType" json:"conf_type,omitempty"`
	// 是否隐藏
	Show bool `protobuf:"varint,2,opt,name=show,proto3" json:"show,omitempty"`
	// 配置字段值
	FieldValue *FieldValue `protobuf:"bytes,3,opt,name=field_value,json=fieldValue,proto3" json:"field_value,omitempty"`
	//
	ConfValue            *ConfValue `protobuf:"bytes,4,opt,name=conf_value,json=confValue,proto3" json:"conf_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PlayConfState) Reset()         { *m = PlayConfState{} }
func (m *PlayConfState) String() string { return proto.CompactTextString(m) }
func (*PlayConfState) ProtoMessage()    {}
func (*PlayConfState) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{20}
}

func (m *PlayConfState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayConfState.Unmarshal(m, b)
}
func (m *PlayConfState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayConfState.Marshal(b, m, deterministic)
}
func (m *PlayConfState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayConfState.Merge(m, src)
}
func (m *PlayConfState) XXX_Size() int {
	return xxx_messageInfo_PlayConfState.Size(m)
}
func (m *PlayConfState) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayConfState.DiscardUnknown(m)
}

var xxx_messageInfo_PlayConfState proto.InternalMessageInfo

func (m *PlayConfState) GetConfType() ConfType {
	if m != nil {
		return m.ConfType
	}
	return ConfType_NoType
}

func (m *PlayConfState) GetShow() bool {
	if m != nil {
		return m.Show
	}
	return false
}

func (m *PlayConfState) GetFieldValue() *FieldValue {
	if m != nil {
		return m.FieldValue
	}
	return nil
}

func (m *PlayConfState) GetConfValue() *ConfValue {
	if m != nil {
		return m.ConfValue
	}
	return nil
}

//
type PlayLimit struct {
	//
	Code PlayLimitCode `protobuf:"varint,1,opt,name=code,proto3,enum=bilibili.app.playurl.v1.PlayLimitCode" json:"code,omitempty"`
	//
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	//
	SubMessage string `protobuf:"bytes,3,opt,name=sub_message,json=subMessage,proto3" json:"sub_message,omitempty"`
	//
	Button               *ButtonStyle `protobuf:"bytes,4,opt,name=button,proto3" json:"button,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PlayLimit) Reset()         { *m = PlayLimit{} }
func (m *PlayLimit) String() string { return proto.CompactTextString(m) }
func (*PlayLimit) ProtoMessage()    {}
func (*PlayLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{21}
}

func (m *PlayLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayLimit.Unmarshal(m, b)
}
func (m *PlayLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayLimit.Marshal(b, m, deterministic)
}
func (m *PlayLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayLimit.Merge(m, src)
}
func (m *PlayLimit) XXX_Size() int {
	return xxx_messageInfo_PlayLimit.Size(m)
}
func (m *PlayLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayLimit.DiscardUnknown(m)
}

var xxx_messageInfo_PlayLimit proto.InternalMessageInfo

func (m *PlayLimit) GetCode() PlayLimitCode {
	if m != nil {
		return m.Code
	}
	return PlayLimitCode_PLCUnkown
}

func (m *PlayLimit) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *PlayLimit) GetSubMessage() string {
	if m != nil {
		return m.SubMessage
	}
	return ""
}

func (m *PlayLimit) GetButton() *ButtonStyle {
	if m != nil {
		return m.Button
	}
	return nil
}

// 视频地址-回复
type PlayURLReply struct {
	// 清晰的
	Quality uint32 `protobuf:"varint,1,opt,name=quality,proto3" json:"quality,omitempty"`
	// 格式
	Format string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	// 总时长(单位为ms)
	Timelength uint64 `protobuf:"varint,3,opt,name=timelength,proto3" json:"timelength,omitempty"`
	// 编码id
	VideoCodecid uint32 `protobuf:"varint,4,opt,name=video_codecid,json=videoCodecid,proto3" json:"video_codecid,omitempty"`
	// 视频流版本
	Fnver uint32 `protobuf:"varint,5,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 视频流格式
	Fnval uint32 `protobuf:"varint,6,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 是否支持投影
	VideoProject bool `protobuf:"varint,7,opt,name=video_project,json=videoProject,proto3" json:"video_project,omitempty"`
	// 分段视频流列表
	Durl []*ResponseUrl `protobuf:"bytes,8,rep,name=durl,proto3" json:"durl,omitempty"`
	// dash数据
	Dash *ResponseDash `protobuf:"bytes,9,opt,name=dash,proto3" json:"dash,omitempty"`
	// 是否非全二压
	NoRexcode int32 `protobuf:"varint,10,opt,name=no_rexcode,json=noRexcode,proto3" json:"no_rexcode,omitempty"`
	// 互动视频升级提示
	UpgradeLimit *UpgradeLimit `protobuf:"bytes,11,opt,name=upgrade_limit,json=upgradeLimit,proto3" json:"upgrade_limit,omitempty"`
	// 清晰度描述列表
	SupportFormats []*FormatDescription `protobuf:"bytes,12,rep,name=support_formats,json=supportFormats,proto3" json:"support_formats,omitempty"`
	// 视频格式
	Type                 VideoType `protobuf:"varint,13,opt,name=type,proto3,enum=bilibili.app.playurl.v1.VideoType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PlayURLReply) Reset()         { *m = PlayURLReply{} }
func (m *PlayURLReply) String() string { return proto.CompactTextString(m) }
func (*PlayURLReply) ProtoMessage()    {}
func (*PlayURLReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{22}
}

func (m *PlayURLReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayURLReply.Unmarshal(m, b)
}
func (m *PlayURLReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayURLReply.Marshal(b, m, deterministic)
}
func (m *PlayURLReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayURLReply.Merge(m, src)
}
func (m *PlayURLReply) XXX_Size() int {
	return xxx_messageInfo_PlayURLReply.Size(m)
}
func (m *PlayURLReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayURLReply.DiscardUnknown(m)
}

var xxx_messageInfo_PlayURLReply proto.InternalMessageInfo

func (m *PlayURLReply) GetQuality() uint32 {
	if m != nil {
		return m.Quality
	}
	return 0
}

func (m *PlayURLReply) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *PlayURLReply) GetTimelength() uint64 {
	if m != nil {
		return m.Timelength
	}
	return 0
}

func (m *PlayURLReply) GetVideoCodecid() uint32 {
	if m != nil {
		return m.VideoCodecid
	}
	return 0
}

func (m *PlayURLReply) GetFnver() uint32 {
	if m != nil {
		return m.Fnver
	}
	return 0
}

func (m *PlayURLReply) GetFnval() uint32 {
	if m != nil {
		return m.Fnval
	}
	return 0
}

func (m *PlayURLReply) GetVideoProject() bool {
	if m != nil {
		return m.VideoProject
	}
	return false
}

func (m *PlayURLReply) GetDurl() []*ResponseUrl {
	if m != nil {
		return m.Durl
	}
	return nil
}

func (m *PlayURLReply) GetDash() *ResponseDash {
	if m != nil {
		return m.Dash
	}
	return nil
}

func (m *PlayURLReply) GetNoRexcode() int32 {
	if m != nil {
		return m.NoRexcode
	}
	return 0
}

func (m *PlayURLReply) GetUpgradeLimit() *UpgradeLimit {
	if m != nil {
		return m.UpgradeLimit
	}
	return nil
}

func (m *PlayURLReply) GetSupportFormats() []*FormatDescription {
	if m != nil {
		return m.SupportFormats
	}
	return nil
}

func (m *PlayURLReply) GetType() VideoType {
	if m != nil {
		return m.Type
	}
	return VideoType_Unknown_VALUE
}

// 视频地址-请求
type PlayURLReq struct {
	// 稿件avid
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// 视频cid
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	// 清晰度
	Qn int64 `protobuf:"varint,3,opt,name=qn,proto3" json:"qn,omitempty"`
	// 视频流版本
	Fnver int32 `protobuf:"varint,4,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 视频流格式
	Fnval int32 `protobuf:"varint,5,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 下载模式
	// 0:播放 1:flv下载 2:dash下载
	Download uint32 `protobuf:"varint,6,opt,name=download,proto3" json:"download,omitempty"`
	// 流url强制是用域名
	// 0:允许使用ip 1:使用http 2:使用https
	ForceHost int32 `protobuf:"varint,7,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4K
	Fourk bool `protobuf:"varint,8,opt,name=fourk,proto3" json:"fourk,omitempty"`
	// 当前页spm
	Spmid string `protobuf:"bytes,9,opt,name=spmid,proto3" json:"spmid,omitempty"`
	// 上一页spm
	FromSpmid            string   `protobuf:"bytes,10,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayURLReq) Reset()         { *m = PlayURLReq{} }
func (m *PlayURLReq) String() string { return proto.CompactTextString(m) }
func (*PlayURLReq) ProtoMessage()    {}
func (*PlayURLReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{23}
}

func (m *PlayURLReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayURLReq.Unmarshal(m, b)
}
func (m *PlayURLReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayURLReq.Marshal(b, m, deterministic)
}
func (m *PlayURLReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayURLReq.Merge(m, src)
}
func (m *PlayURLReq) XXX_Size() int {
	return xxx_messageInfo_PlayURLReq.Size(m)
}
func (m *PlayURLReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayURLReq.DiscardUnknown(m)
}

var xxx_messageInfo_PlayURLReq proto.InternalMessageInfo

func (m *PlayURLReq) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *PlayURLReq) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *PlayURLReq) GetQn() int64 {
	if m != nil {
		return m.Qn
	}
	return 0
}

func (m *PlayURLReq) GetFnver() int32 {
	if m != nil {
		return m.Fnver
	}
	return 0
}

func (m *PlayURLReq) GetFnval() int32 {
	if m != nil {
		return m.Fnval
	}
	return 0
}

func (m *PlayURLReq) GetDownload() uint32 {
	if m != nil {
		return m.Download
	}
	return 0
}

func (m *PlayURLReq) GetForceHost() int32 {
	if m != nil {
		return m.ForceHost
	}
	return 0
}

func (m *PlayURLReq) GetFourk() bool {
	if m != nil {
		return m.Fourk
	}
	return false
}

func (m *PlayURLReq) GetSpmid() string {
	if m != nil {
		return m.Spmid
	}
	return ""
}

func (m *PlayURLReq) GetFromSpmid() string {
	if m != nil {
		return m.FromSpmid
	}
	return ""
}

// 播放页信息-回复
type PlayViewReply struct {
	// 视频流信息
	VideoInfo *VideoInfo `protobuf:"bytes,1,opt,name=video_info,json=videoInfo,proto3" json:"video_info,omitempty"`
	// 播放控件用户自定义配置
	PlayConf *PlayAbilityConf `protobuf:"bytes,2,opt,name=play_conf,json=playConf,proto3" json:"play_conf,omitempty"`
	// 互动视频升级提示
	UpgradeLimit *UpgradeLimit `protobuf:"bytes,3,opt,name=upgrade_limit,json=upgradeLimit,proto3" json:"upgrade_limit,omitempty"`
	// Chronos灰度管理
	Chronos *Chronos `protobuf:"bytes,4,opt,name=chronos,proto3" json:"chronos,omitempty"`
	// 播放控件稿件配置
	PlayArc *PlayArcConf `protobuf:"bytes,5,opt,name=play_arc,json=playArc,proto3" json:"play_arc,omitempty"`
	// 事件
	Event *Event `protobuf:"bytes,6,opt,name=event,proto3" json:"event,omitempty"`
	//
	Ab *AB `protobuf:"bytes,7,opt,name=ab,proto3" json:"ab,omitempty"`
	//
	PlayLimit            *PlayLimit `protobuf:"bytes,8,opt,name=play_limit,json=playLimit,proto3" json:"play_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PlayViewReply) Reset()         { *m = PlayViewReply{} }
func (m *PlayViewReply) String() string { return proto.CompactTextString(m) }
func (*PlayViewReply) ProtoMessage()    {}
func (*PlayViewReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{24}
}

func (m *PlayViewReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayViewReply.Unmarshal(m, b)
}
func (m *PlayViewReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayViewReply.Marshal(b, m, deterministic)
}
func (m *PlayViewReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayViewReply.Merge(m, src)
}
func (m *PlayViewReply) XXX_Size() int {
	return xxx_messageInfo_PlayViewReply.Size(m)
}
func (m *PlayViewReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayViewReply.DiscardUnknown(m)
}

var xxx_messageInfo_PlayViewReply proto.InternalMessageInfo

func (m *PlayViewReply) GetVideoInfo() *VideoInfo {
	if m != nil {
		return m.VideoInfo
	}
	return nil
}

func (m *PlayViewReply) GetPlayConf() *PlayAbilityConf {
	if m != nil {
		return m.PlayConf
	}
	return nil
}

func (m *PlayViewReply) GetUpgradeLimit() *UpgradeLimit {
	if m != nil {
		return m.UpgradeLimit
	}
	return nil
}

func (m *PlayViewReply) GetChronos() *Chronos {
	if m != nil {
		return m.Chronos
	}
	return nil
}

func (m *PlayViewReply) GetPlayArc() *PlayArcConf {
	if m != nil {
		return m.PlayArc
	}
	return nil
}

func (m *PlayViewReply) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (m *PlayViewReply) GetAb() *AB {
	if m != nil {
		return m.Ab
	}
	return nil
}

func (m *PlayViewReply) GetPlayLimit() *PlayLimit {
	if m != nil {
		return m.PlayLimit
	}
	return nil
}

// 播放页信息-请求
type PlayViewReq struct {
	// 稿件avid
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// 视频cid
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	// 清晰度
	Qn int64 `protobuf:"varint,3,opt,name=qn,proto3" json:"qn,omitempty"`
	// 视频流版本
	Fnver int32 `protobuf:"varint,4,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 视频流格式
	Fnval int32 `protobuf:"varint,5,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 下载模式
	// 0:播放 1:flv下载 2:dash下载
	Download uint32 `protobuf:"varint,6,opt,name=download,proto3" json:"download,omitempty"`
	// 流url强制是用域名
	// 0:允许使用ip 1:使用http 2:使用https
	ForceHost int32 `protobuf:"varint,7,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4K
	Fourk bool `protobuf:"varint,8,opt,name=fourk,proto3" json:"fourk,omitempty"`
	// 当前页spm
	Spmid string `protobuf:"bytes,9,opt,name=spmid,proto3" json:"spmid,omitempty"`
	// 上一页spm
	FromSpmid string `protobuf:"bytes,10,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	// 青少年模式
	TeenagersMode int32 `protobuf:"varint,11,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
	// 编码
	PreferCodecType CodeType `protobuf:"varint,12,opt,name=prefer_codec_type,json=preferCodecType,proto3,enum=bilibili.app.playurl.v1.CodeType" json:"prefer_codec_type,omitempty"`
	// 业务类型
	Business Business `protobuf:"varint,13,opt,name=business,proto3,enum=bilibili.app.playurl.v1.Business" json:"business,omitempty"`
	//
	VoiceBalance         int64    `protobuf:"varint,14,opt,name=voice_balance,json=voiceBalance,proto3" json:"voice_balance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayViewReq) Reset()         { *m = PlayViewReq{} }
func (m *PlayViewReq) String() string { return proto.CompactTextString(m) }
func (*PlayViewReq) ProtoMessage()    {}
func (*PlayViewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{25}
}

func (m *PlayViewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayViewReq.Unmarshal(m, b)
}
func (m *PlayViewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayViewReq.Marshal(b, m, deterministic)
}
func (m *PlayViewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayViewReq.Merge(m, src)
}
func (m *PlayViewReq) XXX_Size() int {
	return xxx_messageInfo_PlayViewReq.Size(m)
}
func (m *PlayViewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayViewReq.DiscardUnknown(m)
}

var xxx_messageInfo_PlayViewReq proto.InternalMessageInfo

func (m *PlayViewReq) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *PlayViewReq) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *PlayViewReq) GetQn() int64 {
	if m != nil {
		return m.Qn
	}
	return 0
}

func (m *PlayViewReq) GetFnver() int32 {
	if m != nil {
		return m.Fnver
	}
	return 0
}

func (m *PlayViewReq) GetFnval() int32 {
	if m != nil {
		return m.Fnval
	}
	return 0
}

func (m *PlayViewReq) GetDownload() uint32 {
	if m != nil {
		return m.Download
	}
	return 0
}

func (m *PlayViewReq) GetForceHost() int32 {
	if m != nil {
		return m.ForceHost
	}
	return 0
}

func (m *PlayViewReq) GetFourk() bool {
	if m != nil {
		return m.Fourk
	}
	return false
}

func (m *PlayViewReq) GetSpmid() string {
	if m != nil {
		return m.Spmid
	}
	return ""
}

func (m *PlayViewReq) GetFromSpmid() string {
	if m != nil {
		return m.FromSpmid
	}
	return ""
}

func (m *PlayViewReq) GetTeenagersMode() int32 {
	if m != nil {
		return m.TeenagersMode
	}
	return 0
}

func (m *PlayViewReq) GetPreferCodecType() CodeType {
	if m != nil {
		return m.PreferCodecType
	}
	return CodeType_NOCODE
}

func (m *PlayViewReq) GetBusiness() Business {
	if m != nil {
		return m.Business
	}
	return Business_UNKNOWN
}

func (m *PlayViewReq) GetVoiceBalance() int64 {
	if m != nil {
		return m.VoiceBalance
	}
	return 0
}

// 投屏地址-响应
type ProjectReply struct {
	Project              *PlayURLReply `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ProjectReply) Reset()         { *m = ProjectReply{} }
func (m *ProjectReply) String() string { return proto.CompactTextString(m) }
func (*ProjectReply) ProtoMessage()    {}
func (*ProjectReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{26}
}

func (m *ProjectReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectReply.Unmarshal(m, b)
}
func (m *ProjectReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectReply.Marshal(b, m, deterministic)
}
func (m *ProjectReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectReply.Merge(m, src)
}
func (m *ProjectReply) XXX_Size() int {
	return xxx_messageInfo_ProjectReply.Size(m)
}
func (m *ProjectReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectReply.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectReply proto.InternalMessageInfo

func (m *ProjectReply) GetProject() *PlayURLReply {
	if m != nil {
		return m.Project
	}
	return nil
}

// 投屏地址-请求
type ProjectReq struct {
	// 稿件avid
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// 视频cid
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	// 清晰度
	Qn int64 `protobuf:"varint,3,opt,name=qn,proto3" json:"qn,omitempty"`
	// 视频流版本
	Fnver int32 `protobuf:"varint,4,opt,name=fnver,proto3" json:"fnver,omitempty"`
	// 视频流格式
	Fnval int32 `protobuf:"varint,5,opt,name=fnval,proto3" json:"fnval,omitempty"`
	// 下载模式
	// 0:播放 1:flv下载 2:dash下载
	Download uint32 `protobuf:"varint,6,opt,name=download,proto3" json:"download,omitempty"`
	// 流url强制是用域名
	// 0:允许使用ip 1:使用http 2:使用https
	ForceHost int32 `protobuf:"varint,7,opt,name=force_host,json=forceHost,proto3" json:"force_host,omitempty"`
	// 是否4K
	Fourk bool `protobuf:"varint,8,opt,name=fourk,proto3" json:"fourk,omitempty"`
	// 当前页spm
	Spmid string `protobuf:"bytes,9,opt,name=spmid,proto3" json:"spmid,omitempty"`
	// 上一页spm
	FromSpmid string `protobuf:"bytes,10,opt,name=from_spmid,json=fromSpmid,proto3" json:"from_spmid,omitempty"`
	// 使用协议
	// 0:默认乐播 1:自建协议 2:云投屏 3:airplay
	Protocol int32 `protobuf:"varint,11,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// 投屏设备
	// 0:默认其他 1:OTT设备
	DeviceType           int32    `protobuf:"varint,12,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProjectReq) Reset()         { *m = ProjectReq{} }
func (m *ProjectReq) String() string { return proto.CompactTextString(m) }
func (*ProjectReq) ProtoMessage()    {}
func (*ProjectReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{27}
}

func (m *ProjectReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectReq.Unmarshal(m, b)
}
func (m *ProjectReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectReq.Marshal(b, m, deterministic)
}
func (m *ProjectReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectReq.Merge(m, src)
}
func (m *ProjectReq) XXX_Size() int {
	return xxx_messageInfo_ProjectReq.Size(m)
}
func (m *ProjectReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectReq.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectReq proto.InternalMessageInfo

func (m *ProjectReq) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *ProjectReq) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *ProjectReq) GetQn() int64 {
	if m != nil {
		return m.Qn
	}
	return 0
}

func (m *ProjectReq) GetFnver() int32 {
	if m != nil {
		return m.Fnver
	}
	return 0
}

func (m *ProjectReq) GetFnval() int32 {
	if m != nil {
		return m.Fnval
	}
	return 0
}

func (m *ProjectReq) GetDownload() uint32 {
	if m != nil {
		return m.Download
	}
	return 0
}

func (m *ProjectReq) GetForceHost() int32 {
	if m != nil {
		return m.ForceHost
	}
	return 0
}

func (m *ProjectReq) GetFourk() bool {
	if m != nil {
		return m.Fourk
	}
	return false
}

func (m *ProjectReq) GetSpmid() string {
	if m != nil {
		return m.Spmid
	}
	return ""
}

func (m *ProjectReq) GetFromSpmid() string {
	if m != nil {
		return m.FromSpmid
	}
	return ""
}

func (m *ProjectReq) GetProtocol() int32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *ProjectReq) GetDeviceType() int32 {
	if m != nil {
		return m.DeviceType
	}
	return 0
}

// dash数据
type ResponseDash struct {
	// dash视频流
	Video []*DashItem `protobuf:"bytes,1,rep,name=video,proto3" json:"video,omitempty"`
	// dash伴音流
	Audio                []*DashItem `protobuf:"bytes,2,rep,name=audio,proto3" json:"audio,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ResponseDash) Reset()         { *m = ResponseDash{} }
func (m *ResponseDash) String() string { return proto.CompactTextString(m) }
func (*ResponseDash) ProtoMessage()    {}
func (*ResponseDash) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{28}
}

func (m *ResponseDash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseDash.Unmarshal(m, b)
}
func (m *ResponseDash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseDash.Marshal(b, m, deterministic)
}
func (m *ResponseDash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseDash.Merge(m, src)
}
func (m *ResponseDash) XXX_Size() int {
	return xxx_messageInfo_ResponseDash.Size(m)
}
func (m *ResponseDash) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseDash.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseDash proto.InternalMessageInfo

func (m *ResponseDash) GetVideo() []*DashItem {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *ResponseDash) GetAudio() []*DashItem {
	if m != nil {
		return m.Audio
	}
	return nil
}

// 分段流条目
type ResponseUrl struct {
	// 分段序号
	Order uint32 `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"`
	// 分段时长
	Length uint64 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	// 分段大小
	Size uint64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	// 主线流
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// 备用流
	BackupUrl []string `protobuf:"bytes,5,rep,name=backup_url,json=backupUrl,proto3" json:"backup_url,omitempty"`
	// md5
	Md5                  string   `protobuf:"bytes,6,opt,name=md5,proto3" json:"md5,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseUrl) Reset()         { *m = ResponseUrl{} }
func (m *ResponseUrl) String() string { return proto.CompactTextString(m) }
func (*ResponseUrl) ProtoMessage()    {}
func (*ResponseUrl) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{29}
}

func (m *ResponseUrl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseUrl.Unmarshal(m, b)
}
func (m *ResponseUrl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseUrl.Marshal(b, m, deterministic)
}
func (m *ResponseUrl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseUrl.Merge(m, src)
}
func (m *ResponseUrl) XXX_Size() int {
	return xxx_messageInfo_ResponseUrl.Size(m)
}
func (m *ResponseUrl) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseUrl.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseUrl proto.InternalMessageInfo

func (m *ResponseUrl) GetOrder() uint32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *ResponseUrl) GetLength() uint64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *ResponseUrl) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ResponseUrl) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ResponseUrl) GetBackupUrl() []string {
	if m != nil {
		return m.BackupUrl
	}
	return nil
}

func (m *ResponseUrl) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

//分段视频流
type SegmentVideo struct {
	//分段视频流列表
	Segment              []*ResponseUrl `protobuf:"bytes,1,rep,name=segment,proto3" json:"segment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SegmentVideo) Reset()         { *m = SegmentVideo{} }
func (m *SegmentVideo) String() string { return proto.CompactTextString(m) }
func (*SegmentVideo) ProtoMessage()    {}
func (*SegmentVideo) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{30}
}

func (m *SegmentVideo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SegmentVideo.Unmarshal(m, b)
}
func (m *SegmentVideo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SegmentVideo.Marshal(b, m, deterministic)
}
func (m *SegmentVideo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SegmentVideo.Merge(m, src)
}
func (m *SegmentVideo) XXX_Size() int {
	return xxx_messageInfo_SegmentVideo.Size(m)
}
func (m *SegmentVideo) XXX_DiscardUnknown() {
	xxx_messageInfo_SegmentVideo.DiscardUnknown(m)
}

var xxx_messageInfo_SegmentVideo proto.InternalMessageInfo

func (m *SegmentVideo) GetSegment() []*ResponseUrl {
	if m != nil {
		return m.Segment
	}
	return nil
}

// 震动
type Shake struct {
	// 文件地址
	File                 string   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Shake) Reset()         { *m = Shake{} }
func (m *Shake) String() string { return proto.CompactTextString(m) }
func (*Shake) ProtoMessage()    {}
func (*Shake) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{31}
}

func (m *Shake) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shake.Unmarshal(m, b)
}
func (m *Shake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shake.Marshal(b, m, deterministic)
}
func (m *Shake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shake.Merge(m, src)
}
func (m *Shake) XXX_Size() int {
	return xxx_messageInfo_Shake.Size(m)
}
func (m *Shake) XXX_DiscardUnknown() {
	xxx_messageInfo_Shake.DiscardUnknown(m)
}

var xxx_messageInfo_Shake proto.InternalMessageInfo

func (m *Shake) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

// 视频流信息
type Stream struct {
	// 元数据
	StreamInfo *StreamInfo `protobuf:"bytes,1,opt,name=stream_info,json=streamInfo,proto3" json:"stream_info,omitempty"`
	// 流数据
	//
	// Types that are valid to be assigned to Content:
	//	*Stream_DashVideo
	//	*Stream_SegmentVideo
	Content              isStream_Content `protobuf_oneof:"content"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Stream) Reset()         { *m = Stream{} }
func (m *Stream) String() string { return proto.CompactTextString(m) }
func (*Stream) ProtoMessage()    {}
func (*Stream) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{32}
}

func (m *Stream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stream.Unmarshal(m, b)
}
func (m *Stream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stream.Marshal(b, m, deterministic)
}
func (m *Stream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stream.Merge(m, src)
}
func (m *Stream) XXX_Size() int {
	return xxx_messageInfo_Stream.Size(m)
}
func (m *Stream) XXX_DiscardUnknown() {
	xxx_messageInfo_Stream.DiscardUnknown(m)
}

var xxx_messageInfo_Stream proto.InternalMessageInfo

func (m *Stream) GetStreamInfo() *StreamInfo {
	if m != nil {
		return m.StreamInfo
	}
	return nil
}

type isStream_Content interface {
	isStream_Content()
}

type Stream_DashVideo struct {
	DashVideo *DashVideo `protobuf:"bytes,2,opt,name=dash_video,json=dashVideo,proto3,oneof"`
}

type Stream_SegmentVideo struct {
	SegmentVideo *SegmentVideo `protobuf:"bytes,3,opt,name=segment_video,json=segmentVideo,proto3,oneof"`
}

func (*Stream_DashVideo) isStream_Content() {}

func (*Stream_SegmentVideo) isStream_Content() {}

func (m *Stream) GetContent() isStream_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Stream) GetDashVideo() *DashVideo {
	if x, ok := m.GetContent().(*Stream_DashVideo); ok {
		return x.DashVideo
	}
	return nil
}

func (m *Stream) GetSegmentVideo() *SegmentVideo {
	if x, ok := m.GetContent().(*Stream_SegmentVideo); ok {
		return x.SegmentVideo
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Stream) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Stream_DashVideo)(nil),
		(*Stream_SegmentVideo)(nil),
	}
}

// 流媒体元数据
type StreamInfo struct {
	// 清晰度
	Quality uint32 `protobuf:"varint,1,opt,name=quality,proto3" json:"quality,omitempty"`
	// 格式
	Format string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	// 格式描述
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// 错误码
	ErrCode PlayErr `protobuf:"varint,4,opt,name=err_code,json=errCode,proto3,enum=bilibili.app.playurl.v1.PlayErr" json:"err_code,omitempty"`
	// 不满足条件信息
	Limit *StreamLimit `protobuf:"bytes,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// 是否需要vip
	NeedVip bool `protobuf:"varint,6,opt,name=need_vip,json=needVip,proto3" json:"need_vip,omitempty"`
	// 是否需要登录
	NeedLogin bool `protobuf:"varint,7,opt,name=need_login,json=needLogin,proto3" json:"need_login,omitempty"`
	// 是否完整
	Intact bool `protobuf:"varint,8,opt,name=intact,proto3" json:"intact,omitempty"`
	// 是否非全二压
	NoRexcode bool `protobuf:"varint,9,opt,name=no_rexcode,json=noRexcode,proto3" json:"no_rexcode,omitempty"`
	// 清晰度属性位
	Attribute int64 `protobuf:"varint,10,opt,name=attribute,proto3" json:"attribute,omitempty"`
	// 新版格式描述
	NewDescription string `protobuf:"bytes,11,opt,name=new_description,json=newDescription,proto3" json:"new_description,omitempty"`
	// 格式文字
	DisplayDesc string `protobuf:"bytes,12,opt,name=display_desc,json=displayDesc,proto3" json:"display_desc,omitempty"`
	// 新版格式描述备注
	Superscript          string   `protobuf:"bytes,13,opt,name=superscript,proto3" json:"superscript,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamInfo) Reset()         { *m = StreamInfo{} }
func (m *StreamInfo) String() string { return proto.CompactTextString(m) }
func (*StreamInfo) ProtoMessage()    {}
func (*StreamInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{33}
}

func (m *StreamInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamInfo.Unmarshal(m, b)
}
func (m *StreamInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamInfo.Marshal(b, m, deterministic)
}
func (m *StreamInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamInfo.Merge(m, src)
}
func (m *StreamInfo) XXX_Size() int {
	return xxx_messageInfo_StreamInfo.Size(m)
}
func (m *StreamInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StreamInfo proto.InternalMessageInfo

func (m *StreamInfo) GetQuality() uint32 {
	if m != nil {
		return m.Quality
	}
	return 0
}

func (m *StreamInfo) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *StreamInfo) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *StreamInfo) GetErrCode() PlayErr {
	if m != nil {
		return m.ErrCode
	}
	return PlayErr_NoErr
}

func (m *StreamInfo) GetLimit() *StreamLimit {
	if m != nil {
		return m.Limit
	}
	return nil
}

func (m *StreamInfo) GetNeedVip() bool {
	if m != nil {
		return m.NeedVip
	}
	return false
}

func (m *StreamInfo) GetNeedLogin() bool {
	if m != nil {
		return m.NeedLogin
	}
	return false
}

func (m *StreamInfo) GetIntact() bool {
	if m != nil {
		return m.Intact
	}
	return false
}

func (m *StreamInfo) GetNoRexcode() bool {
	if m != nil {
		return m.NoRexcode
	}
	return false
}

func (m *StreamInfo) GetAttribute() int64 {
	if m != nil {
		return m.Attribute
	}
	return 0
}

func (m *StreamInfo) GetNewDescription() string {
	if m != nil {
		return m.NewDescription
	}
	return ""
}

func (m *StreamInfo) GetDisplayDesc() string {
	if m != nil {
		return m.DisplayDesc
	}
	return ""
}

func (m *StreamInfo) GetSuperscript() string {
	if m != nil {
		return m.Superscript
	}
	return ""
}

// 清晰度不满足条件信息
type StreamLimit struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 跳转地址
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	// 提示信息
	Msg                  string   `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamLimit) Reset()         { *m = StreamLimit{} }
func (m *StreamLimit) String() string { return proto.CompactTextString(m) }
func (*StreamLimit) ProtoMessage()    {}
func (*StreamLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{34}
}

func (m *StreamLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamLimit.Unmarshal(m, b)
}
func (m *StreamLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamLimit.Marshal(b, m, deterministic)
}
func (m *StreamLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamLimit.Merge(m, src)
}
func (m *StreamLimit) XXX_Size() int {
	return xxx_messageInfo_StreamLimit.Size(m)
}
func (m *StreamLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamLimit.DiscardUnknown(m)
}

var xxx_messageInfo_StreamLimit proto.InternalMessageInfo

func (m *StreamLimit) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *StreamLimit) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *StreamLimit) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// 互动视频升级按钮信息
type UpgradeButton struct {
	// 标题
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	// 链接
	Link                 string   `protobuf:"bytes,2,opt,name=link,proto3" json:"link,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpgradeButton) Reset()         { *m = UpgradeButton{} }
func (m *UpgradeButton) String() string { return proto.CompactTextString(m) }
func (*UpgradeButton) ProtoMessage()    {}
func (*UpgradeButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{35}
}

func (m *UpgradeButton) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeButton.Unmarshal(m, b)
}
func (m *UpgradeButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeButton.Marshal(b, m, deterministic)
}
func (m *UpgradeButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeButton.Merge(m, src)
}
func (m *UpgradeButton) XXX_Size() int {
	return xxx_messageInfo_UpgradeButton.Size(m)
}
func (m *UpgradeButton) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeButton.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeButton proto.InternalMessageInfo

func (m *UpgradeButton) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpgradeButton) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

// 互动视频升级提示
type UpgradeLimit struct {
	// 错误码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 错误信息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 图片url
	Image string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	// 按钮信息
	Button               *UpgradeButton `protobuf:"bytes,4,opt,name=button,proto3" json:"button,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpgradeLimit) Reset()         { *m = UpgradeLimit{} }
func (m *UpgradeLimit) String() string { return proto.CompactTextString(m) }
func (*UpgradeLimit) ProtoMessage()    {}
func (*UpgradeLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{36}
}

func (m *UpgradeLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeLimit.Unmarshal(m, b)
}
func (m *UpgradeLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeLimit.Marshal(b, m, deterministic)
}
func (m *UpgradeLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeLimit.Merge(m, src)
}
func (m *UpgradeLimit) XXX_Size() int {
	return xxx_messageInfo_UpgradeLimit.Size(m)
}
func (m *UpgradeLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeLimit.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeLimit proto.InternalMessageInfo

func (m *UpgradeLimit) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UpgradeLimit) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *UpgradeLimit) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *UpgradeLimit) GetButton() *UpgradeButton {
	if m != nil {
		return m.Button
	}
	return nil
}

// 视频url信息
type VideoInfo struct {
	// 视频清晰度
	Quality uint32 `protobuf:"varint,1,opt,name=quality,proto3" json:"quality,omitempty"`
	// 视频格式
	Format string `protobuf:"bytes,2,opt,name=format,proto3" json:"format,omitempty"`
	// 视频时长
	Timelength uint64 `protobuf:"varint,3,opt,name=timelength,proto3" json:"timelength,omitempty"`
	// 视频编码id
	VideoCodecid uint32 `protobuf:"varint,4,opt,name=video_codecid,json=videoCodecid,proto3" json:"video_codecid,omitempty"`
	// 视频流
	StreamList []*Stream `protobuf:"bytes,5,rep,name=stream_list,json=streamList,proto3" json:"stream_list,omitempty"`
	// 伴音流
	DashAudio []*DashItem `protobuf:"bytes,6,rep,name=dash_audio,json=dashAudio,proto3" json:"dash_audio,omitempty"`
	// 杜比伴音流
	Dolby *DolbyItem `protobuf:"bytes,7,opt,name=dolby,proto3" json:"dolby,omitempty"`
	//
	Volume               *VolumeInfo `protobuf:"bytes,8,opt,name=volume,proto3" json:"volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *VideoInfo) Reset()         { *m = VideoInfo{} }
func (m *VideoInfo) String() string { return proto.CompactTextString(m) }
func (*VideoInfo) ProtoMessage()    {}
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{37}
}

func (m *VideoInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoInfo.Unmarshal(m, b)
}
func (m *VideoInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoInfo.Marshal(b, m, deterministic)
}
func (m *VideoInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoInfo.Merge(m, src)
}
func (m *VideoInfo) XXX_Size() int {
	return xxx_messageInfo_VideoInfo.Size(m)
}
func (m *VideoInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VideoInfo proto.InternalMessageInfo

func (m *VideoInfo) GetQuality() uint32 {
	if m != nil {
		return m.Quality
	}
	return 0
}

func (m *VideoInfo) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *VideoInfo) GetTimelength() uint64 {
	if m != nil {
		return m.Timelength
	}
	return 0
}

func (m *VideoInfo) GetVideoCodecid() uint32 {
	if m != nil {
		return m.VideoCodecid
	}
	return 0
}

func (m *VideoInfo) GetStreamList() []*Stream {
	if m != nil {
		return m.StreamList
	}
	return nil
}

func (m *VideoInfo) GetDashAudio() []*DashItem {
	if m != nil {
		return m.DashAudio
	}
	return nil
}

func (m *VideoInfo) GetDolby() *DolbyItem {
	if m != nil {
		return m.Dolby
	}
	return nil
}

func (m *VideoInfo) GetVolume() *VolumeInfo {
	if m != nil {
		return m.Volume
	}
	return nil
}

//
type VolumeInfo struct {
	//
	MeasuredI float64 `protobuf:"fixed64,1,opt,name=measured_i,json=measuredI,proto3" json:"measured_i,omitempty"`
	//
	MeasuredLra float64 `protobuf:"fixed64,2,opt,name=measured_lra,json=measuredLra,proto3" json:"measured_lra,omitempty"`
	//
	MeasuredTp float64 `protobuf:"fixed64,3,opt,name=measured_tp,json=measuredTp,proto3" json:"measured_tp,omitempty"`
	//
	MeasuredThreshold float64 `protobuf:"fixed64,4,opt,name=measured_threshold,json=measuredThreshold,proto3" json:"measured_threshold,omitempty"`
	//
	TargetOffset float64 `protobuf:"fixed64,5,opt,name=target_offset,json=targetOffset,proto3" json:"target_offset,omitempty"`
	//
	TargetI float64 `protobuf:"fixed64,6,opt,name=target_i,json=targetI,proto3" json:"target_i,omitempty"`
	//
	TargetTp             float64  `protobuf:"fixed64,7,opt,name=target_tp,json=targetTp,proto3" json:"target_tp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeInfo) Reset()         { *m = VolumeInfo{} }
func (m *VolumeInfo) String() string { return proto.CompactTextString(m) }
func (*VolumeInfo) ProtoMessage()    {}
func (*VolumeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a9102b621cf3ab, []int{38}
}

func (m *VolumeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeInfo.Unmarshal(m, b)
}
func (m *VolumeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeInfo.Marshal(b, m, deterministic)
}
func (m *VolumeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeInfo.Merge(m, src)
}
func (m *VolumeInfo) XXX_Size() int {
	return xxx_messageInfo_VolumeInfo.Size(m)
}
func (m *VolumeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeInfo proto.InternalMessageInfo

func (m *VolumeInfo) GetMeasuredI() float64 {
	if m != nil {
		return m.MeasuredI
	}
	return 0
}

func (m *VolumeInfo) GetMeasuredLra() float64 {
	if m != nil {
		return m.MeasuredLra
	}
	return 0
}

func (m *VolumeInfo) GetMeasuredTp() float64 {
	if m != nil {
		return m.MeasuredTp
	}
	return 0
}

func (m *VolumeInfo) GetMeasuredThreshold() float64 {
	if m != nil {
		return m.MeasuredThreshold
	}
	return 0
}

func (m *VolumeInfo) GetTargetOffset() float64 {
	if m != nil {
		return m.TargetOffset
	}
	return 0
}

func (m *VolumeInfo) GetTargetI() float64 {
	if m != nil {
		return m.TargetI
	}
	return 0
}

func (m *VolumeInfo) GetTargetTp() float64 {
	if m != nil {
		return m.TargetTp
	}
	return 0
}

func init() {
	proto.RegisterEnum("bilibili.app.playurl.v1.Business", Business_name, Business_value)
	proto.RegisterEnum("bilibili.app.playurl.v1.CodeType", CodeType_name, CodeType_value)
	proto.RegisterEnum("bilibili.app.playurl.v1.ConfType", ConfType_name, ConfType_value)
	proto.RegisterEnum("bilibili.app.playurl.v1.Group", Group_name, Group_value)
	proto.RegisterEnum("bilibili.app.playurl.v1.PlayErr", PlayErr_name, PlayErr_value)
	proto.RegisterEnum("bilibili.app.playurl.v1.PlayLimitCode", PlayLimitCode_name, PlayLimitCode_value)
	proto.RegisterEnum("bilibili.app.playurl.v1.VideoType", VideoType_name, VideoType_value)
	proto.RegisterEnum("bilibili.app.playurl.v1.DolbyItem_Type", DolbyItem_Type_name, DolbyItem_Type_value)
	proto.RegisterType((*AB)(nil), "bilibili.app.playurl.v1.AB")
	proto.RegisterType((*ArcConf)(nil), "bilibili.app.playurl.v1.ArcConf")
	proto.RegisterType((*Chronos)(nil), "bilibili.app.playurl.v1.Chronos")
	proto.RegisterType((*ButtonStyle)(nil), "bilibili.app.playurl.v1.ButtonStyle")
	proto.RegisterType((*CloudConf)(nil), "bilibili.app.playurl.v1.CloudConf")
	proto.RegisterType((*ConfValue)(nil), "bilibili.app.playurl.v1.ConfValue")
	proto.RegisterType((*DashItem)(nil), "bilibili.app.playurl.v1.DashItem")
	proto.RegisterType((*DashVideo)(nil), "bilibili.app.playurl.v1.DashVideo")
	proto.RegisterType((*DolbyItem)(nil), "bilibili.app.playurl.v1.DolbyItem")
	proto.RegisterType((*Event)(nil), "bilibili.app.playurl.v1.Event")
	proto.RegisterType((*ExtraContent)(nil), "bilibili.app.playurl.v1.ExtraContent")
	proto.RegisterType((*FieldValue)(nil), "bilibili.app.playurl.v1.FieldValue")
	proto.RegisterType((*FormatDescription)(nil), "bilibili.app.playurl.v1.FormatDescription")
	proto.RegisterType((*Glance)(nil), "bilibili.app.playurl.v1.Glance")
	proto.RegisterType((*PlayAbilityConf)(nil), "bilibili.app.playurl.v1.PlayAbilityConf")
	proto.RegisterType((*PlayArcConf)(nil), "bilibili.app.playurl.v1.PlayArcConf")
	proto.RegisterType((*PlayConfEditReply)(nil), "bilibili.app.playurl.v1.PlayConfEditReply")
	proto.RegisterType((*PlayConfEditReq)(nil), "bilibili.app.playurl.v1.PlayConfEditReq")
	proto.RegisterType((*PlayConfReply)(nil), "bilibili.app.playurl.v1.PlayConfReply")
	proto.RegisterType((*PlayConfReq)(nil), "bilibili.app.playurl.v1.PlayConfReq")
	proto.RegisterType((*PlayConfState)(nil), "bilibili.app.playurl.v1.PlayConfState")
	proto.RegisterType((*PlayLimit)(nil), "bilibili.app.playurl.v1.PlayLimit")
	proto.RegisterType((*PlayURLReply)(nil), "bilibili.app.playurl.v1.PlayURLReply")
	proto.RegisterType((*PlayURLReq)(nil), "bilibili.app.playurl.v1.PlayURLReq")
	proto.RegisterType((*PlayViewReply)(nil), "bilibili.app.playurl.v1.PlayViewReply")
	proto.RegisterType((*PlayViewReq)(nil), "bilibili.app.playurl.v1.PlayViewReq")
	proto.RegisterType((*ProjectReply)(nil), "bilibili.app.playurl.v1.ProjectReply")
	proto.RegisterType((*ProjectReq)(nil), "bilibili.app.playurl.v1.ProjectReq")
	proto.RegisterType((*ResponseDash)(nil), "bilibili.app.playurl.v1.ResponseDash")
	proto.RegisterType((*ResponseUrl)(nil), "bilibili.app.playurl.v1.ResponseUrl")
	proto.RegisterType((*SegmentVideo)(nil), "bilibili.app.playurl.v1.SegmentVideo")
	proto.RegisterType((*Shake)(nil), "bilibili.app.playurl.v1.Shake")
	proto.RegisterType((*Stream)(nil), "bilibili.app.playurl.v1.Stream")
	proto.RegisterType((*StreamInfo)(nil), "bilibili.app.playurl.v1.StreamInfo")
	proto.RegisterType((*StreamLimit)(nil), "bilibili.app.playurl.v1.StreamLimit")
	proto.RegisterType((*UpgradeButton)(nil), "bilibili.app.playurl.v1.UpgradeButton")
	proto.RegisterType((*UpgradeLimit)(nil), "bilibili.app.playurl.v1.UpgradeLimit")
	proto.RegisterType((*VideoInfo)(nil), "bilibili.app.playurl.v1.VideoInfo")
	proto.RegisterType((*VolumeInfo)(nil), "bilibili.app.playurl.v1.VolumeInfo")
}

func init() {
	proto.RegisterFile("grpc_api/bilibili/app/playurl/v1/playurl.proto", fileDescriptor_24a9102b621cf3ab)
}

var fileDescriptor_24a9102b621cf3ab = []byte{
	// 3715 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x5a, 0xcd, 0x6f, 0xe3, 0x48,
	0x76, 0x37, 0xf5, 0x61, 0x89, 0x4f, 0x92, 0x4d, 0x57, 0xf7, 0xcc, 0x68, 0xba, 0xe7, 0xa3, 0x47,
	0x3d, 0x3b, 0xd3, 0x70, 0x90, 0x6e, 0x4c, 0x67, 0x76, 0x67, 0x77, 0x26, 0x9e, 0x5e, 0x59, 0xa2,
	0xdb, 0xea, 0x96, 0x25, 0xa3, 0x24, 0xbb, 0x77, 0x82, 0x00, 0x04, 0x25, 0x96, 0x2c, 0xae, 0x29,
	0x92, 0x4d, 0x52, 0xf6, 0x38, 0xa7, 0x1c, 0x73, 0x0c, 0xf2, 0x67, 0xe4, 0xb2, 0xff, 0x42, 0x80,
	0x9c, 0x13, 0x20, 0x87, 0xe4, 0x94, 0x3f, 0x20, 0x87, 0xbd, 0x24, 0x40, 0x4e, 0x41, 0x80, 0xa0,
	0x5e, 0x15, 0x29, 0xfa, 0x43, 0x12, 0x7b, 0x2e, 0x59, 0x60, 0x0f, 0x86, 0xeb, 0x3d, 0xd6, 0xfb,
	0xe9, 0x55, 0xd5, 0xab, 0x57, 0xbf, 0xfa, 0x80, 0xa7, 0x67, 0x81, 0x3f, 0x36, 0x4c, 0xdf, 0x7e,
	0x36, 0xb2, 0x1d, 0x9b, 0xff, 0x3d, 0x33, 0x7d, 0xff, 0x99, 0xef, 0x98, 0x57, 0xf3, 0xc0, 0x79,
	0x76, 0xf1, 0x55, 0x5c, 0x7c, 0xea, 0x07, 0x5e, 0xe4, 0x91, 0x0f, 0xe2, 0x6a, 0x4f, 0x4d, 0xdf,
	0x7f, 0x1a, 0x7f, 0xbb, 0xf8, 0xaa, 0x31, 0x80, 0x5c, 0x73, 0x9f, 0x7c, 0x03, 0x9b, 0x67, 0x8e,
	0xe9, 0x8e, 0x59, 0x5d, 0x79, 0xa4, 0x3c, 0xa9, 0x3c, 0xff, 0xf4, 0xe9, 0x92, 0xfa, 0x4f, 0x5f,
	0x62, 0x35, 0x2a, 0xab, 0x93, 0xfb, 0x50, 0x3c, 0x0b, 0xbc, 0xb9, 0x5f, 0xcf, 0x3d, 0x52, 0x9e,
	0x14, 0xa9, 0x10, 0x1a, 0x7f, 0xab, 0x40, 0xa9, 0x19, 0x8c, 0x5b, 0x9e, 0x3b, 0x21, 0x1f, 0x03,
	0xd8, 0xa1, 0x11, 0xce, 0x7d, 0xdf, 0x0b, 0x22, 0x84, 0x2f, 0x53, 0xd5, 0x0e, 0x07, 0x42, 0x41,
	0x1e, 0x40, 0xd9, 0xb2, 0x43, 0x73, 0xe4, 0x30, 0x0b, 0x31, 0xca, 0x34, 0x91, 0xc9, 0x2b, 0xa8,
	0xb1, 0x1f, 0xa3, 0xc0, 0x34, 0xc6, 0x9e, 0x1b, 0x31, 0x37, 0xaa, 0xe7, 0xd1, 0xb9, 0x9f, 0x2d,
	0x75, 0x4e, 0xe7, 0xb5, 0x5b, 0xa2, 0x32, 0xad, 0xb2, 0x94, 0xd4, 0x78, 0x06, 0xa5, 0xd6, 0x34,
	0xf0, 0x5c, 0x2f, 0x24, 0x1a, 0xe4, 0x67, 0xd6, 0xcf, 0xd1, 0x15, 0x95, 0xf2, 0x22, 0x21, 0x50,
	0x98, 0xd8, 0x0e, 0x43, 0x07, 0x54, 0x8a, 0xe5, 0xc6, 0x8f, 0x50, 0xd9, 0x9f, 0x47, 0x91, 0xe7,
	0x0e, 0xa2, 0x2b, 0x87, 0xf1, 0x2a, 0x11, 0xfb, 0x31, 0x92, 0x56, 0x58, 0xe6, 0x4d, 0xe3, 0xff,
	0x8d, 0xb1, 0xe7, 0x78, 0x81, 0x34, 0x56, 0xb9, 0xa6, 0xc5, 0x15, 0xe4, 0x43, 0x28, 0x8f, 0xce,
	0xe4, 0xc7, 0x3c, 0x7e, 0x2c, 0x8d, 0xce, 0xc4, 0xa7, 0x87, 0xa0, 0xfe, 0x76, 0x3e, 0xf3, 0x0d,
	0xc7, 0x76, 0xcf, 0xeb, 0x05, 0xfc, 0x56, 0xe6, 0x8a, 0xae, 0xed, 0x9e, 0x37, 0xfe, 0x43, 0x01,
	0xb5, 0xe5, 0x78, 0x73, 0x0b, 0xfb, 0x8f, 0x40, 0x21, 0x9c, 0x7a, 0x97, 0xb2, 0xe7, 0xb0, 0x4c,
	0xbe, 0x07, 0x75, 0xec, 0xb9, 0x13, 0x23, 0xba, 0xf2, 0x85, 0xd3, 0x5b, 0xcf, 0x3f, 0x5b, 0xda,
	0x29, 0x1c, 0x65, 0x78, 0xe5, 0x33, 0x5a, 0x1e, 0xcb, 0x12, 0x69, 0x43, 0x65, 0x62, 0x33, 0xc7,
	0x32, 0x2e, 0x4c, 0x67, 0xce, 0x64, 0xb7, 0x3e, 0x5e, 0x8a, 0x70, 0xc0, 0xeb, 0x9e, 0xf2, 0xaa,
	0x14, 0x26, 0x49, 0x99, 0x34, 0x01, 0xd0, 0x0b, 0x01, 0x52, 0x40, 0x90, 0xc6, 0x4a, 0x37, 0x04,
	0x06, 0xfa, 0x8e, 0xc5, 0xc6, 0x5f, 0x80, 0x9a, 0xe8, 0xc9, 0xa7, 0x00, 0xe1, 0xa5, 0x1d, 0x8d,
	0xa7, 0x1c, 0x51, 0xb4, 0xf7, 0x70, 0x83, 0xaa, 0x42, 0x77, 0x6a, 0x3a, 0xe4, 0x31, 0x54, 0x43,
	0xe6, 0xb0, 0x71, 0xc4, 0xd0, 0x73, 0x6c, 0x79, 0xfe, 0x70, 0x83, 0x56, 0x62, 0xed, 0xa9, 0xe9,
	0xec, 0x97, 0xa0, 0x88, 0x0e, 0x35, 0xfe, 0x5b, 0x81, 0x72, 0xdb, 0x0c, 0xa7, 0x9d, 0x88, 0xcd,
	0xc8, 0x16, 0xe4, 0x6c, 0x0b, 0x31, 0x6b, 0x34, 0x67, 0x5b, 0xa4, 0x0e, 0xa5, 0x91, 0x19, 0xb2,
	0x93, 0xc0, 0x91, 0xe3, 0x16, 0x8b, 0x7c, 0x50, 0x47, 0xe6, 0xf8, 0x7c, 0xee, 0x1b, 0xf3, 0xc0,
	0xa9, 0xe7, 0x1f, 0xe5, 0xf9, 0xa0, 0x0a, 0x0d, 0xff, 0xfc, 0x11, 0xa8, 0x23, 0xd3, 0xb5, 0x2e,
	0x6d, 0x2b, 0x9a, 0x62, 0x9b, 0x6b, 0x74, 0xa1, 0xe0, 0xb0, 0x63, 0xcf, 0x62, 0x63, 0xdb, 0xaa,
	0x17, 0xf1, 0x5b, 0x2c, 0xc6, 0x41, 0xb7, 0x79, 0x2d, 0xe8, 0x42, 0xfb, 0xaf, 0x58, 0xbd, 0xf4,
	0x48, 0x79, 0x52, 0xa0, 0x58, 0xe6, 0x3f, 0x3e, 0x09, 0xcc, 0x19, 0x33, 0x02, 0x33, 0x62, 0xf5,
	0xb2, 0x88, 0x28, 0xd4, 0x50, 0x33, 0x62, 0xe4, 0x31, 0xd4, 0x2e, 0x6d, 0x8b, 0x5d, 0xd8, 0x2e,
	0x33, 0xfc, 0x30, 0x9c, 0xd6, 0x55, 0xac, 0x51, 0x8d, 0x95, 0xc7, 0x61, 0x38, 0x6d, 0xfc, 0x73,
	0x0e, 0x54, 0xde, 0xee, 0x53, 0xdb, 0x62, 0x1e, 0x06, 0xa1, 0x19, 0x32, 0x6c, 0x8c, 0xb2, 0xaa,
	0xa5, 0xb9, 0x95, 0x2d, 0xcd, 0xaf, 0x68, 0x69, 0xe1, 0xce, 0x96, 0x16, 0x6f, 0xb7, 0x74, 0x33,
	0xd5, 0xd2, 0x3a, 0x94, 0xcc, 0xb9, 0x65, 0x7b, 0x1d, 0x0b, 0x3b, 0xa0, 0x46, 0x63, 0x91, 0xbb,
	0xe5, 0x7a, 0x46, 0xc0, 0x7e, 0xe4, 0x80, 0xd8, 0x07, 0x65, 0xaa, 0xba, 0x1e, 0x15, 0x8a, 0x1b,
	0x5d, 0xa4, 0xde, 0xec, 0xa2, 0xfb, 0x50, 0x14, 0x1e, 0x83, 0x48, 0x48, 0xc2, 0xdb, 0xf7, 0x61,
	0x73, 0xca, 0xec, 0xb3, 0x69, 0x54, 0xaf, 0xa0, 0x5a, 0x4a, 0xb7, 0x3b, 0xb4, 0x7a, 0x47, 0x87,
	0xfe, 0xbd, 0x02, 0x6a, 0xdb, 0x73, 0x46, 0x57, 0x18, 0x49, 0xdf, 0x41, 0x01, 0xa7, 0x9d, 0x82,
	0xd3, 0xee, 0xcb, 0xa5, 0xf1, 0x9e, 0x58, 0x3c, 0xc5, 0xc9, 0x87, 0x46, 0xe4, 0x1b, 0x28, 0x62,
	0x33, 0x31, 0xe8, 0x2a, 0x2b, 0x26, 0x6d, 0x1c, 0xb8, 0x54, 0xd4, 0x6f, 0x7c, 0x09, 0x05, 0x9c,
	0xb9, 0x65, 0x28, 0xf4, 0xfa, 0x3d, 0x5d, 0xdb, 0x20, 0x00, 0x9b, 0xad, 0xfe, 0xd1, 0x51, 0xbf,
	0xa7, 0x29, 0x44, 0x85, 0x62, 0x73, 0x78, 0xd4, 0x1f, 0x68, 0xb9, 0xc6, 0x1e, 0x14, 0xf5, 0x0b,
	0xe6, 0x46, 0xe4, 0x6b, 0x28, 0x86, 0x53, 0xf3, 0x3c, 0xce, 0xe8, 0x9f, 0x2c, 0xfd, 0xa9, 0x01,
	0xaf, 0x45, 0x45, 0xe5, 0xc6, 0x5f, 0x42, 0x35, 0x9d, 0x44, 0xc9, 0x97, 0xb0, 0x1d, 0xa7, 0x63,
	0x23, 0x60, 0x66, 0xe8, 0xb9, 0x32, 0x8a, 0xb6, 0x62, 0x35, 0x45, 0x2d, 0xef, 0xc9, 0xa4, 0x22,
	0x0e, 0x1c, 0x4e, 0x4e, 0x5a, 0x8d, 0x95, 0x2d, 0xcf, 0x62, 0x8d, 0x67, 0x00, 0x8b, 0x5c, 0x42,
	0xea, 0xb0, 0x29, 0xe6, 0x76, 0x32, 0xd7, 0xa5, 0xbc, 0x98, 0xc3, 0xff, 0xaa, 0xc0, 0xce, 0x81,
	0x17, 0xcc, 0xcc, 0xa8, 0xcd, 0xc2, 0x71, 0x60, 0xfb, 0x91, 0xed, 0xb9, 0x3c, 0x76, 0xde, 0xce,
	0x4d, 0xc7, 0x8e, 0xae, 0xd0, 0xb2, 0x48, 0x63, 0x91, 0x8f, 0xf3, 0x04, 0xab, 0xcb, 0x59, 0x2d,
	0x25, 0xf2, 0x08, 0x2a, 0xd6, 0x02, 0x40, 0x66, 0xe3, 0xb4, 0x8a, 0x37, 0xd4, 0x65, 0x97, 0x46,
	0xba, 0x96, 0xc8, 0xcb, 0x5b, 0x2e, 0xbb, 0x4c, 0xff, 0xf8, 0x67, 0xc0, 0xdb, 0xc4, 0xfb, 0x0f,
	0x2b, 0xcb, 0x38, 0xaf, 0x48, 0x1d, 0xaf, 0xc9, 0x7f, 0x2d, 0x9c, 0xfb, 0x2c, 0x10, 0x46, 0x72,
	0xce, 0xa7, 0x55, 0x8d, 0x37, 0xb0, 0x29, 0x16, 0x52, 0xbe, 0x12, 0x8c, 0x4d, 0xd7, 0xb8, 0x34,
	0x93, 0x7e, 0xa0, 0xe5, 0xb1, 0xe9, 0xbe, 0xe1, 0x32, 0x0f, 0xe6, 0xc8, 0x9e, 0xb1, 0x50, 0x76,
	0xa6, 0x10, 0x70, 0xc9, 0x9c, 0x07, 0x66, 0xd2, 0x92, 0x3c, 0x4d, 0xe4, 0xc6, 0xbf, 0x6b, 0xb0,
	0x7d, 0xec, 0x98, 0x57, 0x4d, 0x3e, 0xd2, 0xd1, 0x15, 0xae, 0x20, 0x43, 0xb8, 0xcf, 0x67, 0x35,
	0x5f, 0x9a, 0x5d, 0xcb, 0x40, 0xcf, 0x79, 0x06, 0x96, 0x81, 0xb1, 0x22, 0x63, 0xc7, 0x6b, 0x10,
	0x25, 0x0b, 0x7b, 0x0e, 0x8e, 0xa8, 0x2f, 0x40, 0x9d, 0x38, 0xb6, 0x2f, 0xa0, 0x72, 0x99, 0xa1,
	0xca, 0xdc, 0x28, 0x06, 0x18, 0x9b, 0x61, 0x24, 0x00, 0xf2, 0xd9, 0x01, 0xb8, 0x11, 0x02, 0xbc,
	0x84, 0xda, 0x84, 0x31, 0x8b, 0xfb, 0x26, 0x40, 0x0a, 0x99, 0x41, 0xaa, 0xb1, 0x61, 0x0c, 0x14,
	0xce, 0x47, 0x91, 0x1d, 0x39, 0x4c, 0x00, 0x15, 0xb3, 0x03, 0xc5, 0x86, 0x08, 0x74, 0x0c, 0x84,
	0xd7, 0x42, 0x8f, 0x78, 0x7a, 0x12, 0x68, 0x9b, 0x99, 0xd1, 0xb4, 0xd8, 0x9a, 0xa7, 0x32, 0x44,
	0x6c, 0x43, 0x95, 0x0f, 0xba, 0x31, 0x97, 0x1d, 0x5d, 0xca, 0x8c, 0x05, 0xdc, 0xee, 0xc4, 0xbf,
	0xe5, 0xd7, 0xcc, 0xb3, 0xa4, 0x5f, 0xe5, 0x77, 0xf7, 0xeb, 0xc8, 0xb3, 0x84, 0x5f, 0xaf, 0x60,
	0x3b, 0x1c, 0x9b, 0x0e, 0x4b, 0xc1, 0xa9, 0x99, 0xe1, 0x6a, 0x68, 0x9a, 0x60, 0xbd, 0x00, 0xd5,
	0xb1, 0xcf, 0x25, 0x0a, 0x64, 0x0f, 0x04, 0x6e, 0x84, 0x00, 0x3a, 0x4e, 0xc9, 0x05, 0x46, 0x25,
	0x33, 0x46, 0x45, 0xda, 0x25, 0x01, 0xe9, 0xd9, 0xae, 0xc0, 0xa8, 0xbe, 0x43, 0x40, 0x7a, 0xb6,
	0x1b, 0x03, 0x70, 0x22, 0x22, 0x00, 0x6a, 0xd9, 0x01, 0xb8, 0x11, 0x02, 0x34, 0x01, 0xc2, 0xa9,
	0x19, 0xc8, 0x66, 0x6c, 0x65, 0x46, 0x50, 0xd1, 0x0a, 0x21, 0xba, 0xa0, 0x85, 0xe3, 0x80, 0x31,
	0xd7, 0x08, 0xa7, 0x9e, 0x9c, 0x5c, 0xdb, 0x99, 0x81, 0xb6, 0x84, 0xed, 0x60, 0xea, 0x45, 0x31,
	0x9a, 0xe3, 0x8d, 0xcf, 0x0d, 0x09, 0x89, 0x68, 0x5a, 0x76, 0x34, 0x6e, 0x3b, 0x40, 0x53, 0x44,
	0xeb, 0xc0, 0x56, 0xc0, 0xc6, 0xde, 0x6c, 0xc6, 0x5c, 0x4b, 0x60, 0xed, 0x64, 0x8f, 0x99, 0xc4,
	0x12, 0xa1, 0x28, 0xdc, 0x4b, 0x22, 0x3a, 0xf4, 0x19, 0x93, 0x78, 0x24, 0x33, 0xde, 0x4e, 0x6c,
	0x3e, 0xe0, 0xd6, 0x88, 0xf9, 0x1a, 0xb6, 0x2d, 0x36, 0xb1, 0x5d, 0x9b, 0x67, 0x52, 0x81, 0x77,
	0x2f, 0x7b, 0x5b, 0x17, 0xa6, 0x31, 0x98, 0x60, 0xa5, 0xb6, 0xe7, 0x86, 0x02, 0xec, 0xfe, 0x3b,
	0x0c, 0x43, 0x62, 0x1a, 0x07, 0x96, 0x2b, 0x36, 0x1a, 0xee, 0xa4, 0xfe, 0x5e, 0xf6, 0xc0, 0x72,
	0x71, 0x2f, 0x22, 0xd2, 0x08, 0xb3, 0xec, 0xc8, 0xb0, 0x66, 0x02, 0xe3, 0xfd, 0xec, 0x69, 0x84,
	0xdb, 0xb5, 0x67, 0x88, 0xd2, 0x83, 0x9d, 0x70, 0x66, 0x3a, 0x8e, 0x71, 0x69, 0xbb, 0x96, 0x77,
	0x29, 0xa0, 0x3e, 0xc8, 0x0c, 0xb5, 0x8d, 0xc6, 0x6f, 0xd0, 0x36, 0x15, 0xee, 0xf1, 0xac, 0xad,
	0xbf, 0x53, 0xb8, 0xcb, 0x39, 0x7b, 0x00, 0x35, 0x6f, 0x1e, 0xb1, 0x20, 0x69, 0xd9, 0x87, 0xd9,
	0xe7, 0x3e, 0x1a, 0xca, 0xa6, 0xbd, 0x82, 0x2d, 0xdb, 0x75, 0xb9, 0xd8, 0x16, 0x84, 0xa5, 0xfe,
	0x20, 0xfb, 0x68, 0x5d, 0xb7, 0xe4, 0x3e, 0xa1, 0x26, 0xf1, 0xe9, 0x61, 0x76, 0x9f, 0x24, 0x54,
	0xdc, 0x3d, 0x16, 0x27, 0x91, 0x02, 0xe4, 0xa3, 0xec, 0xdd, 0x83, 0x56, 0xf1, 0x88, 0xe1, 0xfe,
	0xd3, 0x98, 0xd8, 0x0e, 0xef, 0x25, 0x44, 0xfa, 0x38, 0xfb, 0x88, 0xa1, 0xf1, 0x01, 0xda, 0x72,
	0x45, 0xe3, 0x3f, 0x35, 0xa8, 0x20, 0xbd, 0x90, 0x9b, 0x7b, 0xba, 0x92, 0x5a, 0x3c, 0x5a, 0xfa,
	0x13, 0xd2, 0xfe, 0x4e, 0x62, 0xb1, 0x77, 0x9b, 0x58, 0xac, 0x07, 0x5a, 0xd0, 0x8a, 0xbd, 0xdb,
	0xb4, 0x22, 0x83, 0x79, 0x42, 0x2a, 0xf4, 0xbb, 0x49, 0xc5, 0x7a, 0x88, 0xeb, 0x94, 0x42, 0xbf,
	0x9b, 0x52, 0x64, 0x80, 0xb9, 0x46, 0x28, 0x7a, 0x2b, 0x08, 0xc5, 0x7a, 0xac, 0xdb, 0x74, 0x62,
	0xff, 0x4e, 0x3a, 0xb1, 0x1e, 0x29, 0x4d, 0x26, 0x7a, 0x2b, 0xc8, 0xc4, 0x3b, 0xf8, 0x94, 0x2c,
	0xff, 0x87, 0xcb, 0xa8, 0xc4, 0x7a, 0xb0, 0x1b, 0x44, 0x62, 0xef, 0x36, 0x91, 0xc8, 0x30, 0xf4,
	0xc9, 0xfa, 0xdf, 0xba, 0x93, 0x46, 0xac, 0x47, 0xb8, 0x46, 0x22, 0xf6, 0x6e, 0x93, 0x88, 0x2c,
	0xe1, 0x17, 0x53, 0x88, 0xbd, 0xdb, 0x14, 0x22, 0x83, 0x79, 0x42, 0x20, 0x5e, 0xdc, 0x41, 0x20,
	0xd6, 0xdb, 0xa7, 0xe8, 0xc3, 0xab, 0xa5, 0xf4, 0x61, 0x3d, 0xcc, 0x4d, 0xf2, 0xf0, 0x6a, 0x29,
	0x79, 0xc8, 0x80, 0x75, 0x83, 0x3a, 0xbc, 0x5c, 0x42, 0x1d, 0x32, 0xc4, 0xc8, 0x75, 0xe2, 0x70,
	0xbc, 0x8a, 0x38, 0xac, 0x47, 0xbb, 0x83, 0x36, 0x74, 0x96, 0xd1, 0x86, 0x0c, 0xad, 0xbc, 0x41,
	0x1a, 0x3a, 0xcb, 0x48, 0x43, 0x96, 0xce, 0xbf, 0x4e, 0x19, 0xf6, 0x6e, 0x53, 0x86, 0x0c, 0x81,
	0x94, 0x10, 0x86, 0xfd, 0x3b, 0x09, 0x43, 0x86, 0x44, 0x91, 0xa2, 0x0b, 0xdd, 0xe5, 0x74, 0x61,
	0x3d, 0xd0, 0x2d, 0xb2, 0xf0, 0xe2, 0x0e, 0xb2, 0x90, 0x2d, 0xb4, 0xcf, 0xe3, 0xad, 0xd4, 0x9d,
	0x54, 0x21, 0xc3, 0xfc, 0x4e, 0x13, 0x85, 0xf6, 0xcd, 0xc5, 0xfd, 0x41, 0x56, 0x94, 0xf4, 0xd2,
	0xae, 0x43, 0xcd, 0x37, 0x5d, 0x2f, 0x30, 0x67, 0x66, 0x9a, 0x22, 0x64, 0x58, 0x1e, 0x62, 0xb3,
	0xb8, 0x4f, 0x6e, 0x31, 0x84, 0x0c, 0x7d, 0xb2, 0xe0, 0x07, 0x43, 0x78, 0x4f, 0xce, 0x4e, 0x3e,
	0x4b, 0x02, 0xcb, 0x76, 0xcf, 0xd2, 0x1c, 0x61, 0x3d, 0xd6, 0x3d, 0x61, 0x4e, 0x63, 0xeb, 0x78,
	0xe0, 0x6f, 0xb3, 0x8e, 0x4f, 0xb2, 0x0e, 0xfc, 0x4d, 0xce, 0x71, 0x0f, 0x76, 0x62, 0x6e, 0xa0,
	0x5b, 0x76, 0x44, 0x99, 0xef, 0x5c, 0x35, 0x4e, 0xc5, 0x31, 0xc7, 0x42, 0xf9, 0x96, 0xb4, 0x40,
	0x4d, 0x13, 0x90, 0xfc, 0x93, 0xca, 0xf3, 0x2f, 0x96, 0xfe, 0x5a, 0x6c, 0x3c, 0x88, 0xcc, 0x88,
	0xd1, 0xb2, 0x2f, 0xc5, 0xc6, 0x29, 0xd4, 0xe2, 0x4f, 0xf8, 0x43, 0x44, 0xbf, 0x8e, 0xca, 0xdb,
	0xf0, 0x64, 0x25, 0x6a, 0xea, 0xe4, 0x25, 0x85, 0x5b, 0x13, 0xbc, 0x49, 0xe0, 0xbe, 0x6d, 0xfc,
	0x5e, 0x59, 0xfc, 0x0e, 0xba, 0x70, 0xfd, 0x48, 0x5f, 0x79, 0xf7, 0x23, 0xfd, 0xf8, 0x9a, 0x20,
	0x97, 0xba, 0x26, 0xf8, 0x83, 0x39, 0xe6, 0xff, 0x07, 0x05, 0x54, 0xde, 0xdc, 0xae, 0x3d, 0xb3,
	0x23, 0xf2, 0x2d, 0x14, 0xf0, 0x84, 0x50, 0xb4, 0x72, 0xf5, 0x18, 0xa1, 0x45, 0xcb, 0xb3, 0x18,
	0x45, 0x1b, 0x52, 0x87, 0xd2, 0x8c, 0x85, 0xa1, 0x79, 0x16, 0x5f, 0xd6, 0xc4, 0x22, 0xf9, 0x14,
	0x2a, 0xe1, 0x7c, 0x64, 0xc4, 0x5f, 0xc5, 0x11, 0x1f, 0x84, 0xf3, 0xd1, 0x91, 0xac, 0xf0, 0xe7,
	0xb0, 0x39, 0xc2, 0x0b, 0x1d, 0xd9, 0x86, 0xcf, 0x97, 0xfe, 0x70, 0xea, 0xde, 0x87, 0x4a, 0x9b,
	0xc6, 0x3f, 0x16, 0xa0, 0xca, 0x1d, 0x3a, 0xa1, 0x5d, 0x11, 0x18, 0x37, 0x0e, 0x21, 0x6b, 0xeb,
	0x0f, 0x21, 0x3f, 0x01, 0xa4, 0x51, 0x0e, 0x73, 0xcf, 0xe4, 0x89, 0x7a, 0x81, 0xa6, 0x34, 0xe4,
	0x31, 0xd4, 0x2e, 0x6c, 0x8b, 0x79, 0xc6, 0xf5, 0x83, 0xf5, 0x2a, 0x2a, 0x5b, 0xf2, 0x74, 0xfd,
	0x3e, 0x14, 0x27, 0xee, 0x05, 0x0b, 0xe4, 0xfd, 0x82, 0x10, 0xa4, 0xd6, 0x74, 0x90, 0x1a, 0x0a,
	0x2d, 0xde, 0x97, 0x48, 0x40, 0x3f, 0xf0, 0x7e, 0xcb, 0xc6, 0x11, 0xd2, 0xbd, 0xb2, 0x04, 0x3c,
	0x16, 0x3a, 0xf2, 0x4b, 0x28, 0x58, 0xf3, 0xc0, 0xa9, 0x97, 0x71, 0xc6, 0x2c, 0xef, 0x14, 0xca,
	0x42, 0xdf, 0x73, 0xf1, 0xe6, 0x80, 0xa2, 0x05, 0xf9, 0x15, 0x14, 0x2c, 0x53, 0x5e, 0x42, 0xac,
	0xba, 0x95, 0x8b, 0x2d, 0xdb, 0x66, 0x38, 0xa5, 0x68, 0x72, 0xe3, 0x8c, 0x5f, 0x1c, 0xd5, 0xa7,
	0xce, 0xf8, 0x5f, 0x41, 0x6d, 0xee, 0x9f, 0x05, 0xa6, 0xc5, 0x0c, 0x87, 0x07, 0x80, 0xa4, 0x62,
	0xcb, 0x7f, 0xe2, 0x44, 0xd4, 0xc6, 0x68, 0xa1, 0xd5, 0x79, 0x4a, 0x22, 0x03, 0xd8, 0x96, 0x97,
	0x8f, 0x86, 0x18, 0x87, 0xb0, 0x5e, 0xc5, 0xa6, 0xee, 0x2e, 0x9f, 0x08, 0x37, 0x4f, 0x9c, 0xe9,
	0x96, 0x84, 0x10, 0x5f, 0x42, 0xf2, 0x0b, 0x79, 0x09, 0x50, 0xc3, 0x10, 0x5e, 0x3e, 0x1b, 0xf0,
	0x0e, 0x66, 0x71, 0xfe, 0xdf, 0xf8, 0x2f, 0x05, 0x20, 0x89, 0xa2, 0xb7, 0x44, 0x83, 0xbc, 0x29,
	0xaf, 0xa5, 0xf2, 0x94, 0x17, 0xb9, 0x86, 0x8f, 0xbc, 0x38, 0xef, 0xe5, 0x45, 0xb2, 0x05, 0xb9,
	0xb7, 0xf1, 0x39, 0x6f, 0xee, 0xad, 0xbb, 0x08, 0x80, 0x82, 0xb8, 0xe0, 0xb8, 0x11, 0x00, 0xc5,
	0x44, 0x6b, 0x3a, 0x78, 0x52, 0xec, 0x5d, 0xba, 0x8e, 0x67, 0x5a, 0x32, 0x32, 0x12, 0x19, 0xef,
	0x51, 0xbc, 0x60, 0xcc, 0x8c, 0xa9, 0x17, 0x8a, 0xc8, 0x28, 0x52, 0x15, 0x35, 0x87, 0x5e, 0x18,
	0x21, 0xa0, 0x37, 0x0f, 0xce, 0xe5, 0x05, 0x8c, 0x10, 0xb8, 0x36, 0xf4, 0x67, 0xb6, 0x25, 0xef,
	0x5d, 0x84, 0x20, 0xae, 0x64, 0xbc, 0x99, 0x21, 0x3e, 0x41, 0x7c, 0x25, 0xe3, 0xcd, 0x06, 0x5c,
	0xd1, 0xf8, 0x9b, 0x82, 0x48, 0x76, 0xa7, 0x36, 0xbb, 0x14, 0x73, 0xa7, 0x09, 0x20, 0x02, 0xd3,
	0x76, 0x27, 0xde, 0xda, 0x73, 0x68, 0xec, 0xc4, 0x8e, 0x3b, 0xf1, 0xa8, 0x7a, 0x11, 0x17, 0xaf,
	0xe7, 0xe5, 0xdc, 0x4f, 0xcd, 0xcb, 0xb7, 0x23, 0x2d, 0xff, 0xd3, 0x23, 0xed, 0x5b, 0x28, 0x8d,
	0xc5, 0x15, 0xf3, 0xda, 0x4d, 0xa3, 0xbc, 0x8a, 0xa6, 0xb1, 0x01, 0x79, 0x01, 0xe8, 0x93, 0x61,
	0x06, 0x63, 0xb9, 0x55, 0xfc, 0x7c, 0x75, 0x6b, 0xe4, 0x6a, 0x59, 0xf2, 0x85, 0x40, 0xbe, 0x86,
	0x22, 0xbb, 0x60, 0x6e, 0x24, 0x37, 0x87, 0xcb, 0xaf, 0x7b, 0xf0, 0x76, 0x88, 0x8a, 0xca, 0xe4,
	0x4f, 0x20, 0x67, 0x8e, 0xe4, 0x2e, 0xf0, 0xe1, 0xf2, 0xa5, 0x79, 0x9f, 0xe6, 0xcc, 0x11, 0x1f,
	0x35, 0xf4, 0x51, 0x74, 0xd4, 0xba, 0xd3, 0xe3, 0x24, 0x7b, 0x53, 0x1c, 0x28, 0x2c, 0x36, 0xfe,
	0x29, 0x2f, 0xd6, 0x41, 0x11, 0x0a, 0x7f, 0x24, 0x13, 0x80, 0xfc, 0x0c, 0xb6, 0x22, 0xc6, 0x5c,
	0xf3, 0x8c, 0x05, 0x21, 0xee, 0x72, 0xe5, 0x2d, 0x64, 0x2d, 0xd1, 0xf2, 0x2d, 0x2c, 0x39, 0x82,
	0x1d, 0x3f, 0x60, 0x13, 0x24, 0x4c, 0x16, 0x1b, 0x0b, 0x2a, 0x50, 0x5d, 0x4b, 0x05, 0x2c, 0x86,
	0x09, 0x66, 0x5b, 0xd8, 0xe2, 0x3a, 0x81, 0x8c, 0x60, 0x0f, 0xca, 0xa3, 0x79, 0x68, 0xbb, 0x2c,
	0x0c, 0x65, 0x9e, 0xfa, 0x6c, 0xc5, 0x8a, 0x27, 0x2a, 0xd2, 0xc4, 0x04, 0x17, 0x0f, 0xcf, 0x1e,
	0x33, 0x63, 0x64, 0x8a, 0x97, 0x21, 0x5b, 0xe2, 0x42, 0x0f, 0x95, 0xfb, 0x42, 0xd7, 0xe8, 0x43,
	0x55, 0xae, 0x23, 0x62, 0x62, 0xbf, 0x80, 0x52, 0xbc, 0xd6, 0x28, 0x6b, 0x26, 0x52, 0x7a, 0x31,
	0xa5, 0xb1, 0x55, 0xe3, 0x77, 0x39, 0x80, 0x04, 0xf1, 0x8f, 0x25, 0x3e, 0x1e, 0x40, 0x19, 0x5f,
	0xe9, 0x8c, 0x3d, 0x47, 0x46, 0x46, 0x22, 0x73, 0x5a, 0x63, 0xb1, 0x0b, 0x3e, 0x0e, 0x49, 0x38,
	0x14, 0x29, 0x08, 0x15, 0x1f, 0xe6, 0xc6, 0x5f, 0x2b, 0x50, 0x4d, 0xaf, 0xb0, 0xe4, 0x1b, 0x28,
	0x62, 0x9a, 0x94, 0x1c, 0x38, 0xcb, 0x1d, 0x33, 0xd6, 0x4f, 0x5f, 0x4e, 0xe7, 0xdf, 0xe9, 0x72,
	0xfa, 0xef, 0x14, 0xa8, 0xa4, 0xe8, 0x01, 0xef, 0x04, 0x2f, 0xb0, 0x58, 0x20, 0x89, 0x91, 0x10,
	0x38, 0x2d, 0x92, 0xd4, 0x27, 0x87, 0xd4, 0x47, 0x4a, 0xc9, 0xeb, 0x80, 0x7c, 0xea, 0x75, 0x80,
	0x06, 0x79, 0xce, 0x49, 0xc4, 0x0d, 0x2c, 0x2f, 0xde, 0x78, 0xac, 0x50, 0xbc, 0xf9, 0x58, 0xe1,
	0xd6, 0xf3, 0x8a, 0x46, 0x0f, 0xaa, 0x03, 0x76, 0x36, 0x63, 0x6e, 0x24, 0x1e, 0x42, 0x7c, 0x0f,
	0xa5, 0x50, 0xc8, 0xb2, 0x63, 0xb2, 0x51, 0x9d, 0xd8, 0xa8, 0xf1, 0x10, 0x8a, 0x78, 0x53, 0x9e,
	0x3c, 0x16, 0x52, 0x52, 0x8f, 0x85, 0x7e, 0xaf, 0xc0, 0xe6, 0x20, 0x0a, 0x98, 0x39, 0xe3, 0xa4,
	0x3b, 0xc4, 0x52, 0x7a, 0x71, 0x5b, 0x4e, 0xba, 0x85, 0x15, 0xae, 0x6e, 0x10, 0x26, 0x65, 0xd2,
	0x02, 0xe0, 0x44, 0xc9, 0x10, 0x23, 0xb9, 0xee, 0x7a, 0x35, 0x79, 0xee, 0x71, 0xb8, 0x41, 0x55,
	0x2b, 0x79, 0xfb, 0xd1, 0x85, 0x9a, 0xf4, 0x5e, 0xe2, 0xac, 0x5b, 0xdc, 0xd2, 0x1d, 0x76, 0xb8,
	0x41, 0xab, 0x61, 0x4a, 0xde, 0x57, 0xa1, 0x24, 0xdf, 0x61, 0x35, 0xfe, 0x2d, 0x0f, 0xb0, 0x70,
	0xfc, 0x27, 0x50, 0xe1, 0xf5, 0xf7, 0xf1, 0xdf, 0x41, 0x99, 0x05, 0x22, 0x13, 0x62, 0x18, 0x6c,
	0xad, 0x58, 0x4d, 0x79, 0x2a, 0xd1, 0x83, 0x80, 0x96, 0x58, 0x80, 0xf9, 0x8f, 0x7c, 0x0b, 0x45,
	0xb1, 0x48, 0xad, 0x5b, 0x4a, 0x45, 0x23, 0xc4, 0x32, 0x25, 0x4c, 0xc8, 0x87, 0x50, 0x76, 0x19,
	0xb3, 0x8c, 0x0b, 0xdb, 0xc7, 0x70, 0x2a, 0xd3, 0x12, 0x97, 0x4f, 0x6d, 0x1f, 0x59, 0x2b, 0xff,
	0xe4, 0x78, 0x67, 0xb6, 0x2b, 0xc9, 0xb4, 0xca, 0x35, 0x5d, 0xae, 0xe0, 0x8d, 0xb5, 0xdd, 0xc8,
	0x1c, 0x47, 0x32, 0x25, 0x48, 0xe9, 0x06, 0xd9, 0x55, 0x6f, 0x3e, 0x68, 0xf9, 0x08, 0x54, 0x33,
	0x8a, 0x02, 0x7b, 0x34, 0x8f, 0x04, 0x15, 0xce, 0xd3, 0x85, 0xe2, 0xae, 0x77, 0x09, 0x95, 0x4c,
	0xef, 0x12, 0xaa, 0x6b, 0xdf, 0x25, 0xd4, 0x6e, 0xbf, 0x4b, 0x78, 0x09, 0x95, 0x54, 0x97, 0x88,
	0xf7, 0x07, 0x51, 0x12, 0xeb, 0x42, 0x10, 0x93, 0xd3, 0x96, 0x23, 0xca, 0x8b, 0x38, 0xfb, 0xc2,
	0x33, 0x39, 0x8c, 0xbc, 0xd8, 0xf8, 0x15, 0xd4, 0x24, 0x53, 0x12, 0x9b, 0xa9, 0x25, 0x50, 0x04,
	0x0a, 0xf8, 0x04, 0x4e, 0x3e, 0xbc, 0xe3, 0x65, 0x9e, 0x4d, 0xaa, 0x69, 0x96, 0xc5, 0x2b, 0x25,
	0xfb, 0xc5, 0xe2, 0xda, 0x7d, 0xe0, 0x7d, 0x28, 0xda, 0xb3, 0xc5, 0x0e, 0x50, 0x08, 0xe4, 0xfb,
	0x1b, 0x9b, 0xbf, 0x2f, 0xd6, 0x11, 0x3c, 0xe1, 0x76, 0xb2, 0xfd, 0xfb, 0xdf, 0x1c, 0xa8, 0x09,
	0x0f, 0xfd, 0xff, 0xda, 0xfb, 0xfd, 0x3a, 0x49, 0x2d, 0x8e, 0x1d, 0x46, 0x98, 0x04, 0x57, 0x3d,
	0xd5, 0x14, 0x23, 0x19, 0xa7, 0x95, 0xae, 0x1d, 0x46, 0xe4, 0xd7, 0x32, 0xad, 0x88, 0x3c, 0xbf,
	0x99, 0x35, 0xcf, 0x63, 0x4e, 0x69, 0x72, 0x1b, 0xf2, 0x4b, 0x28, 0xe2, 0xf1, 0xd1, 0xda, 0x97,
	0x08, 0xc9, 0xfb, 0x27, 0x2a, 0x0c, 0xc8, 0x77, 0xb0, 0x79, 0xe1, 0x39, 0xf3, 0x19, 0x93, 0xd4,
	0x71, 0x79, 0x4e, 0x3c, 0xc5, 0x6a, 0x98, 0x13, 0xa5, 0x49, 0xe3, 0x7f, 0x14, 0x80, 0x85, 0x9a,
	0x4f, 0xa9, 0x19, 0x33, 0xc3, 0x79, 0xc0, 0x2c, 0xc3, 0xc6, 0x31, 0x50, 0xa8, 0x1a, 0x6b, 0x3a,
	0x7c, 0x2e, 0x24, 0x9f, 0x9d, 0xc0, 0xc4, 0xb1, 0x50, 0x68, 0x25, 0xd6, 0x75, 0x03, 0x93, 0xaf,
	0xab, 0x49, 0x95, 0xc8, 0xc7, 0x11, 0x51, 0x68, 0x02, 0x3a, 0xf4, 0xc9, 0x9f, 0x02, 0x59, 0x54,
	0x98, 0x06, 0x2c, 0x9c, 0x7a, 0x8e, 0x18, 0x16, 0x85, 0xee, 0x24, 0xf5, 0xe2, 0x0f, 0x7c, 0x00,
	0x23, 0x33, 0x38, 0x63, 0x91, 0xe1, 0x4d, 0x26, 0x21, 0x13, 0xa9, 0x47, 0xa1, 0x55, 0xa1, 0xec,
	0xa3, 0x8e, 0xe7, 0x16, 0x59, 0xc9, 0xc6, 0xdc, 0xa2, 0xd0, 0x92, 0x90, 0x3b, 0xe4, 0x21, 0xa8,
	0xf2, 0x53, 0xe4, 0x63, 0xdf, 0x2a, 0x54, 0xd6, 0x1d, 0xfa, 0xbb, 0x0d, 0x28, 0xc7, 0x0c, 0x8d,
	0x54, 0xa0, 0x74, 0xd2, 0x7b, 0xdd, 0xeb, 0xbf, 0xe9, 0x69, 0x1b, 0x44, 0x85, 0xe2, 0x60, 0xd8,
	0xa7, 0x3f, 0x68, 0xca, 0xee, 0x1e, 0x94, 0x63, 0x2e, 0x48, 0x00, 0x36, 0x7b, 0xfd, 0x56, 0xbf,
	0xad, 0x6b, 0x1b, 0xbc, 0x3e, 0x2f, 0x3d, 0xff, 0xc5, 0xd7, 0x9a, 0xb2, 0x10, 0x7e, 0xae, 0xe5,
	0x62, 0xa1, 0x79, 0xfa, 0x95, 0x96, 0xdf, 0xfd, 0x5d, 0x9e, 0xdb, 0xcb, 0xc3, 0x24, 0x6e, 0x8f,
	0xdb, 0x56, 0x6d, 0x83, 0x54, 0xa1, 0x7c, 0xd0, 0xed, 0x1c, 0xb7, 0xfa, 0xbd, 0x03, 0x4d, 0xe1,
	0x52, 0xab, 0x39, 0x18, 0xa2, 0x94, 0xc3, 0x6f, 0xba, 0xde, 0xde, 0x6f, 0xb6, 0x5e, 0x6b, 0x79,
	0x2e, 0x0d, 0x4e, 0xf6, 0x87, 0x9d, 0x61, 0x57, 0xd7, 0x0a, 0x44, 0x83, 0xea, 0x71, 0xb7, 0xf9,
	0x03, 0xff, 0x46, 0x9b, 0x43, 0x5d, 0x2b, 0x72, 0xd4, 0x61, 0xe7, 0x48, 0x3f, 0x39, 0xd6, 0x36,
	0xd3, 0x5f, 0x8f, 0xb8, 0x9f, 0x25, 0x52, 0x03, 0x75, 0xd0, 0x6a, 0x76, 0x75, 0x14, 0xcb, 0x84,
	0xc0, 0x16, 0xff, 0xf8, 0x92, 0xf6, 0x4f, 0x7a, 0x6d, 0x5e, 0x55, 0x53, 0x49, 0x19, 0x0a, 0xdd,
	0xce, 0x6b, 0x5d, 0x03, 0xee, 0x7a, 0xbb, 0x33, 0x40, 0xa1, 0xc2, 0xd5, 0xad, 0x7e, 0xa7, 0xa7,
	0x55, 0x79, 0x49, 0xef, 0xea, 0x2d, 0xad, 0x86, 0x1d, 0x73, 0xd8, 0xa4, 0xba, 0xb6, 0x45, 0xb6,
	0x00, 0x06, 0x2d, 0xaa, 0xeb, 0xbd, 0xc1, 0x61, 0x7f, 0xa8, 0x6d, 0x73, 0xb9, 0xdb, 0x6f, 0xbd,
	0x16, 0x3a, 0x4d, 0xe3, 0x3f, 0x4c, 0xf5, 0x56, 0xff, 0xe8, 0x48, 0xef, 0xb5, 0xb5, 0x1d, 0xb2,
	0x03, 0xb5, 0xd8, 0xb3, 0xc1, 0xb1, 0xae, 0xb7, 0x35, 0xc2, 0x2d, 0xda, 0xfa, 0x41, 0xa7, 0xd7,
	0x19, 0x76, 0xfa, 0x3d, 0xed, 0x1e, 0x22, 0xf2, 0xdf, 0xe1, 0xe2, 0x40, 0xbb, 0x8f, 0x8f, 0xf2,
	0xf4, 0xdf, 0x0c, 0xb5, 0xf7, 0x78, 0x13, 0xf5, 0x76, 0x67, 0xd8, 0x3e, 0xd2, 0xde, 0x27, 0xdb,
	0x50, 0x19, 0x1c, 0x35, 0xbb, 0xdd, 0x37, 0x9d, 0x5e, 0xbb, 0xff, 0x46, 0xfb, 0x40, 0xfa, 0xf4,
	0x5a, 0xd7, 0xea, 0xdc, 0xff, 0xfe, 0xc9, 0x50, 0xa7, 0xed, 0x23, 0xed, 0x43, 0x2e, 0x74, 0x7a,
	0x3d, 0x14, 0x1e, 0xf0, 0x4e, 0x3c, 0x6e, 0xf6, 0xfa, 0xb4, 0x79, 0xd4, 0xd4, 0x1e, 0x72, 0x93,
	0x76, 0xbf, 0xbb, 0xff, 0x83, 0xf6, 0x11, 0x87, 0x6b, 0xf5, 0xbb, 0x7d, 0x7a, 0xd0, 0xe9, 0x0e,
	0x75, 0xaa, 0x7d, 0xbc, 0xfb, 0x14, 0x8a, 0x2f, 0x03, 0x6f, 0xee, 0xf3, 0xbe, 0x3c, 0x71, 0xcf,
	0x5d, 0xef, 0xd2, 0x45, 0x59, 0xdb, 0x20, 0x45, 0x50, 0x9a, 0x9a, 0xc2, 0xff, 0xed, 0x6b, 0x39,
	0xfe, 0xaf, 0xa5, 0xe5, 0x77, 0xbf, 0x82, 0x92, 0x5c, 0x28, 0x39, 0x6c, 0xcf, 0xd3, 0x83, 0x40,
	0xdb, 0x20, 0x0f, 0xe1, 0x83, 0x37, 0x76, 0x34, 0x3d, 0x9a, 0x3b, 0x91, 0xdd, 0x46, 0x56, 0x89,
	0x8b, 0x19, 0xff, 0xa8, 0xec, 0x3e, 0x17, 0x1b, 0xf7, 0xe4, 0x10, 0x8e, 0xf7, 0xd5, 0x71, 0xb7,
	0x75, 0xe2, 0x9e, 0x7b, 0x97, 0xae, 0xb6, 0xc1, 0x07, 0x89, 0x8b, 0x67, 0xe3, 0x9e, 0x17, 0x1d,
	0x9b, 0x57, 0xcc, 0xd2, 0x94, 0xdd, 0xae, 0x4c, 0x94, 0x18, 0x48, 0x3b, 0x50, 0x93, 0xae, 0x19,
	0xa7, 0xcd, 0xee, 0x09, 0x8f, 0xc7, 0x1a, 0xa8, 0x07, 0xdd, 0x53, 0x29, 0x2a, 0xd8, 0xb7, 0xcd,
	0xc1, 0xa1, 0x94, 0x73, 0xfc, 0xf3, 0xd1, 0xf1, 0xd7, 0x52, 0xcc, 0x3f, 0xff, 0x97, 0xbc, 0xf0,
	0xfa, 0x84, 0x76, 0xc9, 0xc9, 0xa2, 0xf8, 0x78, 0xfd, 0xb6, 0xe2, 0xed, 0x83, 0x6c, 0x7b, 0x0f,
	0x84, 0x95, 0x67, 0x61, 0x2b, 0x60, 0x93, 0x3d, 0xc9, 0x2a, 0xd8, 0xf4, 0x56, 0xe8, 0x37, 0x50,
	0x8e, 0x77, 0xba, 0x64, 0xf5, 0x5e, 0x5e, 0x6e, 0x86, 0x1f, 0x7c, 0x91, 0xa1, 0x16, 0x47, 0xb6,
	0xc4, 0x49, 0x64, 0x7c, 0xf6, 0x4d, 0x9e, 0xac, 0x3d, 0xe5, 0x96, 0x47, 0xe4, 0x0f, 0x76, 0x33,
	0xd6, 0x4c, 0xf9, 0x8f, 0xa7, 0x24, 0x9f, 0xaf, 0xb5, 0x5b, 0xef, 0x7f, 0x72, 0xa4, 0x3e, 0xda,
	0xc4, 0xcd, 0xcd, 0x9f, 0xfd, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x7f, 0x64, 0x91, 0xc4,
	0x30, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PlayURLClient is the client API for PlayURL service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlayURLClient interface {
	// 视频地址
	PlayURL(ctx context.Context, in *PlayURLReq, opts ...grpc.CallOption) (*PlayURLReply, error)
	// 投屏地址
	Project(ctx context.Context, in *ProjectReq, opts ...grpc.CallOption) (*ProjectReply, error)
	// 播放页信息
	PlayView(ctx context.Context, in *PlayViewReq, opts ...grpc.CallOption) (*PlayViewReply, error)
	// 编辑播放界面配置
	PlayConfEdit(ctx context.Context, in *PlayConfEditReq, opts ...grpc.CallOption) (*PlayConfEditReply, error)
	// 获取播放界面配置
	PlayConf(ctx context.Context, in *PlayConfReq, opts ...grpc.CallOption) (*PlayConfReply, error)
}

type playURLClient struct {
	cc *grpc.ClientConn
}

func NewPlayURLClient(cc *grpc.ClientConn) PlayURLClient {
	return &playURLClient{cc}
}

func (c *playURLClient) PlayURL(ctx context.Context, in *PlayURLReq, opts ...grpc.CallOption) (*PlayURLReply, error) {
	out := new(PlayURLReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.playurl.v1.PlayURL/PlayURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playURLClient) Project(ctx context.Context, in *ProjectReq, opts ...grpc.CallOption) (*ProjectReply, error) {
	out := new(ProjectReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.playurl.v1.PlayURL/Project", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playURLClient) PlayView(ctx context.Context, in *PlayViewReq, opts ...grpc.CallOption) (*PlayViewReply, error) {
	out := new(PlayViewReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.playurl.v1.PlayURL/PlayView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playURLClient) PlayConfEdit(ctx context.Context, in *PlayConfEditReq, opts ...grpc.CallOption) (*PlayConfEditReply, error) {
	out := new(PlayConfEditReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.playurl.v1.PlayURL/PlayConfEdit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playURLClient) PlayConf(ctx context.Context, in *PlayConfReq, opts ...grpc.CallOption) (*PlayConfReply, error) {
	out := new(PlayConfReply)
	err := c.cc.Invoke(ctx, "/bilibili.app.playurl.v1.PlayURL/PlayConf", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlayURLServer is the server API for PlayURL service.
type PlayURLServer interface {
	// 视频地址
	PlayURL(context.Context, *PlayURLReq) (*PlayURLReply, error)
	// 投屏地址
	Project(context.Context, *ProjectReq) (*ProjectReply, error)
	// 播放页信息
	PlayView(context.Context, *PlayViewReq) (*PlayViewReply, error)
	// 编辑播放界面配置
	PlayConfEdit(context.Context, *PlayConfEditReq) (*PlayConfEditReply, error)
	// 获取播放界面配置
	PlayConf(context.Context, *PlayConfReq) (*PlayConfReply, error)
}

// UnimplementedPlayURLServer can be embedded to have forward compatible implementations.
type UnimplementedPlayURLServer struct {
}

func (*UnimplementedPlayURLServer) PlayURL(ctx context.Context, req *PlayURLReq) (*PlayURLReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayURL not implemented")
}
func (*UnimplementedPlayURLServer) Project(ctx context.Context, req *ProjectReq) (*ProjectReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Project not implemented")
}
func (*UnimplementedPlayURLServer) PlayView(ctx context.Context, req *PlayViewReq) (*PlayViewReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayView not implemented")
}
func (*UnimplementedPlayURLServer) PlayConfEdit(ctx context.Context, req *PlayConfEditReq) (*PlayConfEditReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayConfEdit not implemented")
}
func (*UnimplementedPlayURLServer) PlayConf(ctx context.Context, req *PlayConfReq) (*PlayConfReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PlayConf not implemented")
}

func RegisterPlayURLServer(s *grpc.Server, srv PlayURLServer) {
	s.RegisterService(&_PlayURL_serviceDesc, srv)
}

func _PlayURL_PlayURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayURLReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayURLServer).PlayURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.playurl.v1.PlayURL/PlayURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayURLServer).PlayURL(ctx, req.(*PlayURLReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayURL_Project_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProjectReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayURLServer).Project(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.playurl.v1.PlayURL/Project",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayURLServer).Project(ctx, req.(*ProjectReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayURL_PlayView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayURLServer).PlayView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.playurl.v1.PlayURL/PlayView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayURLServer).PlayView(ctx, req.(*PlayViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayURL_PlayConfEdit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayConfEditReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayURLServer).PlayConfEdit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.playurl.v1.PlayURL/PlayConfEdit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayURLServer).PlayConfEdit(ctx, req.(*PlayConfEditReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _PlayURL_PlayConf_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayConfReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayURLServer).PlayConf(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.app.playurl.v1.PlayURL/PlayConf",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayURLServer).PlayConf(ctx, req.(*PlayConfReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlayURL_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bilibili.app.playurl.v1.PlayURL",
	HandlerType: (*PlayURLServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PlayURL",
			Handler:    _PlayURL_PlayURL_Handler,
		},
		{
			MethodName: "Project",
			Handler:    _PlayURL_Project_Handler,
		},
		{
			MethodName: "PlayView",
			Handler:    _PlayURL_PlayView_Handler,
		},
		{
			MethodName: "PlayConfEdit",
			Handler:    _PlayURL_PlayConfEdit_Handler,
		},
		{
			MethodName: "PlayConf",
			Handler:    _PlayURL_PlayConf_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc_api/bilibili/app/playurl/v1/playurl.proto",
}
