// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc_api/bilibili/community/service/dm/v1/dm.proto

package bilibili_community_service_dm_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//
type AvatarType int32

const (
	AvatarType_AvatarTypeNone AvatarType = 0
	AvatarType_AvatarTypeNFT  AvatarType = 1
)

var AvatarType_name = map[int32]string{
	0: "AvatarTypeNone",
	1: "AvatarTypeNFT",
}

var AvatarType_value = map[string]int32{
	"AvatarTypeNone": 0,
	"AvatarTypeNFT":  1,
}

func (x AvatarType) String() string {
	return proto.EnumName(AvatarType_name, int32(x))
}

func (AvatarType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{0}
}

//
type CheckboxType int32

const (
	CheckboxType_CheckboxTypeNone      CheckboxType = 0
	CheckboxType_CheckboxTypeEncourage CheckboxType = 1
	CheckboxType_CheckboxTypeColorDM   CheckboxType = 2
)

var CheckboxType_name = map[int32]string{
	0: "CheckboxTypeNone",
	1: "CheckboxTypeEncourage",
	2: "CheckboxTypeColorDM",
}

var CheckboxType_value = map[string]int32{
	"CheckboxTypeNone":      0,
	"CheckboxTypeEncourage": 1,
	"CheckboxTypeColorDM":   2,
}

func (x CheckboxType) String() string {
	return proto.EnumName(CheckboxType_name, int32(x))
}

func (CheckboxType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{1}
}

// 弹幕属性位值
type DMAttrBit int32

const (
	DMAttrBit_DMAttrBitProtect  DMAttrBit = 0
	DMAttrBit_DMAttrBitFromLive DMAttrBit = 1
	DMAttrBit_DMAttrHighLike    DMAttrBit = 2
)

var DMAttrBit_name = map[int32]string{
	0: "DMAttrBitProtect",
	1: "DMAttrBitFromLive",
	2: "DMAttrHighLike",
}

var DMAttrBit_value = map[string]int32{
	"DMAttrBitProtect":  0,
	"DMAttrBitFromLive": 1,
	"DMAttrHighLike":    2,
}

func (x DMAttrBit) String() string {
	return proto.EnumName(DMAttrBit_name, int32(x))
}

func (DMAttrBit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{2}
}

//
type PostPanelBizType int32

const (
	PostPanelBizType_PostPanelBizTypeNone      PostPanelBizType = 0
	PostPanelBizType_PostPanelBizTypeEncourage PostPanelBizType = 1
	PostPanelBizType_PostPanelBizTypeColorDM   PostPanelBizType = 2
	PostPanelBizType_PostPanelBizTypeNFTDM     PostPanelBizType = 3
	PostPanelBizType_PostPanelBizTypeFragClose PostPanelBizType = 4
	PostPanelBizType_PostPanelBizTypeRecommend PostPanelBizType = 5
)

var PostPanelBizType_name = map[int32]string{
	0: "PostPanelBizTypeNone",
	1: "PostPanelBizTypeEncourage",
	2: "PostPanelBizTypeColorDM",
	3: "PostPanelBizTypeNFTDM",
	4: "PostPanelBizTypeFragClose",
	5: "PostPanelBizTypeRecommend",
}

var PostPanelBizType_value = map[string]int32{
	"PostPanelBizTypeNone":      0,
	"PostPanelBizTypeEncourage": 1,
	"PostPanelBizTypeColorDM":   2,
	"PostPanelBizTypeNFTDM":     3,
	"PostPanelBizTypeFragClose": 4,
	"PostPanelBizTypeRecommend": 5,
}

func (x PostPanelBizType) String() string {
	return proto.EnumName(PostPanelBizType_name, int32(x))
}

func (PostPanelBizType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{3}
}

//
type PostStatus int32

const (
	PostStatus_PostStatusNormal PostStatus = 0
	PostStatus_PostStatusClosed PostStatus = 1
)

var PostStatus_name = map[int32]string{
	0: "PostStatusNormal",
	1: "PostStatusClosed",
}

var PostStatus_value = map[string]int32{
	"PostStatusNormal": 0,
	"PostStatusClosed": 1,
}

func (x PostStatus) String() string {
	return proto.EnumName(PostStatus_name, int32(x))
}

func (PostStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{4}
}

//
type RenderType int32

const (
	RenderType_RenderTypeNone     RenderType = 0
	RenderType_RenderTypeSingle   RenderType = 1
	RenderType_RenderTypeRotation RenderType = 2
)

var RenderType_name = map[int32]string{
	0: "RenderTypeNone",
	1: "RenderTypeSingle",
	2: "RenderTypeRotation",
}

var RenderType_value = map[string]int32{
	"RenderTypeNone":     0,
	"RenderTypeSingle":   1,
	"RenderTypeRotation": 2,
}

func (x RenderType) String() string {
	return proto.EnumName(RenderType_name, int32(x))
}

func (RenderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{5}
}

//
type SubtitleAiStatus int32

const (
	SubtitleAiStatus_None     SubtitleAiStatus = 0
	SubtitleAiStatus_Exposure SubtitleAiStatus = 1
	SubtitleAiStatus_Assist   SubtitleAiStatus = 2
)

var SubtitleAiStatus_name = map[int32]string{
	0: "None",
	1: "Exposure",
	2: "Assist",
}

var SubtitleAiStatus_value = map[string]int32{
	"None":     0,
	"Exposure": 1,
	"Assist":   2,
}

func (x SubtitleAiStatus) String() string {
	return proto.EnumName(SubtitleAiStatus_name, int32(x))
}

func (SubtitleAiStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{6}
}

//
type SubtitleAiType int32

const (
	SubtitleAiType_Normal    SubtitleAiType = 0
	SubtitleAiType_Translate SubtitleAiType = 1
)

var SubtitleAiType_name = map[int32]string{
	0: "Normal",
	1: "Translate",
}

var SubtitleAiType_value = map[string]int32{
	"Normal":    0,
	"Translate": 1,
}

func (x SubtitleAiType) String() string {
	return proto.EnumName(SubtitleAiType_name, int32(x))
}

func (SubtitleAiType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{7}
}

type SubtitleType int32

const (
	SubtitleType_CC SubtitleType = 0
	SubtitleType_AI SubtitleType = 1
)

var SubtitleType_name = map[int32]string{
	0: "CC",
	1: "AI",
}

var SubtitleType_value = map[string]int32{
	"CC": 0,
	"AI": 1,
}

func (x SubtitleType) String() string {
	return proto.EnumName(SubtitleType_name, int32(x))
}

func (SubtitleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{8}
}

//
type ToastFunctionType int32

const (
	ToastFunctionType_ToastFunctionTypeNone      ToastFunctionType = 0
	ToastFunctionType_ToastFunctionTypePostPanel ToastFunctionType = 1
)

var ToastFunctionType_name = map[int32]string{
	0: "ToastFunctionTypeNone",
	1: "ToastFunctionTypePostPanel",
}

var ToastFunctionType_value = map[string]int32{
	"ToastFunctionTypeNone":      0,
	"ToastFunctionTypePostPanel": 1,
}

func (x ToastFunctionType) String() string {
	return proto.EnumName(ToastFunctionType_name, int32(x))
}

func (ToastFunctionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{9}
}

//
type Avatar struct {
	//
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	//
	AvatarType           AvatarType `protobuf:"varint,3,opt,name=avatar_type,json=avatarType,proto3,enum=bilibili.community.service.dm.v1.AvatarType" json:"avatar_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Avatar) Reset()         { *m = Avatar{} }
func (m *Avatar) String() string { return proto.CompactTextString(m) }
func (*Avatar) ProtoMessage()    {}
func (*Avatar) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{0}
}

func (m *Avatar) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Avatar.Unmarshal(m, b)
}
func (m *Avatar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Avatar.Marshal(b, m, deterministic)
}
func (m *Avatar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Avatar.Merge(m, src)
}
func (m *Avatar) XXX_Size() int {
	return xxx_messageInfo_Avatar.Size(m)
}
func (m *Avatar) XXX_DiscardUnknown() {
	xxx_messageInfo_Avatar.DiscardUnknown(m)
}

var xxx_messageInfo_Avatar proto.InternalMessageInfo

func (m *Avatar) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Avatar) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Avatar) GetAvatarType() AvatarType {
	if m != nil {
		return m.AvatarType
	}
	return AvatarType_AvatarTypeNone
}

//
type Bubble struct {
	//
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	//
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bubble) Reset()         { *m = Bubble{} }
func (m *Bubble) String() string { return proto.CompactTextString(m) }
func (*Bubble) ProtoMessage()    {}
func (*Bubble) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{1}
}

func (m *Bubble) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bubble.Unmarshal(m, b)
}
func (m *Bubble) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bubble.Marshal(b, m, deterministic)
}
func (m *Bubble) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bubble.Merge(m, src)
}
func (m *Bubble) XXX_Size() int {
	return xxx_messageInfo_Bubble.Size(m)
}
func (m *Bubble) XXX_DiscardUnknown() {
	xxx_messageInfo_Bubble.DiscardUnknown(m)
}

var xxx_messageInfo_Bubble proto.InternalMessageInfo

func (m *Bubble) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Bubble) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

//
type Button struct {
	//
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	//
	Action               int32    `protobuf:"varint,2,opt,name=action,proto3" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Button) Reset()         { *m = Button{} }
func (m *Button) String() string { return proto.CompactTextString(m) }
func (*Button) ProtoMessage()    {}
func (*Button) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{2}
}

func (m *Button) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Button.Unmarshal(m, b)
}
func (m *Button) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Button.Marshal(b, m, deterministic)
}
func (m *Button) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Button.Merge(m, src)
}
func (m *Button) XXX_Size() int {
	return xxx_messageInfo_Button.Size(m)
}
func (m *Button) XXX_DiscardUnknown() {
	xxx_messageInfo_Button.DiscardUnknown(m)
}

var xxx_messageInfo_Button proto.InternalMessageInfo

func (m *Button) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Button) GetAction() int32 {
	if m != nil {
		return m.Action
	}
	return 0
}

//
type BuzzwordConfig struct {
	//
	Keywords             []*BuzzwordShowConfig `protobuf:"bytes,1,rep,name=keywords,proto3" json:"keywords,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *BuzzwordConfig) Reset()         { *m = BuzzwordConfig{} }
func (m *BuzzwordConfig) String() string { return proto.CompactTextString(m) }
func (*BuzzwordConfig) ProtoMessage()    {}
func (*BuzzwordConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{3}
}

func (m *BuzzwordConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuzzwordConfig.Unmarshal(m, b)
}
func (m *BuzzwordConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuzzwordConfig.Marshal(b, m, deterministic)
}
func (m *BuzzwordConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuzzwordConfig.Merge(m, src)
}
func (m *BuzzwordConfig) XXX_Size() int {
	return xxx_messageInfo_BuzzwordConfig.Size(m)
}
func (m *BuzzwordConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_BuzzwordConfig.DiscardUnknown(m)
}

var xxx_messageInfo_BuzzwordConfig proto.InternalMessageInfo

func (m *BuzzwordConfig) GetKeywords() []*BuzzwordShowConfig {
	if m != nil {
		return m.Keywords
	}
	return nil
}

//
type BuzzwordShowConfig struct {
	//
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	//
	Schema string `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty"`
	//
	Source int32 `protobuf:"varint,3,opt,name=source,proto3" json:"source,omitempty"`
	//
	Id int64 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	//
	BuzzwordId int64 `protobuf:"varint,5,opt,name=buzzword_id,json=buzzwordId,proto3" json:"buzzword_id,omitempty"`
	//
	SchemaType           int32    `protobuf:"varint,6,opt,name=schema_type,json=schemaType,proto3" json:"schema_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuzzwordShowConfig) Reset()         { *m = BuzzwordShowConfig{} }
func (m *BuzzwordShowConfig) String() string { return proto.CompactTextString(m) }
func (*BuzzwordShowConfig) ProtoMessage()    {}
func (*BuzzwordShowConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{4}
}

func (m *BuzzwordShowConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuzzwordShowConfig.Unmarshal(m, b)
}
func (m *BuzzwordShowConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuzzwordShowConfig.Marshal(b, m, deterministic)
}
func (m *BuzzwordShowConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuzzwordShowConfig.Merge(m, src)
}
func (m *BuzzwordShowConfig) XXX_Size() int {
	return xxx_messageInfo_BuzzwordShowConfig.Size(m)
}
func (m *BuzzwordShowConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_BuzzwordShowConfig.DiscardUnknown(m)
}

var xxx_messageInfo_BuzzwordShowConfig proto.InternalMessageInfo

func (m *BuzzwordShowConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BuzzwordShowConfig) GetSchema() string {
	if m != nil {
		return m.Schema
	}
	return ""
}

func (m *BuzzwordShowConfig) GetSource() int32 {
	if m != nil {
		return m.Source
	}
	return 0
}

func (m *BuzzwordShowConfig) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuzzwordShowConfig) GetBuzzwordId() int64 {
	if m != nil {
		return m.BuzzwordId
	}
	return 0
}

func (m *BuzzwordShowConfig) GetSchemaType() int32 {
	if m != nil {
		return m.SchemaType
	}
	return 0
}

//
type CheckBox struct {
	//
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	//
	Type CheckboxType `protobuf:"varint,2,opt,name=type,proto3,enum=bilibili.community.service.dm.v1.CheckboxType" json:"type,omitempty"`
	//
	DefaultValue bool `protobuf:"varint,3,opt,name=default_value,json=defaultValue,proto3" json:"default_value,omitempty"`
	//
	Show                 bool     `protobuf:"varint,4,opt,name=show,proto3" json:"show,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckBox) Reset()         { *m = CheckBox{} }
func (m *CheckBox) String() string { return proto.CompactTextString(m) }
func (*CheckBox) ProtoMessage()    {}
func (*CheckBox) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{5}
}

func (m *CheckBox) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckBox.Unmarshal(m, b)
}
func (m *CheckBox) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckBox.Marshal(b, m, deterministic)
}
func (m *CheckBox) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckBox.Merge(m, src)
}
func (m *CheckBox) XXX_Size() int {
	return xxx_messageInfo_CheckBox.Size(m)
}
func (m *CheckBox) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckBox.DiscardUnknown(m)
}

var xxx_messageInfo_CheckBox proto.InternalMessageInfo

func (m *CheckBox) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *CheckBox) GetType() CheckboxType {
	if m != nil {
		return m.Type
	}
	return CheckboxType_CheckboxTypeNone
}

func (m *CheckBox) GetDefaultValue() bool {
	if m != nil {
		return m.DefaultValue
	}
	return false
}

func (m *CheckBox) GetShow() bool {
	if m != nil {
		return m.Show
	}
	return false
}

//
type ClickButton struct {
	//
	PortraitText []string `protobuf:"bytes,1,rep,name=portrait_text,json=portraitText,proto3" json:"portrait_text,omitempty"`
	//
	LandscapeText []string `protobuf:"bytes,2,rep,name=landscape_text,json=landscapeText,proto3" json:"landscape_text,omitempty"`
	//
	PortraitTextFocus []string `protobuf:"bytes,3,rep,name=portrait_text_focus,json=portraitTextFocus,proto3" json:"portrait_text_focus,omitempty"`
	//
	LandscapeTextFocus []string `protobuf:"bytes,4,rep,name=landscape_text_focus,json=landscapeTextFocus,proto3" json:"landscape_text_focus,omitempty"`
	//
	RenderType RenderType `protobuf:"varint,5,opt,name=render_type,json=renderType,proto3,enum=bilibili.community.service.dm.v1.RenderType" json:"render_type,omitempty"`
	//
	Show bool `protobuf:"varint,6,opt,name=show,proto3" json:"show,omitempty"`
	//
	Bubble               *Bubble  `protobuf:"bytes,7,opt,name=bubble,proto3" json:"bubble,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClickButton) Reset()         { *m = ClickButton{} }
func (m *ClickButton) String() string { return proto.CompactTextString(m) }
func (*ClickButton) ProtoMessage()    {}
func (*ClickButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{6}
}

func (m *ClickButton) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClickButton.Unmarshal(m, b)
}
func (m *ClickButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClickButton.Marshal(b, m, deterministic)
}
func (m *ClickButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClickButton.Merge(m, src)
}
func (m *ClickButton) XXX_Size() int {
	return xxx_messageInfo_ClickButton.Size(m)
}
func (m *ClickButton) XXX_DiscardUnknown() {
	xxx_messageInfo_ClickButton.DiscardUnknown(m)
}

var xxx_messageInfo_ClickButton proto.InternalMessageInfo

func (m *ClickButton) GetPortraitText() []string {
	if m != nil {
		return m.PortraitText
	}
	return nil
}

func (m *ClickButton) GetLandscapeText() []string {
	if m != nil {
		return m.LandscapeText
	}
	return nil
}

func (m *ClickButton) GetPortraitTextFocus() []string {
	if m != nil {
		return m.PortraitTextFocus
	}
	return nil
}

func (m *ClickButton) GetLandscapeTextFocus() []string {
	if m != nil {
		return m.LandscapeTextFocus
	}
	return nil
}

func (m *ClickButton) GetRenderType() RenderType {
	if m != nil {
		return m.RenderType
	}
	return RenderType_RenderTypeNone
}

func (m *ClickButton) GetShow() bool {
	if m != nil {
		return m.Show
	}
	return false
}

func (m *ClickButton) GetBubble() *Bubble {
	if m != nil {
		return m.Bubble
	}
	return nil
}

// 互动弹幕条目信息
type CommandDm struct {
	// 弹幕id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 对象视频cid
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 发送者mid
	Mid string `protobuf:"bytes,3,opt,name=mid,proto3" json:"mid,omitempty"`
	// 互动弹幕指令
	Command string `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	// 互动弹幕正文
	Content string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	// 出现时间
	Progress int32 `protobuf:"varint,6,opt,name=progress,proto3" json:"progress,omitempty"`
	// 创建时间
	Ctime string `protobuf:"bytes,7,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 发布时间
	Mtime string `protobuf:"bytes,8,opt,name=mtime,proto3" json:"mtime,omitempty"`
	// 扩展json数据
	Extra string `protobuf:"bytes,9,opt,name=extra,proto3" json:"extra,omitempty"`
	// 弹幕id str类型
	IdStr                string   `protobuf:"bytes,10,opt,name=idStr,proto3" json:"idStr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandDm) Reset()         { *m = CommandDm{} }
func (m *CommandDm) String() string { return proto.CompactTextString(m) }
func (*CommandDm) ProtoMessage()    {}
func (*CommandDm) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{7}
}

func (m *CommandDm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandDm.Unmarshal(m, b)
}
func (m *CommandDm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandDm.Marshal(b, m, deterministic)
}
func (m *CommandDm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandDm.Merge(m, src)
}
func (m *CommandDm) XXX_Size() int {
	return xxx_messageInfo_CommandDm.Size(m)
}
func (m *CommandDm) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandDm.DiscardUnknown(m)
}

var xxx_messageInfo_CommandDm proto.InternalMessageInfo

func (m *CommandDm) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CommandDm) GetOid() int64 {
	if m != nil {
		return m.Oid
	}
	return 0
}

func (m *CommandDm) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

func (m *CommandDm) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *CommandDm) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *CommandDm) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *CommandDm) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *CommandDm) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *CommandDm) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *CommandDm) GetIdStr() string {
	if m != nil {
		return m.IdStr
	}
	return ""
}

// 弹幕ai云屏蔽列表
type DanmakuAIFlag struct {
	// 弹幕ai云屏蔽条目
	DmFlags              []*DanmakuFlag `protobuf:"bytes,1,rep,name=dm_flags,json=dmFlags,proto3" json:"dm_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DanmakuAIFlag) Reset()         { *m = DanmakuAIFlag{} }
func (m *DanmakuAIFlag) String() string { return proto.CompactTextString(m) }
func (*DanmakuAIFlag) ProtoMessage()    {}
func (*DanmakuAIFlag) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{8}
}

func (m *DanmakuAIFlag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmakuAIFlag.Unmarshal(m, b)
}
func (m *DanmakuAIFlag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmakuAIFlag.Marshal(b, m, deterministic)
}
func (m *DanmakuAIFlag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmakuAIFlag.Merge(m, src)
}
func (m *DanmakuAIFlag) XXX_Size() int {
	return xxx_messageInfo_DanmakuAIFlag.Size(m)
}
func (m *DanmakuAIFlag) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmakuAIFlag.DiscardUnknown(m)
}

var xxx_messageInfo_DanmakuAIFlag proto.InternalMessageInfo

func (m *DanmakuAIFlag) GetDmFlags() []*DanmakuFlag {
	if m != nil {
		return m.DmFlags
	}
	return nil
}

// 弹幕条目
type DanmakuElem struct {
	// 弹幕dmid
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 弹幕出现位置(单位ms)
	Progress int32 `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
	// 弹幕类型
	Mode int32 `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	// 弹幕字号
	Fontsize int32 `protobuf:"varint,4,opt,name=fontsize,proto3" json:"fontsize,omitempty"`
	// 弹幕颜色
	Color uint32 `protobuf:"varint,5,opt,name=color,proto3" json:"color,omitempty"`
	// 发送着mid hash
	MidHash string `protobuf:"bytes,6,opt,name=midHash,proto3" json:"midHash,omitempty"`
	// 弹幕正文
	Content string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	// 发送时间
	Ctime int64 `protobuf:"varint,8,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 权重 区间:[1,10]
	Weight int32 `protobuf:"varint,9,opt,name=weight,proto3" json:"weight,omitempty"`
	// 动作
	Action string `protobuf:"bytes,10,opt,name=action,proto3" json:"action,omitempty"`
	// 弹幕池
	Pool int32 `protobuf:"varint,11,opt,name=pool,proto3" json:"pool,omitempty"`
	// 弹幕dmid str
	IdStr string `protobuf:"bytes,12,opt,name=idStr,proto3" json:"idStr,omitempty"`
	// 弹幕属性位(bin求AND)
	// bit0:保护 bit1:直播 bit2:高赞
	Attr int32 `protobuf:"varint,13,opt,name=attr,proto3" json:"attr,omitempty"`
	//
	Animation            string   `protobuf:"bytes,22,opt,name=animation,proto3" json:"animation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DanmakuElem) Reset()         { *m = DanmakuElem{} }
func (m *DanmakuElem) String() string { return proto.CompactTextString(m) }
func (*DanmakuElem) ProtoMessage()    {}
func (*DanmakuElem) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{9}
}

func (m *DanmakuElem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmakuElem.Unmarshal(m, b)
}
func (m *DanmakuElem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmakuElem.Marshal(b, m, deterministic)
}
func (m *DanmakuElem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmakuElem.Merge(m, src)
}
func (m *DanmakuElem) XXX_Size() int {
	return xxx_messageInfo_DanmakuElem.Size(m)
}
func (m *DanmakuElem) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmakuElem.DiscardUnknown(m)
}

var xxx_messageInfo_DanmakuElem proto.InternalMessageInfo

func (m *DanmakuElem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DanmakuElem) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *DanmakuElem) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *DanmakuElem) GetFontsize() int32 {
	if m != nil {
		return m.Fontsize
	}
	return 0
}

func (m *DanmakuElem) GetColor() uint32 {
	if m != nil {
		return m.Color
	}
	return 0
}

func (m *DanmakuElem) GetMidHash() string {
	if m != nil {
		return m.MidHash
	}
	return ""
}

func (m *DanmakuElem) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *DanmakuElem) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *DanmakuElem) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *DanmakuElem) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DanmakuElem) GetPool() int32 {
	if m != nil {
		return m.Pool
	}
	return 0
}

func (m *DanmakuElem) GetIdStr() string {
	if m != nil {
		return m.IdStr
	}
	return ""
}

func (m *DanmakuElem) GetAttr() int32 {
	if m != nil {
		return m.Attr
	}
	return 0
}

func (m *DanmakuElem) GetAnimation() string {
	if m != nil {
		return m.Animation
	}
	return ""
}

// 弹幕ai云屏蔽条目
type DanmakuFlag struct {
	// 弹幕dmid
	Dmid int64 `protobuf:"varint,1,opt,name=dmid,proto3" json:"dmid,omitempty"`
	// 评分
	Flag                 uint32   `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DanmakuFlag) Reset()         { *m = DanmakuFlag{} }
func (m *DanmakuFlag) String() string { return proto.CompactTextString(m) }
func (*DanmakuFlag) ProtoMessage()    {}
func (*DanmakuFlag) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{10}
}

func (m *DanmakuFlag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmakuFlag.Unmarshal(m, b)
}
func (m *DanmakuFlag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmakuFlag.Marshal(b, m, deterministic)
}
func (m *DanmakuFlag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmakuFlag.Merge(m, src)
}
func (m *DanmakuFlag) XXX_Size() int {
	return xxx_messageInfo_DanmakuFlag.Size(m)
}
func (m *DanmakuFlag) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmakuFlag.DiscardUnknown(m)
}

var xxx_messageInfo_DanmakuFlag proto.InternalMessageInfo

func (m *DanmakuFlag) GetDmid() int64 {
	if m != nil {
		return m.Dmid
	}
	return 0
}

func (m *DanmakuFlag) GetFlag() uint32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

// 云屏蔽配置信息
type DanmakuFlagConfig struct {
	// 云屏蔽等级
	RecFlag int32 `protobuf:"varint,1,opt,name=rec_flag,json=recFlag,proto3" json:"rec_flag,omitempty"`
	// 云屏蔽文案
	RecText string `protobuf:"bytes,2,opt,name=rec_text,json=recText,proto3" json:"rec_text,omitempty"`
	// 云屏蔽开关
	RecSwitch            int32    `protobuf:"varint,3,opt,name=rec_switch,json=recSwitch,proto3" json:"rec_switch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DanmakuFlagConfig) Reset()         { *m = DanmakuFlagConfig{} }
func (m *DanmakuFlagConfig) String() string { return proto.CompactTextString(m) }
func (*DanmakuFlagConfig) ProtoMessage()    {}
func (*DanmakuFlagConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{11}
}

func (m *DanmakuFlagConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmakuFlagConfig.Unmarshal(m, b)
}
func (m *DanmakuFlagConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmakuFlagConfig.Marshal(b, m, deterministic)
}
func (m *DanmakuFlagConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmakuFlagConfig.Merge(m, src)
}
func (m *DanmakuFlagConfig) XXX_Size() int {
	return xxx_messageInfo_DanmakuFlagConfig.Size(m)
}
func (m *DanmakuFlagConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmakuFlagConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DanmakuFlagConfig proto.InternalMessageInfo

func (m *DanmakuFlagConfig) GetRecFlag() int32 {
	if m != nil {
		return m.RecFlag
	}
	return 0
}

func (m *DanmakuFlagConfig) GetRecText() string {
	if m != nil {
		return m.RecText
	}
	return ""
}

func (m *DanmakuFlagConfig) GetRecSwitch() int32 {
	if m != nil {
		return m.RecSwitch
	}
	return 0
}

// 弹幕默认配置
type DanmuDefaultPlayerConfig struct {
	PlayerDanmakuUseDefaultConfig        bool            `protobuf:"varint,1,opt,name=player_danmaku_use_default_config,json=playerDanmakuUseDefaultConfig,proto3" json:"player_danmaku_use_default_config,omitempty"`
	PlayerDanmakuAiRecommendedSwitch     bool            `protobuf:"varint,4,opt,name=player_danmaku_ai_recommended_switch,json=playerDanmakuAiRecommendedSwitch,proto3" json:"player_danmaku_ai_recommended_switch,omitempty"`
	PlayerDanmakuAiRecommendedLevel      int32           `protobuf:"varint,5,opt,name=player_danmaku_ai_recommended_level,json=playerDanmakuAiRecommendedLevel,proto3" json:"player_danmaku_ai_recommended_level,omitempty"`
	PlayerDanmakuBlocktop                bool            `protobuf:"varint,6,opt,name=player_danmaku_blocktop,json=playerDanmakuBlocktop,proto3" json:"player_danmaku_blocktop,omitempty"`
	PlayerDanmakuBlockscroll             bool            `protobuf:"varint,7,opt,name=player_danmaku_blockscroll,json=playerDanmakuBlockscroll,proto3" json:"player_danmaku_blockscroll,omitempty"`
	PlayerDanmakuBlockbottom             bool            `protobuf:"varint,8,opt,name=player_danmaku_blockbottom,json=playerDanmakuBlockbottom,proto3" json:"player_danmaku_blockbottom,omitempty"`
	PlayerDanmakuBlockcolorful           bool            `protobuf:"varint,9,opt,name=player_danmaku_blockcolorful,json=playerDanmakuBlockcolorful,proto3" json:"player_danmaku_blockcolorful,omitempty"`
	PlayerDanmakuBlockrepeat             bool            `protobuf:"varint,10,opt,name=player_danmaku_blockrepeat,json=playerDanmakuBlockrepeat,proto3" json:"player_danmaku_blockrepeat,omitempty"`
	PlayerDanmakuBlockspecial            bool            `protobuf:"varint,11,opt,name=player_danmaku_blockspecial,json=playerDanmakuBlockspecial,proto3" json:"player_danmaku_blockspecial,omitempty"`
	PlayerDanmakuOpacity                 float32         `protobuf:"fixed32,12,opt,name=player_danmaku_opacity,json=playerDanmakuOpacity,proto3" json:"player_danmaku_opacity,omitempty"`
	PlayerDanmakuScalingfactor           float32         `protobuf:"fixed32,13,opt,name=player_danmaku_scalingfactor,json=playerDanmakuScalingfactor,proto3" json:"player_danmaku_scalingfactor,omitempty"`
	PlayerDanmakuDomain                  float32         `protobuf:"fixed32,14,opt,name=player_danmaku_domain,json=playerDanmakuDomain,proto3" json:"player_danmaku_domain,omitempty"`
	PlayerDanmakuSpeed                   int32           `protobuf:"varint,15,opt,name=player_danmaku_speed,json=playerDanmakuSpeed,proto3" json:"player_danmaku_speed,omitempty"`
	InlinePlayerDanmakuSwitch            bool            `protobuf:"varint,16,opt,name=inline_player_danmaku_switch,json=inlinePlayerDanmakuSwitch,proto3" json:"inline_player_danmaku_switch,omitempty"`
	PlayerDanmakuSeniorModeSwitch        int32           `protobuf:"varint,17,opt,name=player_danmaku_senior_mode_switch,json=playerDanmakuSeniorModeSwitch,proto3" json:"player_danmaku_senior_mode_switch,omitempty"`
	PlayerDanmakuAiRecommendedLevelV2    int32           `protobuf:"varint,18,opt,name=player_danmaku_ai_recommended_level_v2,json=playerDanmakuAiRecommendedLevelV2,proto3" json:"player_danmaku_ai_recommended_level_v2,omitempty"`
	PlayerDanmakuAiRecommendedLevelV2Map map[int32]int32 `protobuf:"bytes,19,rep,name=player_danmaku_ai_recommended_level_v2_map,json=playerDanmakuAiRecommendedLevelV2Map,proto3" json:"player_danmaku_ai_recommended_level_v2_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral                 struct{}        `json:"-"`
	XXX_unrecognized                     []byte          `json:"-"`
	XXX_sizecache                        int32           `json:"-"`
}

func (m *DanmuDefaultPlayerConfig) Reset()         { *m = DanmuDefaultPlayerConfig{} }
func (m *DanmuDefaultPlayerConfig) String() string { return proto.CompactTextString(m) }
func (*DanmuDefaultPlayerConfig) ProtoMessage()    {}
func (*DanmuDefaultPlayerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{12}
}

func (m *DanmuDefaultPlayerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmuDefaultPlayerConfig.Unmarshal(m, b)
}
func (m *DanmuDefaultPlayerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmuDefaultPlayerConfig.Marshal(b, m, deterministic)
}
func (m *DanmuDefaultPlayerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmuDefaultPlayerConfig.Merge(m, src)
}
func (m *DanmuDefaultPlayerConfig) XXX_Size() int {
	return xxx_messageInfo_DanmuDefaultPlayerConfig.Size(m)
}
func (m *DanmuDefaultPlayerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmuDefaultPlayerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DanmuDefaultPlayerConfig proto.InternalMessageInfo

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuUseDefaultConfig() bool {
	if m != nil {
		return m.PlayerDanmakuUseDefaultConfig
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuAiRecommendedSwitch() bool {
	if m != nil {
		return m.PlayerDanmakuAiRecommendedSwitch
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuAiRecommendedLevel() int32 {
	if m != nil {
		return m.PlayerDanmakuAiRecommendedLevel
	}
	return 0
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuBlocktop() bool {
	if m != nil {
		return m.PlayerDanmakuBlocktop
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuBlockscroll() bool {
	if m != nil {
		return m.PlayerDanmakuBlockscroll
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuBlockbottom() bool {
	if m != nil {
		return m.PlayerDanmakuBlockbottom
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuBlockcolorful() bool {
	if m != nil {
		return m.PlayerDanmakuBlockcolorful
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuBlockrepeat() bool {
	if m != nil {
		return m.PlayerDanmakuBlockrepeat
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuBlockspecial() bool {
	if m != nil {
		return m.PlayerDanmakuBlockspecial
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuOpacity() float32 {
	if m != nil {
		return m.PlayerDanmakuOpacity
	}
	return 0
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuScalingfactor() float32 {
	if m != nil {
		return m.PlayerDanmakuScalingfactor
	}
	return 0
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuDomain() float32 {
	if m != nil {
		return m.PlayerDanmakuDomain
	}
	return 0
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuSpeed() int32 {
	if m != nil {
		return m.PlayerDanmakuSpeed
	}
	return 0
}

func (m *DanmuDefaultPlayerConfig) GetInlinePlayerDanmakuSwitch() bool {
	if m != nil {
		return m.InlinePlayerDanmakuSwitch
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuSeniorModeSwitch() int32 {
	if m != nil {
		return m.PlayerDanmakuSeniorModeSwitch
	}
	return 0
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuAiRecommendedLevelV2() int32 {
	if m != nil {
		return m.PlayerDanmakuAiRecommendedLevelV2
	}
	return 0
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuAiRecommendedLevelV2Map() map[int32]int32 {
	if m != nil {
		return m.PlayerDanmakuAiRecommendedLevelV2Map
	}
	return nil
}

// 弹幕配置
type DanmuPlayerConfig struct {
	PlayerDanmakuSwitch                  bool            `protobuf:"varint,1,opt,name=player_danmaku_switch,json=playerDanmakuSwitch,proto3" json:"player_danmaku_switch,omitempty"`
	PlayerDanmakuSwitchSave              bool            `protobuf:"varint,2,opt,name=player_danmaku_switch_save,json=playerDanmakuSwitchSave,proto3" json:"player_danmaku_switch_save,omitempty"`
	PlayerDanmakuUseDefaultConfig        bool            `protobuf:"varint,3,opt,name=player_danmaku_use_default_config,json=playerDanmakuUseDefaultConfig,proto3" json:"player_danmaku_use_default_config,omitempty"`
	PlayerDanmakuAiRecommendedSwitch     bool            `protobuf:"varint,4,opt,name=player_danmaku_ai_recommended_switch,json=playerDanmakuAiRecommendedSwitch,proto3" json:"player_danmaku_ai_recommended_switch,omitempty"`
	PlayerDanmakuAiRecommendedLevel      int32           `protobuf:"varint,5,opt,name=player_danmaku_ai_recommended_level,json=playerDanmakuAiRecommendedLevel,proto3" json:"player_danmaku_ai_recommended_level,omitempty"`
	PlayerDanmakuBlocktop                bool            `protobuf:"varint,6,opt,name=player_danmaku_blocktop,json=playerDanmakuBlocktop,proto3" json:"player_danmaku_blocktop,omitempty"`
	PlayerDanmakuBlockscroll             bool            `protobuf:"varint,7,opt,name=player_danmaku_blockscroll,json=playerDanmakuBlockscroll,proto3" json:"player_danmaku_blockscroll,omitempty"`
	PlayerDanmakuBlockbottom             bool            `protobuf:"varint,8,opt,name=player_danmaku_blockbottom,json=playerDanmakuBlockbottom,proto3" json:"player_danmaku_blockbottom,omitempty"`
	PlayerDanmakuBlockcolorful           bool            `protobuf:"varint,9,opt,name=player_danmaku_blockcolorful,json=playerDanmakuBlockcolorful,proto3" json:"player_danmaku_blockcolorful,omitempty"`
	PlayerDanmakuBlockrepeat             bool            `protobuf:"varint,10,opt,name=player_danmaku_blockrepeat,json=playerDanmakuBlockrepeat,proto3" json:"player_danmaku_blockrepeat,omitempty"`
	PlayerDanmakuBlockspecial            bool            `protobuf:"varint,11,opt,name=player_danmaku_blockspecial,json=playerDanmakuBlockspecial,proto3" json:"player_danmaku_blockspecial,omitempty"`
	PlayerDanmakuOpacity                 float32         `protobuf:"fixed32,12,opt,name=player_danmaku_opacity,json=playerDanmakuOpacity,proto3" json:"player_danmaku_opacity,omitempty"`
	PlayerDanmakuScalingfactor           float32         `protobuf:"fixed32,13,opt,name=player_danmaku_scalingfactor,json=playerDanmakuScalingfactor,proto3" json:"player_danmaku_scalingfactor,omitempty"`
	PlayerDanmakuDomain                  float32         `protobuf:"fixed32,14,opt,name=player_danmaku_domain,json=playerDanmakuDomain,proto3" json:"player_danmaku_domain,omitempty"`
	PlayerDanmakuSpeed                   int32           `protobuf:"varint,15,opt,name=player_danmaku_speed,json=playerDanmakuSpeed,proto3" json:"player_danmaku_speed,omitempty"`
	PlayerDanmakuEnableblocklist         bool            `protobuf:"varint,16,opt,name=player_danmaku_enableblocklist,json=playerDanmakuEnableblocklist,proto3" json:"player_danmaku_enableblocklist,omitempty"`
	InlinePlayerDanmakuSwitch            bool            `protobuf:"varint,17,opt,name=inline_player_danmaku_switch,json=inlinePlayerDanmakuSwitch,proto3" json:"inline_player_danmaku_switch,omitempty"`
	InlinePlayerDanmakuConfig            int32           `protobuf:"varint,18,opt,name=inline_player_danmaku_config,json=inlinePlayerDanmakuConfig,proto3" json:"inline_player_danmaku_config,omitempty"`
	PlayerDanmakuIosSwitchSave           int32           `protobuf:"varint,19,opt,name=player_danmaku_ios_switch_save,json=playerDanmakuIosSwitchSave,proto3" json:"player_danmaku_ios_switch_save,omitempty"`
	PlayerDanmakuSeniorModeSwitch        int32           `protobuf:"varint,20,opt,name=player_danmaku_senior_mode_switch,json=playerDanmakuSeniorModeSwitch,proto3" json:"player_danmaku_senior_mode_switch,omitempty"`
	PlayerDanmakuAiRecommendedLevelV2    int32           `protobuf:"varint,21,opt,name=player_danmaku_ai_recommended_level_v2,json=playerDanmakuAiRecommendedLevelV2,proto3" json:"player_danmaku_ai_recommended_level_v2,omitempty"`
	PlayerDanmakuAiRecommendedLevelV2Map map[int32]int32 `protobuf:"bytes,22,rep,name=player_danmaku_ai_recommended_level_v2_map,json=playerDanmakuAiRecommendedLevelV2Map,proto3" json:"player_danmaku_ai_recommended_level_v2_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral                 struct{}        `json:"-"`
	XXX_unrecognized                     []byte          `json:"-"`
	XXX_sizecache                        int32           `json:"-"`
}

func (m *DanmuPlayerConfig) Reset()         { *m = DanmuPlayerConfig{} }
func (m *DanmuPlayerConfig) String() string { return proto.CompactTextString(m) }
func (*DanmuPlayerConfig) ProtoMessage()    {}
func (*DanmuPlayerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{13}
}

func (m *DanmuPlayerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmuPlayerConfig.Unmarshal(m, b)
}
func (m *DanmuPlayerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmuPlayerConfig.Marshal(b, m, deterministic)
}
func (m *DanmuPlayerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmuPlayerConfig.Merge(m, src)
}
func (m *DanmuPlayerConfig) XXX_Size() int {
	return xxx_messageInfo_DanmuPlayerConfig.Size(m)
}
func (m *DanmuPlayerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmuPlayerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DanmuPlayerConfig proto.InternalMessageInfo

func (m *DanmuPlayerConfig) GetPlayerDanmakuSwitch() bool {
	if m != nil {
		return m.PlayerDanmakuSwitch
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuSwitchSave() bool {
	if m != nil {
		return m.PlayerDanmakuSwitchSave
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuUseDefaultConfig() bool {
	if m != nil {
		return m.PlayerDanmakuUseDefaultConfig
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuAiRecommendedSwitch() bool {
	if m != nil {
		return m.PlayerDanmakuAiRecommendedSwitch
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuAiRecommendedLevel() int32 {
	if m != nil {
		return m.PlayerDanmakuAiRecommendedLevel
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuBlocktop() bool {
	if m != nil {
		return m.PlayerDanmakuBlocktop
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuBlockscroll() bool {
	if m != nil {
		return m.PlayerDanmakuBlockscroll
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuBlockbottom() bool {
	if m != nil {
		return m.PlayerDanmakuBlockbottom
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuBlockcolorful() bool {
	if m != nil {
		return m.PlayerDanmakuBlockcolorful
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuBlockrepeat() bool {
	if m != nil {
		return m.PlayerDanmakuBlockrepeat
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuBlockspecial() bool {
	if m != nil {
		return m.PlayerDanmakuBlockspecial
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuOpacity() float32 {
	if m != nil {
		return m.PlayerDanmakuOpacity
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuScalingfactor() float32 {
	if m != nil {
		return m.PlayerDanmakuScalingfactor
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuDomain() float32 {
	if m != nil {
		return m.PlayerDanmakuDomain
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuSpeed() int32 {
	if m != nil {
		return m.PlayerDanmakuSpeed
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuEnableblocklist() bool {
	if m != nil {
		return m.PlayerDanmakuEnableblocklist
	}
	return false
}

func (m *DanmuPlayerConfig) GetInlinePlayerDanmakuSwitch() bool {
	if m != nil {
		return m.InlinePlayerDanmakuSwitch
	}
	return false
}

func (m *DanmuPlayerConfig) GetInlinePlayerDanmakuConfig() int32 {
	if m != nil {
		return m.InlinePlayerDanmakuConfig
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuIosSwitchSave() int32 {
	if m != nil {
		return m.PlayerDanmakuIosSwitchSave
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuSeniorModeSwitch() int32 {
	if m != nil {
		return m.PlayerDanmakuSeniorModeSwitch
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuAiRecommendedLevelV2() int32 {
	if m != nil {
		return m.PlayerDanmakuAiRecommendedLevelV2
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuAiRecommendedLevelV2Map() map[int32]int32 {
	if m != nil {
		return m.PlayerDanmakuAiRecommendedLevelV2Map
	}
	return nil
}

// 弹幕显示区域自动配置
type DanmuPlayerDynamicConfig struct {
	// 时间
	Progress int32 `protobuf:"varint,1,opt,name=progress,proto3" json:"progress,omitempty"`
	// 弹幕显示区域
	PlayerDanmakuDomain  float32  `protobuf:"fixed32,14,opt,name=player_danmaku_domain,json=playerDanmakuDomain,proto3" json:"player_danmaku_domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DanmuPlayerDynamicConfig) Reset()         { *m = DanmuPlayerDynamicConfig{} }
func (m *DanmuPlayerDynamicConfig) String() string { return proto.CompactTextString(m) }
func (*DanmuPlayerDynamicConfig) ProtoMessage()    {}
func (*DanmuPlayerDynamicConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{14}
}

func (m *DanmuPlayerDynamicConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmuPlayerDynamicConfig.Unmarshal(m, b)
}
func (m *DanmuPlayerDynamicConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmuPlayerDynamicConfig.Marshal(b, m, deterministic)
}
func (m *DanmuPlayerDynamicConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmuPlayerDynamicConfig.Merge(m, src)
}
func (m *DanmuPlayerDynamicConfig) XXX_Size() int {
	return xxx_messageInfo_DanmuPlayerDynamicConfig.Size(m)
}
func (m *DanmuPlayerDynamicConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmuPlayerDynamicConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DanmuPlayerDynamicConfig proto.InternalMessageInfo

func (m *DanmuPlayerDynamicConfig) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *DanmuPlayerDynamicConfig) GetPlayerDanmakuDomain() float32 {
	if m != nil {
		return m.PlayerDanmakuDomain
	}
	return 0
}

// 弹幕配置信息
type DanmuPlayerViewConfig struct {
	// 弹幕默认配置
	DanmukuDefaultPlayerConfig *DanmuDefaultPlayerConfig `protobuf:"bytes,1,opt,name=danmuku_default_player_config,json=danmukuDefaultPlayerConfig,proto3" json:"danmuku_default_player_config,omitempty"`
	// 弹幕用户配置
	DanmukuPlayerConfig *DanmuPlayerConfig `protobuf:"bytes,2,opt,name=danmuku_player_config,json=danmukuPlayerConfig,proto3" json:"danmuku_player_config,omitempty"`
	// 弹幕显示区域自动配置列表
	DanmukuPlayerDynamicConfig []*DanmuPlayerDynamicConfig `protobuf:"bytes,3,rep,name=danmuku_player_dynamic_config,json=danmukuPlayerDynamicConfig,proto3" json:"danmuku_player_dynamic_config,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                    `json:"-"`
	XXX_unrecognized           []byte                      `json:"-"`
	XXX_sizecache              int32                       `json:"-"`
}

func (m *DanmuPlayerViewConfig) Reset()         { *m = DanmuPlayerViewConfig{} }
func (m *DanmuPlayerViewConfig) String() string { return proto.CompactTextString(m) }
func (*DanmuPlayerViewConfig) ProtoMessage()    {}
func (*DanmuPlayerViewConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{15}
}

func (m *DanmuPlayerViewConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmuPlayerViewConfig.Unmarshal(m, b)
}
func (m *DanmuPlayerViewConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmuPlayerViewConfig.Marshal(b, m, deterministic)
}
func (m *DanmuPlayerViewConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmuPlayerViewConfig.Merge(m, src)
}
func (m *DanmuPlayerViewConfig) XXX_Size() int {
	return xxx_messageInfo_DanmuPlayerViewConfig.Size(m)
}
func (m *DanmuPlayerViewConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmuPlayerViewConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DanmuPlayerViewConfig proto.InternalMessageInfo

func (m *DanmuPlayerViewConfig) GetDanmukuDefaultPlayerConfig() *DanmuDefaultPlayerConfig {
	if m != nil {
		return m.DanmukuDefaultPlayerConfig
	}
	return nil
}

func (m *DanmuPlayerViewConfig) GetDanmukuPlayerConfig() *DanmuPlayerConfig {
	if m != nil {
		return m.DanmukuPlayerConfig
	}
	return nil
}

func (m *DanmuPlayerViewConfig) GetDanmukuPlayerDynamicConfig() []*DanmuPlayerDynamicConfig {
	if m != nil {
		return m.DanmukuPlayerDynamicConfig
	}
	return nil
}

// web端用户弹幕配置
type DanmuWebPlayerConfig struct {
	DmSwitch             bool            `protobuf:"varint,1,opt,name=dm_switch,json=dmSwitch,proto3" json:"dm_switch,omitempty"`
	AiSwitch             bool            `protobuf:"varint,2,opt,name=ai_switch,json=aiSwitch,proto3" json:"ai_switch,omitempty"`
	AiLevel              int32           `protobuf:"varint,3,opt,name=ai_level,json=aiLevel,proto3" json:"ai_level,omitempty"`
	Blocktop             bool            `protobuf:"varint,4,opt,name=blocktop,proto3" json:"blocktop,omitempty"`
	Blockscroll          bool            `protobuf:"varint,5,opt,name=blockscroll,proto3" json:"blockscroll,omitempty"`
	Blockbottom          bool            `protobuf:"varint,6,opt,name=blockbottom,proto3" json:"blockbottom,omitempty"`
	Blockcolor           bool            `protobuf:"varint,7,opt,name=blockcolor,proto3" json:"blockcolor,omitempty"`
	Blockspecial         bool            `protobuf:"varint,8,opt,name=blockspecial,proto3" json:"blockspecial,omitempty"`
	Preventshade         bool            `protobuf:"varint,9,opt,name=preventshade,proto3" json:"preventshade,omitempty"`
	Dmask                bool            `protobuf:"varint,10,opt,name=dmask,proto3" json:"dmask,omitempty"`
	Opacity              float32         `protobuf:"fixed32,11,opt,name=opacity,proto3" json:"opacity,omitempty"`
	Dmarea               int32           `protobuf:"varint,12,opt,name=dmarea,proto3" json:"dmarea,omitempty"`
	Speedplus            float32         `protobuf:"fixed32,13,opt,name=speedplus,proto3" json:"speedplus,omitempty"`
	Fontsize             float32         `protobuf:"fixed32,14,opt,name=fontsize,proto3" json:"fontsize,omitempty"`
	Screensync           bool            `protobuf:"varint,15,opt,name=screensync,proto3" json:"screensync,omitempty"`
	Speedsync            bool            `protobuf:"varint,16,opt,name=speedsync,proto3" json:"speedsync,omitempty"`
	Fontfamily           string          `protobuf:"bytes,17,opt,name=fontfamily,proto3" json:"fontfamily,omitempty"`
	Bold                 bool            `protobuf:"varint,18,opt,name=bold,proto3" json:"bold,omitempty"`
	Fontborder           int32           `protobuf:"varint,19,opt,name=fontborder,proto3" json:"fontborder,omitempty"`
	DrawType             string          `protobuf:"bytes,20,opt,name=draw_type,json=drawType,proto3" json:"draw_type,omitempty"`
	SeniorModeSwitch     int32           `protobuf:"varint,21,opt,name=senior_mode_switch,json=seniorModeSwitch,proto3" json:"senior_mode_switch,omitempty"`
	AiLevelV2            int32           `protobuf:"varint,22,opt,name=ai_level_v2,json=aiLevelV2,proto3" json:"ai_level_v2,omitempty"`
	AiLevelV2Map         map[int32]int32 `protobuf:"bytes,23,rep,name=ai_level_v2_map,json=aiLevelV2Map,proto3" json:"ai_level_v2_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DanmuWebPlayerConfig) Reset()         { *m = DanmuWebPlayerConfig{} }
func (m *DanmuWebPlayerConfig) String() string { return proto.CompactTextString(m) }
func (*DanmuWebPlayerConfig) ProtoMessage()    {}
func (*DanmuWebPlayerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{16}
}

func (m *DanmuWebPlayerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmuWebPlayerConfig.Unmarshal(m, b)
}
func (m *DanmuWebPlayerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmuWebPlayerConfig.Marshal(b, m, deterministic)
}
func (m *DanmuWebPlayerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmuWebPlayerConfig.Merge(m, src)
}
func (m *DanmuWebPlayerConfig) XXX_Size() int {
	return xxx_messageInfo_DanmuWebPlayerConfig.Size(m)
}
func (m *DanmuWebPlayerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmuWebPlayerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DanmuWebPlayerConfig proto.InternalMessageInfo

func (m *DanmuWebPlayerConfig) GetDmSwitch() bool {
	if m != nil {
		return m.DmSwitch
	}
	return false
}

func (m *DanmuWebPlayerConfig) GetAiSwitch() bool {
	if m != nil {
		return m.AiSwitch
	}
	return false
}

func (m *DanmuWebPlayerConfig) GetAiLevel() int32 {
	if m != nil {
		return m.AiLevel
	}
	return 0
}

func (m *DanmuWebPlayerConfig) GetBlocktop() bool {
	if m != nil {
		return m.Blocktop
	}
	return false
}

func (m *DanmuWebPlayerConfig) GetBlockscroll() bool {
	if m != nil {
		return m.Blockscroll
	}
	return false
}

func (m *DanmuWebPlayerConfig) GetBlockbottom() bool {
	if m != nil {
		return m.Blockbottom
	}
	return false
}

func (m *DanmuWebPlayerConfig) GetBlockcolor() bool {
	if m != nil {
		return m.Blockcolor
	}
	return false
}

func (m *DanmuWebPlayerConfig) GetBlockspecial() bool {
	if m != nil {
		return m.Blockspecial
	}
	return false
}

func (m *DanmuWebPlayerConfig) GetPreventshade() bool {
	if m != nil {
		return m.Preventshade
	}
	return false
}

func (m *DanmuWebPlayerConfig) GetDmask() bool {
	if m != nil {
		return m.Dmask
	}
	return false
}

func (m *DanmuWebPlayerConfig) GetOpacity() float32 {
	if m != nil {
		return m.Opacity
	}
	return 0
}

func (m *DanmuWebPlayerConfig) GetDmarea() int32 {
	if m != nil {
		return m.Dmarea
	}
	return 0
}

func (m *DanmuWebPlayerConfig) GetSpeedplus() float32 {
	if m != nil {
		return m.Speedplus
	}
	return 0
}

func (m *DanmuWebPlayerConfig) GetFontsize() float32 {
	if m != nil {
		return m.Fontsize
	}
	return 0
}

func (m *DanmuWebPlayerConfig) GetScreensync() bool {
	if m != nil {
		return m.Screensync
	}
	return false
}

func (m *DanmuWebPlayerConfig) GetSpeedsync() bool {
	if m != nil {
		return m.Speedsync
	}
	return false
}

func (m *DanmuWebPlayerConfig) GetFontfamily() string {
	if m != nil {
		return m.Fontfamily
	}
	return ""
}

func (m *DanmuWebPlayerConfig) GetBold() bool {
	if m != nil {
		return m.Bold
	}
	return false
}

func (m *DanmuWebPlayerConfig) GetFontborder() int32 {
	if m != nil {
		return m.Fontborder
	}
	return 0
}

func (m *DanmuWebPlayerConfig) GetDrawType() string {
	if m != nil {
		return m.DrawType
	}
	return ""
}

func (m *DanmuWebPlayerConfig) GetSeniorModeSwitch() int32 {
	if m != nil {
		return m.SeniorModeSwitch
	}
	return 0
}

func (m *DanmuWebPlayerConfig) GetAiLevelV2() int32 {
	if m != nil {
		return m.AiLevelV2
	}
	return 0
}

func (m *DanmuWebPlayerConfig) GetAiLevelV2Map() map[int32]int32 {
	if m != nil {
		return m.AiLevelV2Map
	}
	return nil
}

//
type DmExpoReportReq struct {
	//
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	//
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	//
	Spmid                string   `protobuf:"bytes,4,opt,name=spmid,proto3" json:"spmid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmExpoReportReq) Reset()         { *m = DmExpoReportReq{} }
func (m *DmExpoReportReq) String() string { return proto.CompactTextString(m) }
func (*DmExpoReportReq) ProtoMessage()    {}
func (*DmExpoReportReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{17}
}

func (m *DmExpoReportReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmExpoReportReq.Unmarshal(m, b)
}
func (m *DmExpoReportReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmExpoReportReq.Marshal(b, m, deterministic)
}
func (m *DmExpoReportReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmExpoReportReq.Merge(m, src)
}
func (m *DmExpoReportReq) XXX_Size() int {
	return xxx_messageInfo_DmExpoReportReq.Size(m)
}
func (m *DmExpoReportReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DmExpoReportReq.DiscardUnknown(m)
}

var xxx_messageInfo_DmExpoReportReq proto.InternalMessageInfo

func (m *DmExpoReportReq) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *DmExpoReportReq) GetOid() int64 {
	if m != nil {
		return m.Oid
	}
	return 0
}

func (m *DmExpoReportReq) GetSpmid() string {
	if m != nil {
		return m.Spmid
	}
	return ""
}

//
type DmExpoReportRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmExpoReportRes) Reset()         { *m = DmExpoReportRes{} }
func (m *DmExpoReportRes) String() string { return proto.CompactTextString(m) }
func (*DmExpoReportRes) ProtoMessage()    {}
func (*DmExpoReportRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{18}
}

func (m *DmExpoReportRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmExpoReportRes.Unmarshal(m, b)
}
func (m *DmExpoReportRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmExpoReportRes.Marshal(b, m, deterministic)
}
func (m *DmExpoReportRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmExpoReportRes.Merge(m, src)
}
func (m *DmExpoReportRes) XXX_Size() int {
	return xxx_messageInfo_DmExpoReportRes.Size(m)
}
func (m *DmExpoReportRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DmExpoReportRes.DiscardUnknown(m)
}

var xxx_messageInfo_DmExpoReportRes proto.InternalMessageInfo

// 修改弹幕配置-请求
type DmPlayerConfigReq struct {
	Ts                        int64                              `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	Switch                    *PlayerDanmakuSwitch               `protobuf:"bytes,2,opt,name=switch,proto3" json:"switch,omitempty"`
	SwitchSave                *PlayerDanmakuSwitchSave           `protobuf:"bytes,3,opt,name=switch_save,json=switchSave,proto3" json:"switch_save,omitempty"`
	UseDefaultConfig          *PlayerDanmakuUseDefaultConfig     `protobuf:"bytes,4,opt,name=use_default_config,json=useDefaultConfig,proto3" json:"use_default_config,omitempty"`
	AiRecommendedSwitch       *PlayerDanmakuAiRecommendedSwitch  `protobuf:"bytes,5,opt,name=ai_recommended_switch,json=aiRecommendedSwitch,proto3" json:"ai_recommended_switch,omitempty"`
	AiRecommendedLevel        *PlayerDanmakuAiRecommendedLevel   `protobuf:"bytes,6,opt,name=ai_recommended_level,json=aiRecommendedLevel,proto3" json:"ai_recommended_level,omitempty"`
	Blocktop                  *PlayerDanmakuBlocktop             `protobuf:"bytes,7,opt,name=blocktop,proto3" json:"blocktop,omitempty"`
	Blockscroll               *PlayerDanmakuBlockscroll          `protobuf:"bytes,8,opt,name=blockscroll,proto3" json:"blockscroll,omitempty"`
	Blockbottom               *PlayerDanmakuBlockbottom          `protobuf:"bytes,9,opt,name=blockbottom,proto3" json:"blockbottom,omitempty"`
	Blockcolorful             *PlayerDanmakuBlockcolorful        `protobuf:"bytes,10,opt,name=blockcolorful,proto3" json:"blockcolorful,omitempty"`
	Blockrepeat               *PlayerDanmakuBlockrepeat          `protobuf:"bytes,11,opt,name=blockrepeat,proto3" json:"blockrepeat,omitempty"`
	Blockspecial              *PlayerDanmakuBlockspecial         `protobuf:"bytes,12,opt,name=blockspecial,proto3" json:"blockspecial,omitempty"`
	Opacity                   *PlayerDanmakuOpacity              `protobuf:"bytes,13,opt,name=opacity,proto3" json:"opacity,omitempty"`
	Scalingfactor             *PlayerDanmakuScalingfactor        `protobuf:"bytes,14,opt,name=scalingfactor,proto3" json:"scalingfactor,omitempty"`
	Domain                    *PlayerDanmakuDomain               `protobuf:"bytes,15,opt,name=domain,proto3" json:"domain,omitempty"`
	Speed                     *PlayerDanmakuSpeed                `protobuf:"bytes,16,opt,name=speed,proto3" json:"speed,omitempty"`
	Enableblocklist           *PlayerDanmakuEnableblocklist      `protobuf:"bytes,17,opt,name=enableblocklist,proto3" json:"enableblocklist,omitempty"`
	InlinePlayerDanmakuSwitch *InlinePlayerDanmakuSwitch         `protobuf:"bytes,18,opt,name=inlinePlayerDanmakuSwitch,proto3" json:"inlinePlayerDanmakuSwitch,omitempty"`
	SeniorModeSwitch          *PlayerDanmakuSeniorModeSwitch     `protobuf:"bytes,19,opt,name=senior_mode_switch,json=seniorModeSwitch,proto3" json:"senior_mode_switch,omitempty"`
	AiRecommendedLevelV2      *PlayerDanmakuAiRecommendedLevelV2 `protobuf:"bytes,20,opt,name=ai_recommended_level_v2,json=aiRecommendedLevelV2,proto3" json:"ai_recommended_level_v2,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                           `json:"-"`
	XXX_unrecognized          []byte                             `json:"-"`
	XXX_sizecache             int32                              `json:"-"`
}

func (m *DmPlayerConfigReq) Reset()         { *m = DmPlayerConfigReq{} }
func (m *DmPlayerConfigReq) String() string { return proto.CompactTextString(m) }
func (*DmPlayerConfigReq) ProtoMessage()    {}
func (*DmPlayerConfigReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{19}
}

func (m *DmPlayerConfigReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmPlayerConfigReq.Unmarshal(m, b)
}
func (m *DmPlayerConfigReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmPlayerConfigReq.Marshal(b, m, deterministic)
}
func (m *DmPlayerConfigReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmPlayerConfigReq.Merge(m, src)
}
func (m *DmPlayerConfigReq) XXX_Size() int {
	return xxx_messageInfo_DmPlayerConfigReq.Size(m)
}
func (m *DmPlayerConfigReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DmPlayerConfigReq.DiscardUnknown(m)
}

var xxx_messageInfo_DmPlayerConfigReq proto.InternalMessageInfo

func (m *DmPlayerConfigReq) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *DmPlayerConfigReq) GetSwitch() *PlayerDanmakuSwitch {
	if m != nil {
		return m.Switch
	}
	return nil
}

func (m *DmPlayerConfigReq) GetSwitchSave() *PlayerDanmakuSwitchSave {
	if m != nil {
		return m.SwitchSave
	}
	return nil
}

func (m *DmPlayerConfigReq) GetUseDefaultConfig() *PlayerDanmakuUseDefaultConfig {
	if m != nil {
		return m.UseDefaultConfig
	}
	return nil
}

func (m *DmPlayerConfigReq) GetAiRecommendedSwitch() *PlayerDanmakuAiRecommendedSwitch {
	if m != nil {
		return m.AiRecommendedSwitch
	}
	return nil
}

func (m *DmPlayerConfigReq) GetAiRecommendedLevel() *PlayerDanmakuAiRecommendedLevel {
	if m != nil {
		return m.AiRecommendedLevel
	}
	return nil
}

func (m *DmPlayerConfigReq) GetBlocktop() *PlayerDanmakuBlocktop {
	if m != nil {
		return m.Blocktop
	}
	return nil
}

func (m *DmPlayerConfigReq) GetBlockscroll() *PlayerDanmakuBlockscroll {
	if m != nil {
		return m.Blockscroll
	}
	return nil
}

func (m *DmPlayerConfigReq) GetBlockbottom() *PlayerDanmakuBlockbottom {
	if m != nil {
		return m.Blockbottom
	}
	return nil
}

func (m *DmPlayerConfigReq) GetBlockcolorful() *PlayerDanmakuBlockcolorful {
	if m != nil {
		return m.Blockcolorful
	}
	return nil
}

func (m *DmPlayerConfigReq) GetBlockrepeat() *PlayerDanmakuBlockrepeat {
	if m != nil {
		return m.Blockrepeat
	}
	return nil
}

func (m *DmPlayerConfigReq) GetBlockspecial() *PlayerDanmakuBlockspecial {
	if m != nil {
		return m.Blockspecial
	}
	return nil
}

func (m *DmPlayerConfigReq) GetOpacity() *PlayerDanmakuOpacity {
	if m != nil {
		return m.Opacity
	}
	return nil
}

func (m *DmPlayerConfigReq) GetScalingfactor() *PlayerDanmakuScalingfactor {
	if m != nil {
		return m.Scalingfactor
	}
	return nil
}

func (m *DmPlayerConfigReq) GetDomain() *PlayerDanmakuDomain {
	if m != nil {
		return m.Domain
	}
	return nil
}

func (m *DmPlayerConfigReq) GetSpeed() *PlayerDanmakuSpeed {
	if m != nil {
		return m.Speed
	}
	return nil
}

func (m *DmPlayerConfigReq) GetEnableblocklist() *PlayerDanmakuEnableblocklist {
	if m != nil {
		return m.Enableblocklist
	}
	return nil
}

func (m *DmPlayerConfigReq) GetInlinePlayerDanmakuSwitch() *InlinePlayerDanmakuSwitch {
	if m != nil {
		return m.InlinePlayerDanmakuSwitch
	}
	return nil
}

func (m *DmPlayerConfigReq) GetSeniorModeSwitch() *PlayerDanmakuSeniorModeSwitch {
	if m != nil {
		return m.SeniorModeSwitch
	}
	return nil
}

func (m *DmPlayerConfigReq) GetAiRecommendedLevelV2() *PlayerDanmakuAiRecommendedLevelV2 {
	if m != nil {
		return m.AiRecommendedLevelV2
	}
	return nil
}

//
type DmSegConfig struct {
	//
	PageSize int64 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	//
	Total                int64    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmSegConfig) Reset()         { *m = DmSegConfig{} }
func (m *DmSegConfig) String() string { return proto.CompactTextString(m) }
func (*DmSegConfig) ProtoMessage()    {}
func (*DmSegConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{20}
}

func (m *DmSegConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmSegConfig.Unmarshal(m, b)
}
func (m *DmSegConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmSegConfig.Marshal(b, m, deterministic)
}
func (m *DmSegConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmSegConfig.Merge(m, src)
}
func (m *DmSegConfig) XXX_Size() int {
	return xxx_messageInfo_DmSegConfig.Size(m)
}
func (m *DmSegConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DmSegConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DmSegConfig proto.InternalMessageInfo

func (m *DmSegConfig) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *DmSegConfig) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

// 获取弹幕-响应
type DmSegMobileReply struct {
	// 弹幕列表
	Elems []*DanmakuElem `protobuf:"bytes,1,rep,name=elems,proto3" json:"elems,omitempty"`
	// 是否已关闭弹幕
	// 0:未关闭 1:已关闭
	State int32 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	// 弹幕云屏蔽ai评分值
	AiFlag               *DanmakuAIFlag `protobuf:"bytes,3,opt,name=ai_flag,json=aiFlag,proto3" json:"ai_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DmSegMobileReply) Reset()         { *m = DmSegMobileReply{} }
func (m *DmSegMobileReply) String() string { return proto.CompactTextString(m) }
func (*DmSegMobileReply) ProtoMessage()    {}
func (*DmSegMobileReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{21}
}

func (m *DmSegMobileReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmSegMobileReply.Unmarshal(m, b)
}
func (m *DmSegMobileReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmSegMobileReply.Marshal(b, m, deterministic)
}
func (m *DmSegMobileReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmSegMobileReply.Merge(m, src)
}
func (m *DmSegMobileReply) XXX_Size() int {
	return xxx_messageInfo_DmSegMobileReply.Size(m)
}
func (m *DmSegMobileReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DmSegMobileReply.DiscardUnknown(m)
}

var xxx_messageInfo_DmSegMobileReply proto.InternalMessageInfo

func (m *DmSegMobileReply) GetElems() []*DanmakuElem {
	if m != nil {
		return m.Elems
	}
	return nil
}

func (m *DmSegMobileReply) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *DmSegMobileReply) GetAiFlag() *DanmakuAIFlag {
	if m != nil {
		return m.AiFlag
	}
	return nil
}

// 获取弹幕-请求
type DmSegMobileReq struct {
	// 稿件avid/漫画epid
	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// 视频cid/漫画cid
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 弹幕类型
	// 1:视频 2:漫画
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// 分段(6min)
	SegmentIndex int64 `protobuf:"varint,4,opt,name=segment_index,json=segmentIndex,proto3" json:"segment_index,omitempty"`
	// 是否青少年模式
	TeenagersMode int32 `protobuf:"varint,5,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
	//
	Ps int64 `protobuf:"varint,6,opt,name=ps,proto3" json:"ps,omitempty"`
	//
	Pe int64 `protobuf:"varint,7,opt,name=pe,proto3" json:"pe,omitempty"`
	//
	PullMode int32 `protobuf:"varint,8,opt,name=pull_mode,json=pullMode,proto3" json:"pull_mode,omitempty"`
	//
	FromScene            int32    `protobuf:"varint,9,opt,name=from_scene,json=fromScene,proto3" json:"from_scene,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmSegMobileReq) Reset()         { *m = DmSegMobileReq{} }
func (m *DmSegMobileReq) String() string { return proto.CompactTextString(m) }
func (*DmSegMobileReq) ProtoMessage()    {}
func (*DmSegMobileReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{22}
}

func (m *DmSegMobileReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmSegMobileReq.Unmarshal(m, b)
}
func (m *DmSegMobileReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmSegMobileReq.Marshal(b, m, deterministic)
}
func (m *DmSegMobileReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmSegMobileReq.Merge(m, src)
}
func (m *DmSegMobileReq) XXX_Size() int {
	return xxx_messageInfo_DmSegMobileReq.Size(m)
}
func (m *DmSegMobileReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DmSegMobileReq.DiscardUnknown(m)
}

var xxx_messageInfo_DmSegMobileReq proto.InternalMessageInfo

func (m *DmSegMobileReq) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *DmSegMobileReq) GetOid() int64 {
	if m != nil {
		return m.Oid
	}
	return 0
}

func (m *DmSegMobileReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *DmSegMobileReq) GetSegmentIndex() int64 {
	if m != nil {
		return m.SegmentIndex
	}
	return 0
}

func (m *DmSegMobileReq) GetTeenagersMode() int32 {
	if m != nil {
		return m.TeenagersMode
	}
	return 0
}

func (m *DmSegMobileReq) GetPs() int64 {
	if m != nil {
		return m.Ps
	}
	return 0
}

func (m *DmSegMobileReq) GetPe() int64 {
	if m != nil {
		return m.Pe
	}
	return 0
}

func (m *DmSegMobileReq) GetPullMode() int32 {
	if m != nil {
		return m.PullMode
	}
	return 0
}

func (m *DmSegMobileReq) GetFromScene() int32 {
	if m != nil {
		return m.FromScene
	}
	return 0
}

// ott弹幕列表-响应
type DmSegOttReply struct {
	// 是否已关闭弹幕
	// 0:未关闭 1:已关闭
	Closed bool `protobuf:"varint,1,opt,name=closed,proto3" json:"closed,omitempty"`
	// 弹幕列表
	Elems                []*DanmakuElem `protobuf:"bytes,2,rep,name=elems,proto3" json:"elems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DmSegOttReply) Reset()         { *m = DmSegOttReply{} }
func (m *DmSegOttReply) String() string { return proto.CompactTextString(m) }
func (*DmSegOttReply) ProtoMessage()    {}
func (*DmSegOttReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{23}
}

func (m *DmSegOttReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmSegOttReply.Unmarshal(m, b)
}
func (m *DmSegOttReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmSegOttReply.Marshal(b, m, deterministic)
}
func (m *DmSegOttReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmSegOttReply.Merge(m, src)
}
func (m *DmSegOttReply) XXX_Size() int {
	return xxx_messageInfo_DmSegOttReply.Size(m)
}
func (m *DmSegOttReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DmSegOttReply.DiscardUnknown(m)
}

var xxx_messageInfo_DmSegOttReply proto.InternalMessageInfo

func (m *DmSegOttReply) GetClosed() bool {
	if m != nil {
		return m.Closed
	}
	return false
}

func (m *DmSegOttReply) GetElems() []*DanmakuElem {
	if m != nil {
		return m.Elems
	}
	return nil
}

// ott弹幕列表-请求
type DmSegOttReq struct {
	// 稿件avid/漫画epid
	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// 视频cid/漫画cid
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 弹幕类型
	// 1:视频 2:漫画
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// 分段(6min)
	SegmentIndex         int64    `protobuf:"varint,4,opt,name=segment_index,json=segmentIndex,proto3" json:"segment_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmSegOttReq) Reset()         { *m = DmSegOttReq{} }
func (m *DmSegOttReq) String() string { return proto.CompactTextString(m) }
func (*DmSegOttReq) ProtoMessage()    {}
func (*DmSegOttReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{24}
}

func (m *DmSegOttReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmSegOttReq.Unmarshal(m, b)
}
func (m *DmSegOttReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmSegOttReq.Marshal(b, m, deterministic)
}
func (m *DmSegOttReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmSegOttReq.Merge(m, src)
}
func (m *DmSegOttReq) XXX_Size() int {
	return xxx_messageInfo_DmSegOttReq.Size(m)
}
func (m *DmSegOttReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DmSegOttReq.DiscardUnknown(m)
}

var xxx_messageInfo_DmSegOttReq proto.InternalMessageInfo

func (m *DmSegOttReq) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *DmSegOttReq) GetOid() int64 {
	if m != nil {
		return m.Oid
	}
	return 0
}

func (m *DmSegOttReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *DmSegOttReq) GetSegmentIndex() int64 {
	if m != nil {
		return m.SegmentIndex
	}
	return 0
}

// 弹幕SDK-响应
type DmSegSDKReply struct {
	// 是否已关闭弹幕
	// 0:未关闭 1:已关闭
	Closed bool `protobuf:"varint,1,opt,name=closed,proto3" json:"closed,omitempty"`
	// 弹幕列表
	Elems                []*DanmakuElem `protobuf:"bytes,2,rep,name=elems,proto3" json:"elems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DmSegSDKReply) Reset()         { *m = DmSegSDKReply{} }
func (m *DmSegSDKReply) String() string { return proto.CompactTextString(m) }
func (*DmSegSDKReply) ProtoMessage()    {}
func (*DmSegSDKReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{25}
}

func (m *DmSegSDKReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmSegSDKReply.Unmarshal(m, b)
}
func (m *DmSegSDKReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmSegSDKReply.Marshal(b, m, deterministic)
}
func (m *DmSegSDKReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmSegSDKReply.Merge(m, src)
}
func (m *DmSegSDKReply) XXX_Size() int {
	return xxx_messageInfo_DmSegSDKReply.Size(m)
}
func (m *DmSegSDKReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DmSegSDKReply.DiscardUnknown(m)
}

var xxx_messageInfo_DmSegSDKReply proto.InternalMessageInfo

func (m *DmSegSDKReply) GetClosed() bool {
	if m != nil {
		return m.Closed
	}
	return false
}

func (m *DmSegSDKReply) GetElems() []*DanmakuElem {
	if m != nil {
		return m.Elems
	}
	return nil
}

// 弹幕SDK-请求
type DmSegSDKReq struct {
	// 稿件avid/漫画epid
	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// 视频cid/漫画cid
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 弹幕类型
	// 1:视频 2:漫画
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// 分段(6min)
	SegmentIndex         int64    `protobuf:"varint,4,opt,name=segment_index,json=segmentIndex,proto3" json:"segment_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmSegSDKReq) Reset()         { *m = DmSegSDKReq{} }
func (m *DmSegSDKReq) String() string { return proto.CompactTextString(m) }
func (*DmSegSDKReq) ProtoMessage()    {}
func (*DmSegSDKReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{26}
}

func (m *DmSegSDKReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmSegSDKReq.Unmarshal(m, b)
}
func (m *DmSegSDKReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmSegSDKReq.Marshal(b, m, deterministic)
}
func (m *DmSegSDKReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmSegSDKReq.Merge(m, src)
}
func (m *DmSegSDKReq) XXX_Size() int {
	return xxx_messageInfo_DmSegSDKReq.Size(m)
}
func (m *DmSegSDKReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DmSegSDKReq.DiscardUnknown(m)
}

var xxx_messageInfo_DmSegSDKReq proto.InternalMessageInfo

func (m *DmSegSDKReq) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *DmSegSDKReq) GetOid() int64 {
	if m != nil {
		return m.Oid
	}
	return 0
}

func (m *DmSegSDKReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *DmSegSDKReq) GetSegmentIndex() int64 {
	if m != nil {
		return m.SegmentIndex
	}
	return 0
}

// 客户端弹幕元数据-响应
type DmViewReply struct {
	// 是否已关闭弹幕
	// 0:未关闭 1:已关闭
	Closed bool `protobuf:"varint,1,opt,name=closed,proto3" json:"closed,omitempty"`
	// 智能防挡弹幕蒙版信息
	Mask *VideoMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	// 视频字幕
	Subtitle *VideoSubtitle `protobuf:"bytes,3,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 高级弹幕专包url(bfs)
	SpecialDms []string `protobuf:"bytes,4,rep,name=special_dms,json=specialDms,proto3" json:"special_dms,omitempty"`
	// 云屏蔽配置信息
	AiFlag *DanmakuFlagConfig `protobuf:"bytes,5,opt,name=ai_flag,json=aiFlag,proto3" json:"ai_flag,omitempty"`
	// 弹幕配置信息
	PlayerConfig *DanmuPlayerViewConfig `protobuf:"bytes,6,opt,name=player_config,json=playerConfig,proto3" json:"player_config,omitempty"`
	// 弹幕发送框样式
	SendBoxStyle int32 `protobuf:"varint,7,opt,name=send_box_style,json=sendBoxStyle,proto3" json:"send_box_style,omitempty"`
	// 是否允许
	Allow bool `protobuf:"varint,8,opt,name=allow,proto3" json:"allow,omitempty"`
	// check box 是否展示
	CheckBox string `protobuf:"bytes,9,opt,name=check_box,json=checkBox,proto3" json:"check_box,omitempty"`
	// check box 展示文本
	CheckBoxShowMsg string `protobuf:"bytes,10,opt,name=check_box_show_msg,json=checkBoxShowMsg,proto3" json:"check_box_show_msg,omitempty"`
	// 展示文案
	TextPlaceholder string `protobuf:"bytes,11,opt,name=text_placeholder,json=textPlaceholder,proto3" json:"text_placeholder,omitempty"`
	// 弹幕输入框文案
	InputPlaceholder string `protobuf:"bytes,12,opt,name=input_placeholder,json=inputPlaceholder,proto3" json:"input_placeholder,omitempty"`
	// 用户举报弹幕 cid维度屏蔽的正则规则
	ReportFilterContent []string `protobuf:"bytes,13,rep,name=report_filter_content,json=reportFilterContent,proto3" json:"report_filter_content,omitempty"`
	//
	ExpoReport *ExpoReport `protobuf:"bytes,14,opt,name=expo_report,json=expoReport,proto3" json:"expo_report,omitempty"`
	//
	BuzzwordConfig *BuzzwordConfig `protobuf:"bytes,15,opt,name=buzzword_config,json=buzzwordConfig,proto3" json:"buzzword_config,omitempty"`
	//
	Expressions []*Expressions `protobuf:"bytes,16,rep,name=expressions,proto3" json:"expressions,omitempty"`
	//
	PostPanel []*PostPanel `protobuf:"bytes,17,rep,name=post_panel,json=postPanel,proto3" json:"post_panel,omitempty"`
	//
	ActivityMeta         []string `protobuf:"bytes,18,rep,name=activity_meta,json=activityMeta,proto3" json:"activity_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmViewReply) Reset()         { *m = DmViewReply{} }
func (m *DmViewReply) String() string { return proto.CompactTextString(m) }
func (*DmViewReply) ProtoMessage()    {}
func (*DmViewReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{27}
}

func (m *DmViewReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmViewReply.Unmarshal(m, b)
}
func (m *DmViewReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmViewReply.Marshal(b, m, deterministic)
}
func (m *DmViewReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmViewReply.Merge(m, src)
}
func (m *DmViewReply) XXX_Size() int {
	return xxx_messageInfo_DmViewReply.Size(m)
}
func (m *DmViewReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DmViewReply.DiscardUnknown(m)
}

var xxx_messageInfo_DmViewReply proto.InternalMessageInfo

func (m *DmViewReply) GetClosed() bool {
	if m != nil {
		return m.Closed
	}
	return false
}

func (m *DmViewReply) GetMask() *VideoMask {
	if m != nil {
		return m.Mask
	}
	return nil
}

func (m *DmViewReply) GetSubtitle() *VideoSubtitle {
	if m != nil {
		return m.Subtitle
	}
	return nil
}

func (m *DmViewReply) GetSpecialDms() []string {
	if m != nil {
		return m.SpecialDms
	}
	return nil
}

func (m *DmViewReply) GetAiFlag() *DanmakuFlagConfig {
	if m != nil {
		return m.AiFlag
	}
	return nil
}

func (m *DmViewReply) GetPlayerConfig() *DanmuPlayerViewConfig {
	if m != nil {
		return m.PlayerConfig
	}
	return nil
}

func (m *DmViewReply) GetSendBoxStyle() int32 {
	if m != nil {
		return m.SendBoxStyle
	}
	return 0
}

func (m *DmViewReply) GetAllow() bool {
	if m != nil {
		return m.Allow
	}
	return false
}

func (m *DmViewReply) GetCheckBox() string {
	if m != nil {
		return m.CheckBox
	}
	return ""
}

func (m *DmViewReply) GetCheckBoxShowMsg() string {
	if m != nil {
		return m.CheckBoxShowMsg
	}
	return ""
}

func (m *DmViewReply) GetTextPlaceholder() string {
	if m != nil {
		return m.TextPlaceholder
	}
	return ""
}

func (m *DmViewReply) GetInputPlaceholder() string {
	if m != nil {
		return m.InputPlaceholder
	}
	return ""
}

func (m *DmViewReply) GetReportFilterContent() []string {
	if m != nil {
		return m.ReportFilterContent
	}
	return nil
}

func (m *DmViewReply) GetExpoReport() *ExpoReport {
	if m != nil {
		return m.ExpoReport
	}
	return nil
}

func (m *DmViewReply) GetBuzzwordConfig() *BuzzwordConfig {
	if m != nil {
		return m.BuzzwordConfig
	}
	return nil
}

func (m *DmViewReply) GetExpressions() []*Expressions {
	if m != nil {
		return m.Expressions
	}
	return nil
}

func (m *DmViewReply) GetPostPanel() []*PostPanel {
	if m != nil {
		return m.PostPanel
	}
	return nil
}

func (m *DmViewReply) GetActivityMeta() []string {
	if m != nil {
		return m.ActivityMeta
	}
	return nil
}

// 客户端弹幕元数据-请求
type DmViewReq struct {
	// 稿件avid/漫画epid
	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// 视频cid/漫画cid
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 弹幕类型
	// 1:视频 2:漫画
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// 页面spm
	Spmid string `protobuf:"bytes,4,opt,name=spmid,proto3" json:"spmid,omitempty"`
	// 是否冷启
	IsHardBoot           int32    `protobuf:"varint,5,opt,name=is_hard_boot,json=isHardBoot,proto3" json:"is_hard_boot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmViewReq) Reset()         { *m = DmViewReq{} }
func (m *DmViewReq) String() string { return proto.CompactTextString(m) }
func (*DmViewReq) ProtoMessage()    {}
func (*DmViewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{28}
}

func (m *DmViewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmViewReq.Unmarshal(m, b)
}
func (m *DmViewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmViewReq.Marshal(b, m, deterministic)
}
func (m *DmViewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmViewReq.Merge(m, src)
}
func (m *DmViewReq) XXX_Size() int {
	return xxx_messageInfo_DmViewReq.Size(m)
}
func (m *DmViewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DmViewReq.DiscardUnknown(m)
}

var xxx_messageInfo_DmViewReq proto.InternalMessageInfo

func (m *DmViewReq) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *DmViewReq) GetOid() int64 {
	if m != nil {
		return m.Oid
	}
	return 0
}

func (m *DmViewReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *DmViewReq) GetSpmid() string {
	if m != nil {
		return m.Spmid
	}
	return ""
}

func (m *DmViewReq) GetIsHardBoot() int32 {
	if m != nil {
		return m.IsHardBoot
	}
	return 0
}

// web端弹幕元数据-响应
type DmWebViewReply struct {
	// 是否已关闭弹幕
	// 0:未关闭 1:已关闭
	State int32 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	//
	Text string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	//
	TextSide string `protobuf:"bytes,3,opt,name=text_side,json=textSide,proto3" json:"text_side,omitempty"`
	// 分段弹幕配置
	DmSge *DmSegConfig `protobuf:"bytes,4,opt,name=dm_sge,json=dmSge,proto3" json:"dm_sge,omitempty"`
	// 云屏蔽配置信息
	Flag *DanmakuFlagConfig `protobuf:"bytes,5,opt,name=flag,proto3" json:"flag,omitempty"`
	// 高级弹幕专包url(bfs)
	SpecialDms []string `protobuf:"bytes,6,rep,name=special_dms,json=specialDms,proto3" json:"special_dms,omitempty"`
	// check box 是否展示
	CheckBox bool `protobuf:"varint,7,opt,name=check_box,json=checkBox,proto3" json:"check_box,omitempty"`
	// 弹幕数
	Count int64 `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`
	// 互动弹幕
	CommandDms []*CommandDm `protobuf:"bytes,9,rep,name=commandDms,proto3" json:"commandDms,omitempty"`
	// 用户弹幕配置
	PlayerConfig *DanmuWebPlayerConfig `protobuf:"bytes,10,opt,name=player_config,json=playerConfig,proto3" json:"player_config,omitempty"`
	// 用户举报弹幕 cid维度屏蔽
	ReportFilterContent []string `protobuf:"bytes,11,rep,name=report_filter_content,json=reportFilterContent,proto3" json:"report_filter_content,omitempty"`
	//
	Expressions []*Expressions `protobuf:"bytes,12,rep,name=expressions,proto3" json:"expressions,omitempty"`
	//
	PostPanel []*PostPanel `protobuf:"bytes,13,rep,name=post_panel,json=postPanel,proto3" json:"post_panel,omitempty"`
	//
	ActivityMeta         []string `protobuf:"bytes,14,rep,name=activity_meta,json=activityMeta,proto3" json:"activity_meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmWebViewReply) Reset()         { *m = DmWebViewReply{} }
func (m *DmWebViewReply) String() string { return proto.CompactTextString(m) }
func (*DmWebViewReply) ProtoMessage()    {}
func (*DmWebViewReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{29}
}

func (m *DmWebViewReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmWebViewReply.Unmarshal(m, b)
}
func (m *DmWebViewReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmWebViewReply.Marshal(b, m, deterministic)
}
func (m *DmWebViewReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmWebViewReply.Merge(m, src)
}
func (m *DmWebViewReply) XXX_Size() int {
	return xxx_messageInfo_DmWebViewReply.Size(m)
}
func (m *DmWebViewReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DmWebViewReply.DiscardUnknown(m)
}

var xxx_messageInfo_DmWebViewReply proto.InternalMessageInfo

func (m *DmWebViewReply) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *DmWebViewReply) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *DmWebViewReply) GetTextSide() string {
	if m != nil {
		return m.TextSide
	}
	return ""
}

func (m *DmWebViewReply) GetDmSge() *DmSegConfig {
	if m != nil {
		return m.DmSge
	}
	return nil
}

func (m *DmWebViewReply) GetFlag() *DanmakuFlagConfig {
	if m != nil {
		return m.Flag
	}
	return nil
}

func (m *DmWebViewReply) GetSpecialDms() []string {
	if m != nil {
		return m.SpecialDms
	}
	return nil
}

func (m *DmWebViewReply) GetCheckBox() bool {
	if m != nil {
		return m.CheckBox
	}
	return false
}

func (m *DmWebViewReply) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *DmWebViewReply) GetCommandDms() []*CommandDm {
	if m != nil {
		return m.CommandDms
	}
	return nil
}

func (m *DmWebViewReply) GetPlayerConfig() *DanmuWebPlayerConfig {
	if m != nil {
		return m.PlayerConfig
	}
	return nil
}

func (m *DmWebViewReply) GetReportFilterContent() []string {
	if m != nil {
		return m.ReportFilterContent
	}
	return nil
}

func (m *DmWebViewReply) GetExpressions() []*Expressions {
	if m != nil {
		return m.Expressions
	}
	return nil
}

func (m *DmWebViewReply) GetPostPanel() []*PostPanel {
	if m != nil {
		return m.PostPanel
	}
	return nil
}

func (m *DmWebViewReply) GetActivityMeta() []string {
	if m != nil {
		return m.ActivityMeta
	}
	return nil
}

//
type ExpoReport struct {
	//
	ShouldReportAtEnd    bool     `protobuf:"varint,1,opt,name=should_report_at_end,json=shouldReportAtEnd,proto3" json:"should_report_at_end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExpoReport) Reset()         { *m = ExpoReport{} }
func (m *ExpoReport) String() string { return proto.CompactTextString(m) }
func (*ExpoReport) ProtoMessage()    {}
func (*ExpoReport) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{30}
}

func (m *ExpoReport) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpoReport.Unmarshal(m, b)
}
func (m *ExpoReport) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpoReport.Marshal(b, m, deterministic)
}
func (m *ExpoReport) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpoReport.Merge(m, src)
}
func (m *ExpoReport) XXX_Size() int {
	return xxx_messageInfo_ExpoReport.Size(m)
}
func (m *ExpoReport) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpoReport.DiscardUnknown(m)
}

var xxx_messageInfo_ExpoReport proto.InternalMessageInfo

func (m *ExpoReport) GetShouldReportAtEnd() bool {
	if m != nil {
		return m.ShouldReportAtEnd
	}
	return false
}

//
type Expression struct {
	//
	Keyword []string `protobuf:"bytes,1,rep,name=keyword,proto3" json:"keyword,omitempty"`
	//
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	//
	Period               []*Period `protobuf:"bytes,3,rep,name=period,proto3" json:"period,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Expression) Reset()         { *m = Expression{} }
func (m *Expression) String() string { return proto.CompactTextString(m) }
func (*Expression) ProtoMessage()    {}
func (*Expression) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{31}
}

func (m *Expression) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Expression.Unmarshal(m, b)
}
func (m *Expression) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Expression.Marshal(b, m, deterministic)
}
func (m *Expression) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Expression.Merge(m, src)
}
func (m *Expression) XXX_Size() int {
	return xxx_messageInfo_Expression.Size(m)
}
func (m *Expression) XXX_DiscardUnknown() {
	xxx_messageInfo_Expression.DiscardUnknown(m)
}

var xxx_messageInfo_Expression proto.InternalMessageInfo

func (m *Expression) GetKeyword() []string {
	if m != nil {
		return m.Keyword
	}
	return nil
}

func (m *Expression) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Expression) GetPeriod() []*Period {
	if m != nil {
		return m.Period
	}
	return nil
}

//
type Expressions struct {
	//
	Data                 []*Expression `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Expressions) Reset()         { *m = Expressions{} }
func (m *Expressions) String() string { return proto.CompactTextString(m) }
func (*Expressions) ProtoMessage()    {}
func (*Expressions) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{32}
}

func (m *Expressions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Expressions.Unmarshal(m, b)
}
func (m *Expressions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Expressions.Marshal(b, m, deterministic)
}
func (m *Expressions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Expressions.Merge(m, src)
}
func (m *Expressions) XXX_Size() int {
	return xxx_messageInfo_Expressions.Size(m)
}
func (m *Expressions) XXX_DiscardUnknown() {
	xxx_messageInfo_Expressions.DiscardUnknown(m)
}

var xxx_messageInfo_Expressions proto.InternalMessageInfo

func (m *Expressions) GetData() []*Expression {
	if m != nil {
		return m.Data
	}
	return nil
}

//
type Label struct {
	//
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	//
	Content              []string `protobuf:"bytes,2,rep,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Label) Reset()         { *m = Label{} }
func (m *Label) String() string { return proto.CompactTextString(m) }
func (*Label) ProtoMessage()    {}
func (*Label) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{33}
}

func (m *Label) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Label.Unmarshal(m, b)
}
func (m *Label) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Label.Marshal(b, m, deterministic)
}
func (m *Label) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Label.Merge(m, src)
}
func (m *Label) XXX_Size() int {
	return xxx_messageInfo_Label.Size(m)
}
func (m *Label) XXX_DiscardUnknown() {
	xxx_messageInfo_Label.DiscardUnknown(m)
}

var xxx_messageInfo_Label proto.InternalMessageInfo

func (m *Label) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Label) GetContent() []string {
	if m != nil {
		return m.Content
	}
	return nil
}

//
type Period struct {
	//
	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	//
	End                  int64    `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Period) Reset()         { *m = Period{} }
func (m *Period) String() string { return proto.CompactTextString(m) }
func (*Period) ProtoMessage()    {}
func (*Period) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{34}
}

func (m *Period) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Period.Unmarshal(m, b)
}
func (m *Period) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Period.Marshal(b, m, deterministic)
}
func (m *Period) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Period.Merge(m, src)
}
func (m *Period) XXX_Size() int {
	return xxx_messageInfo_Period.Size(m)
}
func (m *Period) XXX_DiscardUnknown() {
	xxx_messageInfo_Period.DiscardUnknown(m)
}

var xxx_messageInfo_Period proto.InternalMessageInfo

func (m *Period) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Period) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

// 是否开启弹幕
type InlinePlayerDanmakuSwitch struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InlinePlayerDanmakuSwitch) Reset()         { *m = InlinePlayerDanmakuSwitch{} }
func (m *InlinePlayerDanmakuSwitch) String() string { return proto.CompactTextString(m) }
func (*InlinePlayerDanmakuSwitch) ProtoMessage()    {}
func (*InlinePlayerDanmakuSwitch) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{35}
}

func (m *InlinePlayerDanmakuSwitch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InlinePlayerDanmakuSwitch.Unmarshal(m, b)
}
func (m *InlinePlayerDanmakuSwitch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InlinePlayerDanmakuSwitch.Marshal(b, m, deterministic)
}
func (m *InlinePlayerDanmakuSwitch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InlinePlayerDanmakuSwitch.Merge(m, src)
}
func (m *InlinePlayerDanmakuSwitch) XXX_Size() int {
	return xxx_messageInfo_InlinePlayerDanmakuSwitch.Size(m)
}
func (m *InlinePlayerDanmakuSwitch) XXX_DiscardUnknown() {
	xxx_messageInfo_InlinePlayerDanmakuSwitch.DiscardUnknown(m)
}

var xxx_messageInfo_InlinePlayerDanmakuSwitch proto.InternalMessageInfo

func (m *InlinePlayerDanmakuSwitch) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// 智能云屏蔽等级
type PlayerDanmakuAiRecommendedLevel struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuAiRecommendedLevel) Reset()         { *m = PlayerDanmakuAiRecommendedLevel{} }
func (m *PlayerDanmakuAiRecommendedLevel) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuAiRecommendedLevel) ProtoMessage()    {}
func (*PlayerDanmakuAiRecommendedLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{36}
}

func (m *PlayerDanmakuAiRecommendedLevel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuAiRecommendedLevel.Unmarshal(m, b)
}
func (m *PlayerDanmakuAiRecommendedLevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuAiRecommendedLevel.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuAiRecommendedLevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuAiRecommendedLevel.Merge(m, src)
}
func (m *PlayerDanmakuAiRecommendedLevel) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuAiRecommendedLevel.Size(m)
}
func (m *PlayerDanmakuAiRecommendedLevel) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuAiRecommendedLevel.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuAiRecommendedLevel proto.InternalMessageInfo

func (m *PlayerDanmakuAiRecommendedLevel) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

//
type PlayerDanmakuAiRecommendedLevelV2 struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuAiRecommendedLevelV2) Reset()         { *m = PlayerDanmakuAiRecommendedLevelV2{} }
func (m *PlayerDanmakuAiRecommendedLevelV2) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuAiRecommendedLevelV2) ProtoMessage()    {}
func (*PlayerDanmakuAiRecommendedLevelV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{37}
}

func (m *PlayerDanmakuAiRecommendedLevelV2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuAiRecommendedLevelV2.Unmarshal(m, b)
}
func (m *PlayerDanmakuAiRecommendedLevelV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuAiRecommendedLevelV2.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuAiRecommendedLevelV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuAiRecommendedLevelV2.Merge(m, src)
}
func (m *PlayerDanmakuAiRecommendedLevelV2) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuAiRecommendedLevelV2.Size(m)
}
func (m *PlayerDanmakuAiRecommendedLevelV2) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuAiRecommendedLevelV2.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuAiRecommendedLevelV2 proto.InternalMessageInfo

func (m *PlayerDanmakuAiRecommendedLevelV2) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// 是否开启智能云屏蔽
type PlayerDanmakuAiRecommendedSwitch struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuAiRecommendedSwitch) Reset()         { *m = PlayerDanmakuAiRecommendedSwitch{} }
func (m *PlayerDanmakuAiRecommendedSwitch) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuAiRecommendedSwitch) ProtoMessage()    {}
func (*PlayerDanmakuAiRecommendedSwitch) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{38}
}

func (m *PlayerDanmakuAiRecommendedSwitch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuAiRecommendedSwitch.Unmarshal(m, b)
}
func (m *PlayerDanmakuAiRecommendedSwitch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuAiRecommendedSwitch.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuAiRecommendedSwitch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuAiRecommendedSwitch.Merge(m, src)
}
func (m *PlayerDanmakuAiRecommendedSwitch) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuAiRecommendedSwitch.Size(m)
}
func (m *PlayerDanmakuAiRecommendedSwitch) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuAiRecommendedSwitch.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuAiRecommendedSwitch proto.InternalMessageInfo

func (m *PlayerDanmakuAiRecommendedSwitch) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// 是否屏蔽底端弹幕
type PlayerDanmakuBlockbottom struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuBlockbottom) Reset()         { *m = PlayerDanmakuBlockbottom{} }
func (m *PlayerDanmakuBlockbottom) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuBlockbottom) ProtoMessage()    {}
func (*PlayerDanmakuBlockbottom) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{39}
}

func (m *PlayerDanmakuBlockbottom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuBlockbottom.Unmarshal(m, b)
}
func (m *PlayerDanmakuBlockbottom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuBlockbottom.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuBlockbottom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuBlockbottom.Merge(m, src)
}
func (m *PlayerDanmakuBlockbottom) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuBlockbottom.Size(m)
}
func (m *PlayerDanmakuBlockbottom) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuBlockbottom.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuBlockbottom proto.InternalMessageInfo

func (m *PlayerDanmakuBlockbottom) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// 是否屏蔽彩色弹幕
type PlayerDanmakuBlockcolorful struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuBlockcolorful) Reset()         { *m = PlayerDanmakuBlockcolorful{} }
func (m *PlayerDanmakuBlockcolorful) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuBlockcolorful) ProtoMessage()    {}
func (*PlayerDanmakuBlockcolorful) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{40}
}

func (m *PlayerDanmakuBlockcolorful) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuBlockcolorful.Unmarshal(m, b)
}
func (m *PlayerDanmakuBlockcolorful) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuBlockcolorful.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuBlockcolorful) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuBlockcolorful.Merge(m, src)
}
func (m *PlayerDanmakuBlockcolorful) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuBlockcolorful.Size(m)
}
func (m *PlayerDanmakuBlockcolorful) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuBlockcolorful.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuBlockcolorful proto.InternalMessageInfo

func (m *PlayerDanmakuBlockcolorful) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// 是否屏蔽重复弹幕
type PlayerDanmakuBlockrepeat struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuBlockrepeat) Reset()         { *m = PlayerDanmakuBlockrepeat{} }
func (m *PlayerDanmakuBlockrepeat) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuBlockrepeat) ProtoMessage()    {}
func (*PlayerDanmakuBlockrepeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{41}
}

func (m *PlayerDanmakuBlockrepeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuBlockrepeat.Unmarshal(m, b)
}
func (m *PlayerDanmakuBlockrepeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuBlockrepeat.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuBlockrepeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuBlockrepeat.Merge(m, src)
}
func (m *PlayerDanmakuBlockrepeat) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuBlockrepeat.Size(m)
}
func (m *PlayerDanmakuBlockrepeat) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuBlockrepeat.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuBlockrepeat proto.InternalMessageInfo

func (m *PlayerDanmakuBlockrepeat) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// 是否屏蔽滚动弹幕
type PlayerDanmakuBlockscroll struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuBlockscroll) Reset()         { *m = PlayerDanmakuBlockscroll{} }
func (m *PlayerDanmakuBlockscroll) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuBlockscroll) ProtoMessage()    {}
func (*PlayerDanmakuBlockscroll) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{42}
}

func (m *PlayerDanmakuBlockscroll) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuBlockscroll.Unmarshal(m, b)
}
func (m *PlayerDanmakuBlockscroll) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuBlockscroll.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuBlockscroll) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuBlockscroll.Merge(m, src)
}
func (m *PlayerDanmakuBlockscroll) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuBlockscroll.Size(m)
}
func (m *PlayerDanmakuBlockscroll) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuBlockscroll.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuBlockscroll proto.InternalMessageInfo

func (m *PlayerDanmakuBlockscroll) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// 是否屏蔽高级弹幕
type PlayerDanmakuBlockspecial struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuBlockspecial) Reset()         { *m = PlayerDanmakuBlockspecial{} }
func (m *PlayerDanmakuBlockspecial) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuBlockspecial) ProtoMessage()    {}
func (*PlayerDanmakuBlockspecial) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{43}
}

func (m *PlayerDanmakuBlockspecial) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuBlockspecial.Unmarshal(m, b)
}
func (m *PlayerDanmakuBlockspecial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuBlockspecial.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuBlockspecial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuBlockspecial.Merge(m, src)
}
func (m *PlayerDanmakuBlockspecial) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuBlockspecial.Size(m)
}
func (m *PlayerDanmakuBlockspecial) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuBlockspecial.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuBlockspecial proto.InternalMessageInfo

func (m *PlayerDanmakuBlockspecial) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// 是否屏蔽顶端弹幕
type PlayerDanmakuBlocktop struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuBlocktop) Reset()         { *m = PlayerDanmakuBlocktop{} }
func (m *PlayerDanmakuBlocktop) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuBlocktop) ProtoMessage()    {}
func (*PlayerDanmakuBlocktop) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{44}
}

func (m *PlayerDanmakuBlocktop) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuBlocktop.Unmarshal(m, b)
}
func (m *PlayerDanmakuBlocktop) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuBlocktop.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuBlocktop) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuBlocktop.Merge(m, src)
}
func (m *PlayerDanmakuBlocktop) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuBlocktop.Size(m)
}
func (m *PlayerDanmakuBlocktop) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuBlocktop.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuBlocktop proto.InternalMessageInfo

func (m *PlayerDanmakuBlocktop) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// 弹幕显示区域
type PlayerDanmakuDomain struct {
	Value                float32  `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuDomain) Reset()         { *m = PlayerDanmakuDomain{} }
func (m *PlayerDanmakuDomain) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuDomain) ProtoMessage()    {}
func (*PlayerDanmakuDomain) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{45}
}

func (m *PlayerDanmakuDomain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuDomain.Unmarshal(m, b)
}
func (m *PlayerDanmakuDomain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuDomain.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuDomain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuDomain.Merge(m, src)
}
func (m *PlayerDanmakuDomain) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuDomain.Size(m)
}
func (m *PlayerDanmakuDomain) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuDomain.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuDomain proto.InternalMessageInfo

func (m *PlayerDanmakuDomain) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// 是否开启屏蔽列表
type PlayerDanmakuEnableblocklist struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuEnableblocklist) Reset()         { *m = PlayerDanmakuEnableblocklist{} }
func (m *PlayerDanmakuEnableblocklist) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuEnableblocklist) ProtoMessage()    {}
func (*PlayerDanmakuEnableblocklist) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{46}
}

func (m *PlayerDanmakuEnableblocklist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuEnableblocklist.Unmarshal(m, b)
}
func (m *PlayerDanmakuEnableblocklist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuEnableblocklist.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuEnableblocklist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuEnableblocklist.Merge(m, src)
}
func (m *PlayerDanmakuEnableblocklist) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuEnableblocklist.Size(m)
}
func (m *PlayerDanmakuEnableblocklist) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuEnableblocklist.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuEnableblocklist proto.InternalMessageInfo

func (m *PlayerDanmakuEnableblocklist) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// 弹幕不透明度
type PlayerDanmakuOpacity struct {
	Value                float32  `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuOpacity) Reset()         { *m = PlayerDanmakuOpacity{} }
func (m *PlayerDanmakuOpacity) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuOpacity) ProtoMessage()    {}
func (*PlayerDanmakuOpacity) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{47}
}

func (m *PlayerDanmakuOpacity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuOpacity.Unmarshal(m, b)
}
func (m *PlayerDanmakuOpacity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuOpacity.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuOpacity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuOpacity.Merge(m, src)
}
func (m *PlayerDanmakuOpacity) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuOpacity.Size(m)
}
func (m *PlayerDanmakuOpacity) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuOpacity.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuOpacity proto.InternalMessageInfo

func (m *PlayerDanmakuOpacity) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// 弹幕缩放比例
type PlayerDanmakuScalingfactor struct {
	Value                float32  `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuScalingfactor) Reset()         { *m = PlayerDanmakuScalingfactor{} }
func (m *PlayerDanmakuScalingfactor) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuScalingfactor) ProtoMessage()    {}
func (*PlayerDanmakuScalingfactor) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{48}
}

func (m *PlayerDanmakuScalingfactor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuScalingfactor.Unmarshal(m, b)
}
func (m *PlayerDanmakuScalingfactor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuScalingfactor.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuScalingfactor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuScalingfactor.Merge(m, src)
}
func (m *PlayerDanmakuScalingfactor) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuScalingfactor.Size(m)
}
func (m *PlayerDanmakuScalingfactor) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuScalingfactor.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuScalingfactor proto.InternalMessageInfo

func (m *PlayerDanmakuScalingfactor) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

//
type PlayerDanmakuSeniorModeSwitch struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuSeniorModeSwitch) Reset()         { *m = PlayerDanmakuSeniorModeSwitch{} }
func (m *PlayerDanmakuSeniorModeSwitch) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuSeniorModeSwitch) ProtoMessage()    {}
func (*PlayerDanmakuSeniorModeSwitch) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{49}
}

func (m *PlayerDanmakuSeniorModeSwitch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuSeniorModeSwitch.Unmarshal(m, b)
}
func (m *PlayerDanmakuSeniorModeSwitch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuSeniorModeSwitch.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuSeniorModeSwitch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuSeniorModeSwitch.Merge(m, src)
}
func (m *PlayerDanmakuSeniorModeSwitch) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuSeniorModeSwitch.Size(m)
}
func (m *PlayerDanmakuSeniorModeSwitch) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuSeniorModeSwitch.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuSeniorModeSwitch proto.InternalMessageInfo

func (m *PlayerDanmakuSeniorModeSwitch) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// 弹幕速度
type PlayerDanmakuSpeed struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuSpeed) Reset()         { *m = PlayerDanmakuSpeed{} }
func (m *PlayerDanmakuSpeed) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuSpeed) ProtoMessage()    {}
func (*PlayerDanmakuSpeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{50}
}

func (m *PlayerDanmakuSpeed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuSpeed.Unmarshal(m, b)
}
func (m *PlayerDanmakuSpeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuSpeed.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuSpeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuSpeed.Merge(m, src)
}
func (m *PlayerDanmakuSpeed) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuSpeed.Size(m)
}
func (m *PlayerDanmakuSpeed) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuSpeed.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuSpeed proto.InternalMessageInfo

func (m *PlayerDanmakuSpeed) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// 是否开启弹幕
type PlayerDanmakuSwitch struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	CanIgnore            bool     `protobuf:"varint,2,opt,name=canIgnore,proto3" json:"canIgnore,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuSwitch) Reset()         { *m = PlayerDanmakuSwitch{} }
func (m *PlayerDanmakuSwitch) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuSwitch) ProtoMessage()    {}
func (*PlayerDanmakuSwitch) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{51}
}

func (m *PlayerDanmakuSwitch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuSwitch.Unmarshal(m, b)
}
func (m *PlayerDanmakuSwitch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuSwitch.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuSwitch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuSwitch.Merge(m, src)
}
func (m *PlayerDanmakuSwitch) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuSwitch.Size(m)
}
func (m *PlayerDanmakuSwitch) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuSwitch.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuSwitch proto.InternalMessageInfo

func (m *PlayerDanmakuSwitch) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

func (m *PlayerDanmakuSwitch) GetCanIgnore() bool {
	if m != nil {
		return m.CanIgnore
	}
	return false
}

// 是否记录弹幕开关设置
type PlayerDanmakuSwitchSave struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuSwitchSave) Reset()         { *m = PlayerDanmakuSwitchSave{} }
func (m *PlayerDanmakuSwitchSave) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuSwitchSave) ProtoMessage()    {}
func (*PlayerDanmakuSwitchSave) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{52}
}

func (m *PlayerDanmakuSwitchSave) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuSwitchSave.Unmarshal(m, b)
}
func (m *PlayerDanmakuSwitchSave) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuSwitchSave.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuSwitchSave) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuSwitchSave.Merge(m, src)
}
func (m *PlayerDanmakuSwitchSave) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuSwitchSave.Size(m)
}
func (m *PlayerDanmakuSwitchSave) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuSwitchSave.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuSwitchSave proto.InternalMessageInfo

func (m *PlayerDanmakuSwitchSave) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

// 是否使用推荐弹幕设置
type PlayerDanmakuUseDefaultConfig struct {
	Value                bool     `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerDanmakuUseDefaultConfig) Reset()         { *m = PlayerDanmakuUseDefaultConfig{} }
func (m *PlayerDanmakuUseDefaultConfig) String() string { return proto.CompactTextString(m) }
func (*PlayerDanmakuUseDefaultConfig) ProtoMessage()    {}
func (*PlayerDanmakuUseDefaultConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{53}
}

func (m *PlayerDanmakuUseDefaultConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerDanmakuUseDefaultConfig.Unmarshal(m, b)
}
func (m *PlayerDanmakuUseDefaultConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerDanmakuUseDefaultConfig.Marshal(b, m, deterministic)
}
func (m *PlayerDanmakuUseDefaultConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerDanmakuUseDefaultConfig.Merge(m, src)
}
func (m *PlayerDanmakuUseDefaultConfig) XXX_Size() int {
	return xxx_messageInfo_PlayerDanmakuUseDefaultConfig.Size(m)
}
func (m *PlayerDanmakuUseDefaultConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerDanmakuUseDefaultConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerDanmakuUseDefaultConfig proto.InternalMessageInfo

func (m *PlayerDanmakuUseDefaultConfig) GetValue() bool {
	if m != nil {
		return m.Value
	}
	return false
}

//
type PostPanel struct {
	//
	Start int64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	//
	End int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	//
	Priority int64 `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	//
	BizId int64 `protobuf:"varint,4,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	//
	BizType PostPanelBizType `protobuf:"varint,5,opt,name=biz_type,json=bizType,proto3,enum=bilibili.community.service.dm.v1.PostPanelBizType" json:"biz_type,omitempty"`
	//
	ClickButton *ClickButton `protobuf:"bytes,6,opt,name=click_button,json=clickButton,proto3" json:"click_button,omitempty"`
	//
	TextInput *TextInput `protobuf:"bytes,7,opt,name=text_input,json=textInput,proto3" json:"text_input,omitempty"`
	//
	CheckBox *CheckBox `protobuf:"bytes,8,opt,name=check_box,json=checkBox,proto3" json:"check_box,omitempty"`
	//
	Toast                *Toast   `protobuf:"bytes,9,opt,name=toast,proto3" json:"toast,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PostPanel) Reset()         { *m = PostPanel{} }
func (m *PostPanel) String() string { return proto.CompactTextString(m) }
func (*PostPanel) ProtoMessage()    {}
func (*PostPanel) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{54}
}

func (m *PostPanel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostPanel.Unmarshal(m, b)
}
func (m *PostPanel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostPanel.Marshal(b, m, deterministic)
}
func (m *PostPanel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostPanel.Merge(m, src)
}
func (m *PostPanel) XXX_Size() int {
	return xxx_messageInfo_PostPanel.Size(m)
}
func (m *PostPanel) XXX_DiscardUnknown() {
	xxx_messageInfo_PostPanel.DiscardUnknown(m)
}

var xxx_messageInfo_PostPanel proto.InternalMessageInfo

func (m *PostPanel) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *PostPanel) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *PostPanel) GetPriority() int64 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *PostPanel) GetBizId() int64 {
	if m != nil {
		return m.BizId
	}
	return 0
}

func (m *PostPanel) GetBizType() PostPanelBizType {
	if m != nil {
		return m.BizType
	}
	return PostPanelBizType_PostPanelBizTypeNone
}

func (m *PostPanel) GetClickButton() *ClickButton {
	if m != nil {
		return m.ClickButton
	}
	return nil
}

func (m *PostPanel) GetTextInput() *TextInput {
	if m != nil {
		return m.TextInput
	}
	return nil
}

func (m *PostPanel) GetCheckBox() *CheckBox {
	if m != nil {
		return m.CheckBox
	}
	return nil
}

func (m *PostPanel) GetToast() *Toast {
	if m != nil {
		return m.Toast
	}
	return nil
}

// 修改弹幕配置-响应
type Response struct {
	//
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	//
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{55}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// 单个字幕信息
type SubtitleItem struct {
	// 字幕id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 字幕id str
	IdStr string `protobuf:"bytes,2,opt,name=id_str,json=idStr,proto3" json:"id_str,omitempty"`
	// 字幕语言代码
	Lan string `protobuf:"bytes,3,opt,name=lan,proto3" json:"lan,omitempty"`
	// 字幕语言
	LanDoc string `protobuf:"bytes,4,opt,name=lan_doc,json=lanDoc,proto3" json:"lan_doc,omitempty"`
	// 字幕文件url
	SubtitleUrl string `protobuf:"bytes,5,opt,name=subtitle_url,json=subtitleUrl,proto3" json:"subtitle_url,omitempty"`
	// 字幕作者信息
	Author *UserInfo `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	// 字幕类型
	Type SubtitleType `protobuf:"varint,7,opt,name=type,proto3,enum=bilibili.community.service.dm.v1.SubtitleType" json:"type,omitempty"`
	//
	LanDocBrief string `protobuf:"bytes,8,opt,name=lan_doc_brief,json=lanDocBrief,proto3" json:"lan_doc_brief,omitempty"`
	//
	AiType SubtitleAiType `protobuf:"varint,9,opt,name=ai_type,json=aiType,proto3,enum=bilibili.community.service.dm.v1.SubtitleAiType" json:"ai_type,omitempty"`
	//
	AiStatus             SubtitleAiStatus `protobuf:"varint,10,opt,name=ai_status,json=aiStatus,proto3,enum=bilibili.community.service.dm.v1.SubtitleAiStatus" json:"ai_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SubtitleItem) Reset()         { *m = SubtitleItem{} }
func (m *SubtitleItem) String() string { return proto.CompactTextString(m) }
func (*SubtitleItem) ProtoMessage()    {}
func (*SubtitleItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{56}
}

func (m *SubtitleItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubtitleItem.Unmarshal(m, b)
}
func (m *SubtitleItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubtitleItem.Marshal(b, m, deterministic)
}
func (m *SubtitleItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubtitleItem.Merge(m, src)
}
func (m *SubtitleItem) XXX_Size() int {
	return xxx_messageInfo_SubtitleItem.Size(m)
}
func (m *SubtitleItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SubtitleItem.DiscardUnknown(m)
}

var xxx_messageInfo_SubtitleItem proto.InternalMessageInfo

func (m *SubtitleItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SubtitleItem) GetIdStr() string {
	if m != nil {
		return m.IdStr
	}
	return ""
}

func (m *SubtitleItem) GetLan() string {
	if m != nil {
		return m.Lan
	}
	return ""
}

func (m *SubtitleItem) GetLanDoc() string {
	if m != nil {
		return m.LanDoc
	}
	return ""
}

func (m *SubtitleItem) GetSubtitleUrl() string {
	if m != nil {
		return m.SubtitleUrl
	}
	return ""
}

func (m *SubtitleItem) GetAuthor() *UserInfo {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *SubtitleItem) GetType() SubtitleType {
	if m != nil {
		return m.Type
	}
	return SubtitleType_CC
}

func (m *SubtitleItem) GetLanDocBrief() string {
	if m != nil {
		return m.LanDocBrief
	}
	return ""
}

func (m *SubtitleItem) GetAiType() SubtitleAiType {
	if m != nil {
		return m.AiType
	}
	return SubtitleAiType_Normal
}

func (m *SubtitleItem) GetAiStatus() SubtitleAiStatus {
	if m != nil {
		return m.AiStatus
	}
	return SubtitleAiStatus_None
}

//
type TextInput struct {
	//
	PortraitPlaceholder []string `protobuf:"bytes,1,rep,name=portrait_placeholder,json=portraitPlaceholder,proto3" json:"portrait_placeholder,omitempty"`
	//
	LandscapePlaceholder []string `protobuf:"bytes,2,rep,name=landscape_placeholder,json=landscapePlaceholder,proto3" json:"landscape_placeholder,omitempty"`
	//
	RenderType RenderType `protobuf:"varint,3,opt,name=render_type,json=renderType,proto3,enum=bilibili.community.service.dm.v1.RenderType" json:"render_type,omitempty"`
	//
	PlaceholderPost bool `protobuf:"varint,4,opt,name=placeholder_post,json=placeholderPost,proto3" json:"placeholder_post,omitempty"`
	//
	Show bool `protobuf:"varint,5,opt,name=show,proto3" json:"show,omitempty"`
	//
	Avatar []*Avatar `protobuf:"bytes,6,rep,name=avatar,proto3" json:"avatar,omitempty"`
	//
	PostStatus PostStatus `protobuf:"varint,7,opt,name=post_status,json=postStatus,proto3,enum=bilibili.community.service.dm.v1.PostStatus" json:"post_status,omitempty"`
	//
	Label                *Label   `protobuf:"bytes,8,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextInput) Reset()         { *m = TextInput{} }
func (m *TextInput) String() string { return proto.CompactTextString(m) }
func (*TextInput) ProtoMessage()    {}
func (*TextInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{57}
}

func (m *TextInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextInput.Unmarshal(m, b)
}
func (m *TextInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextInput.Marshal(b, m, deterministic)
}
func (m *TextInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextInput.Merge(m, src)
}
func (m *TextInput) XXX_Size() int {
	return xxx_messageInfo_TextInput.Size(m)
}
func (m *TextInput) XXX_DiscardUnknown() {
	xxx_messageInfo_TextInput.DiscardUnknown(m)
}

var xxx_messageInfo_TextInput proto.InternalMessageInfo

func (m *TextInput) GetPortraitPlaceholder() []string {
	if m != nil {
		return m.PortraitPlaceholder
	}
	return nil
}

func (m *TextInput) GetLandscapePlaceholder() []string {
	if m != nil {
		return m.LandscapePlaceholder
	}
	return nil
}

func (m *TextInput) GetRenderType() RenderType {
	if m != nil {
		return m.RenderType
	}
	return RenderType_RenderTypeNone
}

func (m *TextInput) GetPlaceholderPost() bool {
	if m != nil {
		return m.PlaceholderPost
	}
	return false
}

func (m *TextInput) GetShow() bool {
	if m != nil {
		return m.Show
	}
	return false
}

func (m *TextInput) GetAvatar() []*Avatar {
	if m != nil {
		return m.Avatar
	}
	return nil
}

func (m *TextInput) GetPostStatus() PostStatus {
	if m != nil {
		return m.PostStatus
	}
	return PostStatus_PostStatusNormal
}

func (m *TextInput) GetLabel() *Label {
	if m != nil {
		return m.Label
	}
	return nil
}

//
type Toast struct {
	//
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	//
	Duration int32 `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	//
	Show bool `protobuf:"varint,3,opt,name=show,proto3" json:"show,omitempty"`
	//
	Button               *Button  `protobuf:"bytes,4,opt,name=button,proto3" json:"button,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Toast) Reset()         { *m = Toast{} }
func (m *Toast) String() string { return proto.CompactTextString(m) }
func (*Toast) ProtoMessage()    {}
func (*Toast) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{58}
}

func (m *Toast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Toast.Unmarshal(m, b)
}
func (m *Toast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Toast.Marshal(b, m, deterministic)
}
func (m *Toast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Toast.Merge(m, src)
}
func (m *Toast) XXX_Size() int {
	return xxx_messageInfo_Toast.Size(m)
}
func (m *Toast) XXX_DiscardUnknown() {
	xxx_messageInfo_Toast.DiscardUnknown(m)
}

var xxx_messageInfo_Toast proto.InternalMessageInfo

func (m *Toast) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Toast) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Toast) GetShow() bool {
	if m != nil {
		return m.Show
	}
	return false
}

func (m *Toast) GetButton() *Button {
	if m != nil {
		return m.Button
	}
	return nil
}

// 字幕作者信息
type UserInfo struct {
	// 用户mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 用户昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 用户性别
	Sex string `protobuf:"bytes,3,opt,name=sex,proto3" json:"sex,omitempty"`
	// 用户头像url
	Face string `protobuf:"bytes,4,opt,name=face,proto3" json:"face,omitempty"`
	// 用户签名
	Sign string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	// 用户等级
	Rank                 int32    `protobuf:"varint,6,opt,name=rank,proto3" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{59}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func (m *UserInfo) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

func (m *UserInfo) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *UserInfo) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

// 智能防挡弹幕蒙版信息
type VideoMask struct {
	// 视频cid
	Cid int64 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	// 平台
	// 0:web端 1:客户端
	Plat int32 `protobuf:"varint,2,opt,name=plat,proto3" json:"plat,omitempty"`
	// 帧率
	Fps int32 `protobuf:"varint,3,opt,name=fps,proto3" json:"fps,omitempty"`
	// 间隔时间
	Time int64 `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	// 蒙版url
	MaskUrl              string   `protobuf:"bytes,5,opt,name=mask_url,json=maskUrl,proto3" json:"mask_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoMask) Reset()         { *m = VideoMask{} }
func (m *VideoMask) String() string { return proto.CompactTextString(m) }
func (*VideoMask) ProtoMessage()    {}
func (*VideoMask) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{60}
}

func (m *VideoMask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoMask.Unmarshal(m, b)
}
func (m *VideoMask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoMask.Marshal(b, m, deterministic)
}
func (m *VideoMask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoMask.Merge(m, src)
}
func (m *VideoMask) XXX_Size() int {
	return xxx_messageInfo_VideoMask.Size(m)
}
func (m *VideoMask) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoMask.DiscardUnknown(m)
}

var xxx_messageInfo_VideoMask proto.InternalMessageInfo

func (m *VideoMask) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *VideoMask) GetPlat() int32 {
	if m != nil {
		return m.Plat
	}
	return 0
}

func (m *VideoMask) GetFps() int32 {
	if m != nil {
		return m.Fps
	}
	return 0
}

func (m *VideoMask) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *VideoMask) GetMaskUrl() string {
	if m != nil {
		return m.MaskUrl
	}
	return ""
}

// 视频字幕信息
type VideoSubtitle struct {
	// 视频原语言代码
	Lan string `protobuf:"bytes,1,opt,name=lan,proto3" json:"lan,omitempty"`
	// 视频原语言
	LanDoc string `protobuf:"bytes,2,opt,name=lanDoc,proto3" json:"lanDoc,omitempty"`
	// 视频字幕列表
	Subtitles            []*SubtitleItem `protobuf:"bytes,3,rep,name=subtitles,proto3" json:"subtitles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *VideoSubtitle) Reset()         { *m = VideoSubtitle{} }
func (m *VideoSubtitle) String() string { return proto.CompactTextString(m) }
func (*VideoSubtitle) ProtoMessage()    {}
func (*VideoSubtitle) Descriptor() ([]byte, []int) {
	return fileDescriptor_676f8a319b7970c3, []int{61}
}

func (m *VideoSubtitle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoSubtitle.Unmarshal(m, b)
}
func (m *VideoSubtitle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoSubtitle.Marshal(b, m, deterministic)
}
func (m *VideoSubtitle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoSubtitle.Merge(m, src)
}
func (m *VideoSubtitle) XXX_Size() int {
	return xxx_messageInfo_VideoSubtitle.Size(m)
}
func (m *VideoSubtitle) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoSubtitle.DiscardUnknown(m)
}

var xxx_messageInfo_VideoSubtitle proto.InternalMessageInfo

func (m *VideoSubtitle) GetLan() string {
	if m != nil {
		return m.Lan
	}
	return ""
}

func (m *VideoSubtitle) GetLanDoc() string {
	if m != nil {
		return m.LanDoc
	}
	return ""
}

func (m *VideoSubtitle) GetSubtitles() []*SubtitleItem {
	if m != nil {
		return m.Subtitles
	}
	return nil
}

func init() {
	proto.RegisterEnum("bilibili.community.service.dm.v1.AvatarType", AvatarType_name, AvatarType_value)
	proto.RegisterEnum("bilibili.community.service.dm.v1.CheckboxType", CheckboxType_name, CheckboxType_value)
	proto.RegisterEnum("bilibili.community.service.dm.v1.DMAttrBit", DMAttrBit_name, DMAttrBit_value)
	proto.RegisterEnum("bilibili.community.service.dm.v1.PostPanelBizType", PostPanelBizType_name, PostPanelBizType_value)
	proto.RegisterEnum("bilibili.community.service.dm.v1.PostStatus", PostStatus_name, PostStatus_value)
	proto.RegisterEnum("bilibili.community.service.dm.v1.RenderType", RenderType_name, RenderType_value)
	proto.RegisterEnum("bilibili.community.service.dm.v1.SubtitleAiStatus", SubtitleAiStatus_name, SubtitleAiStatus_value)
	proto.RegisterEnum("bilibili.community.service.dm.v1.SubtitleAiType", SubtitleAiType_name, SubtitleAiType_value)
	proto.RegisterEnum("bilibili.community.service.dm.v1.SubtitleType", SubtitleType_name, SubtitleType_value)
	proto.RegisterEnum("bilibili.community.service.dm.v1.ToastFunctionType", ToastFunctionType_name, ToastFunctionType_value)
	proto.RegisterType((*Avatar)(nil), "bilibili.community.service.dm.v1.Avatar")
	proto.RegisterType((*Bubble)(nil), "bilibili.community.service.dm.v1.Bubble")
	proto.RegisterType((*Button)(nil), "bilibili.community.service.dm.v1.Button")
	proto.RegisterType((*BuzzwordConfig)(nil), "bilibili.community.service.dm.v1.BuzzwordConfig")
	proto.RegisterType((*BuzzwordShowConfig)(nil), "bilibili.community.service.dm.v1.BuzzwordShowConfig")
	proto.RegisterType((*CheckBox)(nil), "bilibili.community.service.dm.v1.CheckBox")
	proto.RegisterType((*ClickButton)(nil), "bilibili.community.service.dm.v1.ClickButton")
	proto.RegisterType((*CommandDm)(nil), "bilibili.community.service.dm.v1.CommandDm")
	proto.RegisterType((*DanmakuAIFlag)(nil), "bilibili.community.service.dm.v1.DanmakuAIFlag")
	proto.RegisterType((*DanmakuElem)(nil), "bilibili.community.service.dm.v1.DanmakuElem")
	proto.RegisterType((*DanmakuFlag)(nil), "bilibili.community.service.dm.v1.DanmakuFlag")
	proto.RegisterType((*DanmakuFlagConfig)(nil), "bilibili.community.service.dm.v1.DanmakuFlagConfig")
	proto.RegisterType((*DanmuDefaultPlayerConfig)(nil), "bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig")
	proto.RegisterMapType((map[int32]int32)(nil), "bilibili.community.service.dm.v1.DanmuDefaultPlayerConfig.PlayerDanmakuAiRecommendedLevelV2MapEntry")
	proto.RegisterType((*DanmuPlayerConfig)(nil), "bilibili.community.service.dm.v1.DanmuPlayerConfig")
	proto.RegisterMapType((map[int32]int32)(nil), "bilibili.community.service.dm.v1.DanmuPlayerConfig.PlayerDanmakuAiRecommendedLevelV2MapEntry")
	proto.RegisterType((*DanmuPlayerDynamicConfig)(nil), "bilibili.community.service.dm.v1.DanmuPlayerDynamicConfig")
	proto.RegisterType((*DanmuPlayerViewConfig)(nil), "bilibili.community.service.dm.v1.DanmuPlayerViewConfig")
	proto.RegisterType((*DanmuWebPlayerConfig)(nil), "bilibili.community.service.dm.v1.DanmuWebPlayerConfig")
	proto.RegisterMapType((map[int32]int32)(nil), "bilibili.community.service.dm.v1.DanmuWebPlayerConfig.AiLevelV2MapEntry")
	proto.RegisterType((*DmExpoReportReq)(nil), "bilibili.community.service.dm.v1.DmExpoReportReq")
	proto.RegisterType((*DmExpoReportRes)(nil), "bilibili.community.service.dm.v1.DmExpoReportRes")
	proto.RegisterType((*DmPlayerConfigReq)(nil), "bilibili.community.service.dm.v1.DmPlayerConfigReq")
	proto.RegisterType((*DmSegConfig)(nil), "bilibili.community.service.dm.v1.DmSegConfig")
	proto.RegisterType((*DmSegMobileReply)(nil), "bilibili.community.service.dm.v1.DmSegMobileReply")
	proto.RegisterType((*DmSegMobileReq)(nil), "bilibili.community.service.dm.v1.DmSegMobileReq")
	proto.RegisterType((*DmSegOttReply)(nil), "bilibili.community.service.dm.v1.DmSegOttReply")
	proto.RegisterType((*DmSegOttReq)(nil), "bilibili.community.service.dm.v1.DmSegOttReq")
	proto.RegisterType((*DmSegSDKReply)(nil), "bilibili.community.service.dm.v1.DmSegSDKReply")
	proto.RegisterType((*DmSegSDKReq)(nil), "bilibili.community.service.dm.v1.DmSegSDKReq")
	proto.RegisterType((*DmViewReply)(nil), "bilibili.community.service.dm.v1.DmViewReply")
	proto.RegisterType((*DmViewReq)(nil), "bilibili.community.service.dm.v1.DmViewReq")
	proto.RegisterType((*DmWebViewReply)(nil), "bilibili.community.service.dm.v1.DmWebViewReply")
	proto.RegisterType((*ExpoReport)(nil), "bilibili.community.service.dm.v1.ExpoReport")
	proto.RegisterType((*Expression)(nil), "bilibili.community.service.dm.v1.Expression")
	proto.RegisterType((*Expressions)(nil), "bilibili.community.service.dm.v1.Expressions")
	proto.RegisterType((*Label)(nil), "bilibili.community.service.dm.v1.Label")
	proto.RegisterType((*Period)(nil), "bilibili.community.service.dm.v1.Period")
	proto.RegisterType((*InlinePlayerDanmakuSwitch)(nil), "bilibili.community.service.dm.v1.InlinePlayerDanmakuSwitch")
	proto.RegisterType((*PlayerDanmakuAiRecommendedLevel)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuAiRecommendedLevel")
	proto.RegisterType((*PlayerDanmakuAiRecommendedLevelV2)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuAiRecommendedLevelV2")
	proto.RegisterType((*PlayerDanmakuAiRecommendedSwitch)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuAiRecommendedSwitch")
	proto.RegisterType((*PlayerDanmakuBlockbottom)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuBlockbottom")
	proto.RegisterType((*PlayerDanmakuBlockcolorful)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuBlockcolorful")
	proto.RegisterType((*PlayerDanmakuBlockrepeat)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuBlockrepeat")
	proto.RegisterType((*PlayerDanmakuBlockscroll)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuBlockscroll")
	proto.RegisterType((*PlayerDanmakuBlockspecial)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuBlockspecial")
	proto.RegisterType((*PlayerDanmakuBlocktop)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuBlocktop")
	proto.RegisterType((*PlayerDanmakuDomain)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuDomain")
	proto.RegisterType((*PlayerDanmakuEnableblocklist)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuEnableblocklist")
	proto.RegisterType((*PlayerDanmakuOpacity)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuOpacity")
	proto.RegisterType((*PlayerDanmakuScalingfactor)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuScalingfactor")
	proto.RegisterType((*PlayerDanmakuSeniorModeSwitch)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuSeniorModeSwitch")
	proto.RegisterType((*PlayerDanmakuSpeed)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuSpeed")
	proto.RegisterType((*PlayerDanmakuSwitch)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuSwitch")
	proto.RegisterType((*PlayerDanmakuSwitchSave)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuSwitchSave")
	proto.RegisterType((*PlayerDanmakuUseDefaultConfig)(nil), "bilibili.community.service.dm.v1.PlayerDanmakuUseDefaultConfig")
	proto.RegisterType((*PostPanel)(nil), "bilibili.community.service.dm.v1.PostPanel")
	proto.RegisterType((*Response)(nil), "bilibili.community.service.dm.v1.Response")
	proto.RegisterType((*SubtitleItem)(nil), "bilibili.community.service.dm.v1.SubtitleItem")
	proto.RegisterType((*TextInput)(nil), "bilibili.community.service.dm.v1.TextInput")
	proto.RegisterType((*Toast)(nil), "bilibili.community.service.dm.v1.Toast")
	proto.RegisterType((*UserInfo)(nil), "bilibili.community.service.dm.v1.UserInfo")
	proto.RegisterType((*VideoMask)(nil), "bilibili.community.service.dm.v1.VideoMask")
	proto.RegisterType((*VideoSubtitle)(nil), "bilibili.community.service.dm.v1.VideoSubtitle")
}

func init() {
	proto.RegisterFile("grpc_api/bilibili/community/service/dm/v1/dm.proto", fileDescriptor_676f8a319b7970c3)
}

var fileDescriptor_676f8a319b7970c3 = []byte{
	// 4323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x3b, 0xcb, 0x72, 0x1b, 0xc7,
	0x76, 0x06, 0x40, 0x80, 0xc0, 0x01, 0x49, 0x81, 0xcd, 0x87, 0x20, 0xea, 0x61, 0x7a, 0xec, 0x9b,
	0xc8, 0x94, 0x4d, 0x4a, 0xb4, 0xfc, 0xb8, 0x4f, 0x8b, 0x0f, 0xe9, 0x8a, 0xb6, 0x68, 0x31, 0x43,
	0x59, 0xbe, 0x37, 0x71, 0x6a, 0xaa, 0x31, 0xd3, 0x04, 0xc7, 0x9c, 0x97, 0xa7, 0x1b, 0x7c, 0x28,
	0x95, 0x6c, 0xb3, 0xca, 0x17, 0x64, 0x93, 0x75, 0x7e, 0xe0, 0xee, 0x52, 0x95, 0x75, 0xb2, 0xc9,
	0x22, 0x9b, 0x64, 0x93, 0x45, 0xaa, 0xb2, 0xcd, 0x3a, 0x8b, 0x9b, 0x54, 0x9f, 0xee, 0x19, 0xcc,
	0x80, 0x03, 0x71, 0x48, 0xdb, 0xa9, 0xba, 0x55, 0x5e, 0xa0, 0xd0, 0x7d, 0xfa, 0x9c, 0xd3, 0xcf,
	0xf3, 0xea, 0x39, 0x0d, 0xeb, 0xfd, 0x38, 0xb2, 0x2d, 0x1a, 0xb9, 0x6b, 0x3d, 0xd7, 0x73, 0xe5,
	0x6f, 0xcd, 0x0e, 0x7d, 0x7f, 0x10, 0xb8, 0xe2, 0x6c, 0x8d, 0xb3, 0xf8, 0xd8, 0xb5, 0xd9, 0x9a,
	0xe3, 0xaf, 0x1d, 0x3f, 0x58, 0x73, 0xfc, 0xd5, 0x28, 0x0e, 0x45, 0x48, 0x96, 0x13, 0xd4, 0xd5,
	0x14, 0x75, 0x55, 0xa3, 0xae, 0x3a, 0xfe, 0xea, 0xf1, 0x03, 0xe3, 0x0c, 0x1a, 0x1b, 0xc7, 0x54,
	0xd0, 0x98, 0xcc, 0x40, 0xd5, 0x75, 0xba, 0x95, 0xe5, 0xca, 0xdd, 0x96, 0x59, 0x75, 0x1d, 0xd2,
	0x81, 0xda, 0x20, 0xf6, 0xba, 0x55, 0x04, 0xc8, 0x22, 0xd9, 0x85, 0x36, 0x45, 0x5c, 0x4b, 0x9c,
	0x45, 0xac, 0x5b, 0x5b, 0xae, 0xdc, 0x9d, 0x59, 0x7f, 0x6f, 0xf5, 0xa2, 0x3e, 0x56, 0x55, 0x07,
	0x2f, 0xce, 0x22, 0x66, 0x02, 0x4d, 0xcb, 0xc6, 0x2a, 0x34, 0x36, 0x07, 0xbd, 0x9e, 0xc7, 0x08,
	0x81, 0x09, 0xc1, 0x4e, 0x85, 0xee, 0x1c, 0xcb, 0xe7, 0xbb, 0x37, 0x1e, 0x4a, 0x7c, 0x21, 0xc2,
	0xa0, 0x10, 0x7f, 0x11, 0x1a, 0xd4, 0x16, 0x6e, 0x18, 0x20, 0x49, 0xdd, 0xd4, 0x35, 0xa3, 0x07,
	0x33, 0x9b, 0x83, 0x57, 0xaf, 0x4e, 0xc2, 0xd8, 0xd9, 0x0a, 0x83, 0x03, 0xb7, 0x4f, 0xf6, 0xa0,
	0x79, 0xc4, 0xce, 0x24, 0x80, 0x77, 0x2b, 0xcb, 0xb5, 0xbb, 0xed, 0xf5, 0x87, 0x17, 0xcf, 0x21,
	0xe1, 0xb1, 0x7f, 0x18, 0x9e, 0x28, 0x3e, 0x66, 0xca, 0xc5, 0xf8, 0xfb, 0x0a, 0x90, 0xf3, 0x08,
	0x72, 0x98, 0x01, 0xf5, 0x59, 0x32, 0x4c, 0x59, 0x96, 0xc3, 0xe4, 0xf6, 0x21, 0xf3, 0xa9, 0x9e,
	0x99, 0xae, 0x21, 0x3c, 0x1c, 0xc4, 0xb6, 0x5a, 0xd6, 0xba, 0xa9, 0x6b, 0x7a, 0x57, 0x26, 0x96,
	0x2b, 0x77, 0x6b, 0xb8, 0x2b, 0x6f, 0x42, 0xbb, 0xa7, 0x7b, 0xb2, 0x5c, 0xa7, 0x5b, 0xc7, 0x06,
	0x48, 0x40, 0x3b, 0x88, 0xa0, 0x58, 0xaa, 0x4d, 0x6a, 0x20, 0x37, 0x50, 0x20, 0x5c, 0xf6, 0xbf,
	0xad, 0x40, 0x73, 0xeb, 0x90, 0xd9, 0x47, 0x9b, 0xe1, 0x69, 0xe1, 0x4a, 0x6e, 0xc2, 0x04, 0x92,
	0x56, 0x71, 0x7f, 0x57, 0x2f, 0x5e, 0x1b, 0xe4, 0xd6, 0x0b, 0x4f, 0x71, 0x87, 0x91, 0x96, 0xbc,
	0x0d, 0xd3, 0x0e, 0x3b, 0xa0, 0x03, 0x4f, 0x58, 0xc7, 0xd4, 0x1b, 0xa8, 0x59, 0x35, 0xcd, 0x29,
	0x0d, 0x7c, 0x29, 0x61, 0xb2, 0x73, 0x7e, 0x18, 0x9e, 0xe0, 0xec, 0x9a, 0x26, 0x96, 0x8d, 0xff,
	0xa8, 0x42, 0x7b, 0xcb, 0x73, 0xed, 0x23, 0xbd, 0xd5, 0x6f, 0xc3, 0x74, 0x14, 0xc6, 0x22, 0xa6,
	0xae, 0xb0, 0xf4, 0x48, 0x6b, 0x77, 0x5b, 0xe6, 0x54, 0x02, 0x7c, 0x21, 0x47, 0xfc, 0x13, 0x98,
	0xf1, 0x68, 0xe0, 0x70, 0x9b, 0x46, 0x4c, 0x61, 0x55, 0x11, 0x6b, 0x3a, 0x85, 0x22, 0xda, 0x2a,
	0xcc, 0xe5, 0x78, 0x59, 0x07, 0xa1, 0x3d, 0xe0, 0xdd, 0x1a, 0xe2, 0xce, 0x66, 0x39, 0x3e, 0x91,
	0x0d, 0xe4, 0x3e, 0xcc, 0xe7, 0xd9, 0x6a, 0x82, 0x09, 0x24, 0x20, 0x39, 0xe6, 0x8a, 0x62, 0x17,
	0xda, 0x31, 0x0b, 0x1c, 0xa6, 0x25, 0xa4, 0x5e, 0x56, 0x42, 0x4c, 0x24, 0x52, 0x12, 0x12, 0xa7,
	0xe5, 0x74, 0x81, 0x1a, 0xc3, 0x05, 0x22, 0x8f, 0xa0, 0xd1, 0x43, 0xa9, 0xe9, 0x4e, 0x2e, 0x57,
	0xee, 0xb6, 0xd7, 0xef, 0x96, 0x39, 0xbb, 0x12, 0xdf, 0xd4, 0x74, 0xc6, 0x7f, 0x55, 0xa0, 0xb5,
	0x15, 0xfa, 0x3e, 0x0d, 0x9c, 0x6d, 0x3f, 0x23, 0xf6, 0xb5, 0x44, 0xec, 0x43, 0xd7, 0xc1, 0xcd,
	0xaf, 0x99, 0xb2, 0x28, 0x21, 0xbe, 0xeb, 0xe0, 0x0e, 0xb6, 0x4c, 0x59, 0x24, 0x5d, 0x98, 0xb4,
	0x15, 0x03, 0xdc, 0xbb, 0x96, 0x99, 0x54, 0x55, 0x4b, 0x20, 0x58, 0x20, 0x70, 0xf2, 0xd8, 0x82,
	0x55, 0xb2, 0x04, 0xcd, 0x28, 0x0e, 0xfb, 0x31, 0xe3, 0x5c, 0x1f, 0xca, 0xb4, 0x4e, 0xe6, 0xa1,
	0x6e, 0x0b, 0xd7, 0x57, 0x53, 0x6a, 0x99, 0xaa, 0x22, 0xa1, 0x3e, 0x42, 0x9b, 0x0a, 0xea, 0x27,
	0x50, 0x76, 0x2a, 0x62, 0xda, 0x6d, 0x29, 0x28, 0x56, 0x24, 0xd4, 0x75, 0xf6, 0x45, 0xdc, 0x05,
	0x05, 0xc5, 0x8a, 0xf1, 0x5b, 0x98, 0xde, 0xa6, 0x81, 0x4f, 0x8f, 0x06, 0x1b, 0x3b, 0x4f, 0x3c,
	0xda, 0x27, 0x4f, 0xa1, 0xe9, 0xf8, 0xd6, 0x81, 0x47, 0xfb, 0x89, 0xe8, 0xbf, 0x7f, 0xf1, 0xf2,
	0x69, 0x16, 0x92, 0x81, 0x39, 0xe9, 0xf8, 0xf2, 0x9f, 0x1b, 0xff, 0x5a, 0x85, 0xb6, 0x6e, 0x78,
	0xec, 0xb1, 0xf3, 0xcb, 0x98, 0x9d, 0x6e, 0x75, 0x64, 0xba, 0x04, 0x26, 0xfc, 0xd0, 0x49, 0x24,
	0x1d, 0xcb, 0x12, 0xff, 0x20, 0x0c, 0x04, 0x77, 0x5f, 0x31, 0x5c, 0xd3, 0xba, 0x99, 0xd6, 0x71,
	0x79, 0x42, 0x2f, 0x8c, 0x71, 0x49, 0xa7, 0x4d, 0x55, 0x91, 0x4b, 0xed, 0xbb, 0xce, 0x53, 0xca,
	0x0f, 0x71, 0x3d, 0x5b, 0x66, 0x52, 0xcd, 0x6e, 0xc2, 0x64, 0x7e, 0x13, 0xd2, 0x85, 0x6e, 0xe2,
	0x40, 0xf5, 0x42, 0x2f, 0x42, 0xe3, 0x84, 0xb9, 0xfd, 0x43, 0x81, 0x6b, 0x5a, 0x37, 0x75, 0x2d,
	0xa3, 0x52, 0xd5, 0xaa, 0xea, 0x9a, 0x1c, 0x7f, 0x14, 0x86, 0x5e, 0xb7, 0xad, 0xc6, 0x2f, 0xcb,
	0xc3, 0x0d, 0x98, 0xca, 0x6c, 0x80, 0xc4, 0xa4, 0x42, 0xc4, 0xdd, 0x69, 0x85, 0x29, 0xcb, 0xe4,
	0x16, 0xb4, 0x68, 0xe0, 0xfa, 0x14, 0x19, 0x2f, 0x22, 0xf6, 0x10, 0x60, 0x7c, 0x98, 0x2e, 0x2b,
	0x6e, 0x18, 0x81, 0x09, 0xc7, 0x4f, 0x17, 0x16, 0xcb, 0x12, 0x26, 0x77, 0x10, 0x97, 0x75, 0xda,
	0xc4, 0xb2, 0x71, 0x08, 0xb3, 0x19, 0x32, 0xad, 0x7f, 0x6f, 0x40, 0x33, 0x66, 0x36, 0x6e, 0x37,
	0x32, 0xa8, 0x9b, 0x93, 0x31, 0xb3, 0x91, 0xaf, 0x6e, 0xd2, 0xba, 0x02, 0xd7, 0x28, 0x66, 0x36,
	0x6a, 0x89, 0xdb, 0x00, 0xb2, 0x89, 0x9f, 0xb8, 0xc2, 0x3e, 0xd4, 0x7b, 0xd4, 0x8a, 0x99, 0xbd,
	0x8f, 0x00, 0xe3, 0x9f, 0x01, 0xba, 0xb2, 0xab, 0xc1, 0xb6, 0x52, 0x65, 0x7b, 0x1e, 0x3d, 0x63,
	0xb1, 0xee, 0xf1, 0x29, 0xbc, 0x15, 0x61, 0xdd, 0x72, 0xd4, 0x68, 0xac, 0x01, 0x67, 0x56, 0xa2,
	0x09, 0x6d, 0x44, 0xc2, 0xa1, 0x34, 0xcd, 0xdb, 0x0a, 0x51, 0x8f, 0xfa, 0x4b, 0xce, 0x34, 0x3f,
	0xcd, 0xe9, 0x0b, 0x78, 0x67, 0x84, 0x13, 0x75, 0xad, 0x98, 0xc9, 0x33, 0x2a, 0xf5, 0x83, 0x93,
	0x8c, 0x4f, 0xe9, 0xce, 0xe5, 0x1c, 0xb3, 0x0d, 0xd7, 0x1c, 0x22, 0xaa, 0x61, 0x93, 0x67, 0xf0,
	0xf6, 0xeb, 0xf9, 0x79, 0xec, 0x98, 0x79, 0x78, 0xc2, 0xea, 0xe6, 0x9b, 0xe3, 0xd9, 0x3d, 0x93,
	0x68, 0xe4, 0x23, 0xb8, 0x3e, 0xc2, 0xad, 0xe7, 0x85, 0xf6, 0x91, 0x08, 0x23, 0xad, 0xab, 0x16,
	0x72, 0x1c, 0x36, 0x75, 0x23, 0xf9, 0x05, 0x2c, 0x15, 0xd1, 0x71, 0x3b, 0x0e, 0x3d, 0x0f, 0x0f,
	0x6b, 0xd3, 0xec, 0x9e, 0x27, 0x55, 0xed, 0xe3, 0xa8, 0x7b, 0xa1, 0x10, 0xa1, 0x8f, 0x47, 0xba,
	0x90, 0x5a, 0xb5, 0x93, 0x47, 0x70, 0xab, 0x88, 0x1a, 0x85, 0xe9, 0x60, 0xe0, 0xe1, 0xd9, 0x6f,
	0x9a, 0x4b, 0xe7, 0xe9, 0x13, 0x8c, 0x71, 0xfd, 0xc7, 0x2c, 0x62, 0x54, 0xa0, 0x8c, 0x14, 0xf6,
	0xaf, 0xda, 0xc9, 0xaf, 0xe0, 0x66, 0xe1, 0xdc, 0x23, 0x66, 0xbb, 0x54, 0x09, 0x53, 0xd3, 0xbc,
	0x51, 0x30, 0x79, 0x85, 0x40, 0x1e, 0xc2, 0xe2, 0x08, 0x7d, 0x18, 0x51, 0xdb, 0x15, 0x67, 0x28,
	0x72, 0x55, 0x73, 0x3e, 0x47, 0xfa, 0x5c, 0xb5, 0x15, 0xcc, 0x9a, 0xdb, 0xd4, 0x73, 0x83, 0xfe,
	0x01, 0xb5, 0x45, 0xa8, 0x24, 0xb3, 0x3a, 0x32, 0xeb, 0xfd, 0x2c, 0x06, 0x59, 0x87, 0x85, 0x11,
	0x0e, 0x4e, 0xe8, 0x53, 0x37, 0xe8, 0xce, 0x20, 0xe9, 0x5c, 0x8e, 0x74, 0x1b, 0x9b, 0xa4, 0xe5,
	0x1c, 0xed, 0x35, 0x62, 0xcc, 0xe9, 0x5e, 0xc3, 0xe3, 0x45, 0xf2, 0xbd, 0xc9, 0x16, 0xf2, 0x29,
	0xdc, 0x72, 0x03, 0xcf, 0x0d, 0x98, 0x35, 0x4a, 0xa8, 0xce, 0x79, 0x47, 0x2d, 0x8f, 0xc2, 0xd9,
	0xcb, 0xd1, 0xab, 0x03, 0x7e, 0x5e, 0xf4, 0x38, 0x0b, 0xdc, 0x30, 0xb6, 0xa4, 0x7a, 0x4d, 0xb8,
	0xcc, 0x62, 0xff, 0x79, 0xd1, 0xdb, 0x47, 0xb4, 0xdd, 0xd0, 0x61, 0x9a, 0xd3, 0x9f, 0xc0, 0x1f,
	0x95, 0x10, 0x15, 0xeb, 0x78, 0xbd, 0x4b, 0x90, 0xdd, 0x5b, 0x17, 0x48, 0xcb, 0xcb, 0x75, 0xf2,
	0x0f, 0x15, 0x58, 0x29, 0xc7, 0xd3, 0xf2, 0x69, 0xd4, 0x9d, 0x43, 0xd3, 0xe4, 0x94, 0x33, 0x4d,
	0x45, 0x8a, 0x68, 0x75, 0xef, 0xa2, 0x21, 0xed, 0xd2, 0xe8, 0x71, 0x20, 0xe2, 0x33, 0xf3, 0x9d,
	0xa8, 0x04, 0xea, 0xd2, 0x57, 0xf0, 0x6e, 0x69, 0x96, 0xd2, 0x61, 0x38, 0x62, 0x67, 0x5a, 0xe5,
	0xca, 0xa2, 0xb4, 0x0e, 0xca, 0x0d, 0x54, 0xa6, 0x50, 0x55, 0x7e, 0x56, 0xfd, 0xa4, 0x62, 0xfc,
	0xcf, 0x94, 0xd2, 0xdc, 0x83, 0x9c, 0x1e, 0x3d, 0x7f, 0xe6, 0xf4, 0x06, 0x2a, 0xdd, 0x99, 0x3f,
	0x73, 0x7a, 0xdb, 0x7e, 0x7e, 0x4e, 0x3a, 0x15, 0x8d, 0xc5, 0xe9, 0xb1, 0xea, 0xb8, 0x69, 0x5e,
	0x2f, 0x20, 0xdc, 0xa7, 0xc7, 0xac, 0x9c, 0xe2, 0xae, 0xfd, 0xa8, 0xb8, 0x7f, 0x54, 0xdc, 0x3f,
	0x2a, 0xee, 0xbc, 0xe2, 0xde, 0x86, 0x3b, 0x23, 0x14, 0x2c, 0xa0, 0x3d, 0x8f, 0xe1, 0x1a, 0x79,
	0x2e, 0x17, 0x5a, 0x75, 0xdf, 0xca, 0xd1, 0x3e, 0xce, 0xe3, 0x5c, 0xa8, 0xfe, 0x67, 0x2f, 0x52,
	0xff, 0x63, 0x19, 0x68, 0xd9, 0x55, 0xaa, 0xba, 0x88, 0x81, 0x96, 0xdb, 0xcd, 0x73, 0xf3, 0x70,
	0x43, 0x9e, 0x53, 0x21, 0x73, 0xc8, 0x22, 0xbf, 0xe2, 0x3b, 0x21, 0x7f, 0xad, 0x16, 0x29, 0xb0,
	0x41, 0xf3, 0xdf, 0xaf, 0x0d, 0x5a, 0x28, 0x6b, 0x83, 0x7e, 0x77, 0x39, 0x1b, 0xb4, 0x88, 0x36,
	0xe8, 0xcf, 0x4b, 0xda, 0xa0, 0x3f, 0x4c, 0xe3, 0xf3, 0x8d, 0x76, 0xe5, 0x35, 0xf7, 0xb3, 0x80,
	0xfa, 0xae, 0xad, 0xcf, 0x43, 0x36, 0x80, 0xab, 0x8c, 0x04, 0x70, 0x57, 0x90, 0x2c, 0xe3, 0xf7,
	0x55, 0x58, 0xc8, 0x74, 0xf6, 0xd2, 0x65, 0xc9, 0x35, 0xd1, 0x5f, 0xc2, 0x6d, 0xc9, 0x66, 0x20,
	0xd9, 0x68, 0x83, 0xa3, 0xb9, 0x67, 0x02, 0x86, 0xf6, 0xfa, 0xcf, 0xae, 0xee, 0x0e, 0x98, 0x4b,
	0xba, 0x83, 0xa2, 0x98, 0xa5, 0x0f, 0x0b, 0x49, 0xf7, 0xf9, 0x6e, 0xab, 0xd8, 0xed, 0x07, 0x57,
	0x38, 0x01, 0xe6, 0x9c, 0xe6, 0x98, 0xeb, 0x28, 0x33, 0xcf, 0x64, 0xf5, 0xd4, 0x8a, 0x0f, 0xed,
	0x6b, 0xed, 0x12, 0xf3, 0x2c, 0xd8, 0xb4, 0x74, 0x9e, 0x05, 0x6d, 0xc6, 0x7f, 0x36, 0x60, 0x1e,
	0x09, 0xbf, 0x62, 0xbd, 0xdc, 0xb8, 0x6e, 0x42, 0xcb, 0xf1, 0xf3, 0x0e, 0x46, 0xd3, 0xf1, 0xb5,
	0x20, 0xde, 0x84, 0x16, 0x75, 0x93, 0x46, 0xe5, 0x44, 0x34, 0xa9, 0xab, 0x1b, 0x6f, 0x40, 0x93,
	0xba, 0xda, 0x00, 0xab, 0x40, 0x71, 0x92, 0xba, 0xca, 0xd0, 0x2e, 0x41, 0x33, 0xb5, 0xac, 0xca,
	0xd4, 0xa7, 0x75, 0xb2, 0x0c, 0xed, 0xac, 0xf5, 0xac, 0x63, 0x73, 0x16, 0x94, 0x62, 0x68, 0x0b,
	0xd9, 0xc8, 0x60, 0x68, 0xa3, 0x78, 0x07, 0x60, 0x68, 0x05, 0xb5, 0x01, 0xce, 0x40, 0x88, 0x01,
	0x53, 0x39, 0x2b, 0xa5, 0x8c, 0x6c, 0x0e, 0x26, 0x71, 0xa2, 0x98, 0x1d, 0xb3, 0x40, 0xf0, 0x43,
	0xea, 0x30, 0x6d, 0x48, 0x73, 0x30, 0x29, 0x3c, 0x8e, 0x4f, 0xf9, 0x91, 0xb6, 0x92, 0xaa, 0x42,
	0xba, 0x30, 0x99, 0xd8, 0xb0, 0x36, 0x1e, 0xf9, 0xa4, 0x4a, 0x16, 0xa1, 0xe1, 0xf8, 0x34, 0x66,
	0x14, 0x8d, 0x5b, 0xdd, 0xd4, 0x35, 0x19, 0xf5, 0xa3, 0x25, 0x89, 0xbc, 0x01, 0xd7, 0xb6, 0x6b,
	0x08, 0xc8, 0xdd, 0x7e, 0x28, 0x19, 0x1a, 0xde, 0x7e, 0xdc, 0x01, 0xe0, 0x76, 0xcc, 0x58, 0xc0,
	0xcf, 0x02, 0x1b, 0x0d, 0x51, 0xd3, 0xcc, 0x40, 0x52, 0xce, 0xd8, 0xac, 0x6c, 0xcd, 0x10, 0x20,
	0xa9, 0x25, 0xa7, 0x03, 0xea, 0xbb, 0xde, 0x19, 0x9a, 0x91, 0x96, 0x99, 0x81, 0x10, 0x02, 0x13,
	0xbd, 0xd0, 0x73, 0xd0, 0x3e, 0x34, 0x4d, 0x2c, 0x27, 0x34, 0xbd, 0x30, 0x76, 0x58, 0xac, 0xd5,
	0x7e, 0x06, 0x82, 0x07, 0x26, 0xa6, 0x27, 0xea, 0x8e, 0x6f, 0x1e, 0x59, 0x36, 0x25, 0x00, 0xef,
	0xec, 0xde, 0x03, 0x52, 0xa0, 0xf4, 0x95, 0x96, 0xee, 0xf0, 0x51, 0x3d, 0x7f, 0x07, 0xda, 0xc9,
	0x09, 0x92, 0xca, 0x7c, 0x51, 0xdd, 0x36, 0xe8, 0x43, 0xf4, 0x72, 0x9d, 0x84, 0x70, 0x2d, 0xd3,
	0x8e, 0x8a, 0xf9, 0x3a, 0x4a, 0xc9, 0xd3, 0x92, 0x52, 0x32, 0x72, 0xd8, 0x57, 0x37, 0xdc, 0x51,
	0x1d, 0x3c, 0x45, 0x33, 0xa0, 0xa5, 0x4f, 0x61, 0xf6, 0x1c, 0xca, 0xa5, 0x74, 0xea, 0x6f, 0xe0,
	0xda, 0xb6, 0xff, 0xf8, 0x34, 0x0a, 0x4d, 0x16, 0x85, 0xb1, 0x30, 0xd9, 0xb7, 0xe4, 0x36, 0x00,
	0x67, 0x9c, 0xbb, 0x61, 0x60, 0xa5, 0x5f, 0x18, 0x5a, 0x1a, 0xb2, 0x53, 0x74, 0xe3, 0x38, 0x0f,
	0x75, 0x1e, 0xf9, 0x6e, 0x72, 0xbb, 0xa8, 0x2a, 0xc6, 0xec, 0x28, 0x67, 0x6e, 0xfc, 0xef, 0x0c,
	0xcc, 0x6e, 0xfb, 0x39, 0xd5, 0xc3, 0xbe, 0x25, 0x33, 0x50, 0x15, 0x3c, 0xb9, 0x8b, 0x13, 0x9c,
	0xec, 0x42, 0x23, 0x23, 0xc0, 0xed, 0xf5, 0x0f, 0x2f, 0x5e, 0xbb, 0x02, 0x17, 0xc3, 0xd4, 0x4c,
	0xc8, 0x9f, 0x42, 0x3b, 0xeb, 0x16, 0xd4, 0x90, 0xe7, 0x4f, 0xaf, 0xc4, 0x53, 0x7a, 0x0d, 0x26,
	0xf0, 0xa1, 0x07, 0xe1, 0x03, 0x29, 0x08, 0x3c, 0x26, 0xb0, 0x8b, 0x4f, 0x2f, 0xd9, 0xc5, 0x68,
	0x68, 0x62, 0x76, 0x06, 0xa3, 0xc1, 0xca, 0x31, 0x2c, 0x14, 0x47, 0x27, 0x75, 0xec, 0x71, 0xf3,
	0x92, 0x3d, 0x16, 0xc4, 0x2f, 0xe6, 0x1c, 0x2d, 0x08, 0x6a, 0x38, 0xcc, 0x17, 0x46, 0x31, 0x0d,
	0xec, 0x76, 0xe3, 0xbb, 0x74, 0x8b, 0x67, 0xd7, 0x24, 0xf4, 0x7c, 0xec, 0xb3, 0x9f, 0x51, 0xc9,
	0xea, 0xee, 0xfc, 0xe3, 0x4b, 0x76, 0x94, 0x84, 0x43, 0x19, 0x5d, 0xfe, 0x75, 0x5e, 0x97, 0x37,
	0xcb, 0x9a, 0xea, 0xbd, 0x31, 0xb1, 0x52, 0xde, 0x0e, 0x7c, 0x9d, 0xb7, 0x03, 0xad, 0xab, 0x73,
	0x57, 0x1c, 0xf2, 0x36, 0xa4, 0x07, 0xd3, 0xf9, 0x48, 0x0a, 0x90, 0xff, 0x2f, 0xae, 0xc2, 0x3f,
	0xe1, 0x61, 0xe6, 0x59, 0xa6, 0x33, 0xd0, 0xb1, 0x56, 0xfb, 0xea, 0x33, 0x50, 0x1c, 0xcc, 0x2c,
	0x3b, 0x62, 0x8d, 0x58, 0xb9, 0x29, 0x64, 0xff, 0xf3, 0x2b, 0x2d, 0xbf, 0x62, 0x31, 0x62, 0x22,
	0xf7, 0x86, 0x86, 0x6e, 0x1a, 0x79, 0x7f, 0x74, 0x49, 0xde, 0x3a, 0x9c, 0x1b, 0x1a, 0xc8, 0x1e,
	0x4c, 0xe7, 0x03, 0xb9, 0x99, 0x2b, 0x2d, 0x7a, 0x2e, 0xd4, 0x33, 0xf3, 0x2c, 0xa5, 0xc2, 0xd3,
	0x0e, 0xe9, 0xb5, 0x2b, 0x29, 0x3c, 0xe5, 0xb2, 0x9a, 0x9a, 0x09, 0xf9, 0x4c, 0xaa, 0x63, 0x19,
	0x05, 0x76, 0x90, 0xdb, 0xc3, 0xcb, 0x0e, 0x55, 0xd2, 0x9a, 0x8a, 0x05, 0x39, 0x84, 0x6b, 0xa3,
	0xf1, 0xe1, 0x2c, 0x72, 0xfd, 0xd5, 0x25, 0xb9, 0x8e, 0x44, 0x90, 0xe6, 0x28, 0x5b, 0x72, 0x06,
	0xe3, 0xc3, 0x45, 0x34, 0xf7, 0xa5, 0x0e, 0xca, 0xce, 0x38, 0x16, 0xaf, 0x0b, 0x46, 0xfd, 0x42,
	0x1f, 0x60, 0xee, 0x4a, 0x5a, 0x7c, 0x34, 0x34, 0x2c, 0x70, 0x22, 0x5e, 0xc1, 0xf5, 0x71, 0xd1,
	0xe1, 0x3c, 0xf6, 0xb9, 0xf5, 0x9d, 0x15, 0xea, 0xcb, 0x75, 0x73, 0x9e, 0x16, 0x40, 0x8d, 0x47,
	0xd0, 0xde, 0xf6, 0xf7, 0x59, 0x7f, 0xe8, 0x4b, 0x47, 0xb4, 0xcf, 0x2c, 0xf4, 0xe4, 0x94, 0x05,
	0x6e, 0x4a, 0xc0, 0xbe, 0xfe, 0x8e, 0x25, 0x42, 0x41, 0x3d, 0x6d, 0xea, 0x55, 0xc5, 0xf8, 0x5d,
	0x05, 0x3a, 0xc8, 0x62, 0x37, 0xec, 0xb9, 0x1e, 0x33, 0x59, 0xe4, 0x9d, 0x91, 0x2d, 0xa8, 0x33,
	0x8f, 0xf9, 0x97, 0xff, 0x4a, 0xf7, 0xd8, 0x63, 0xbe, 0xa9, 0x68, 0xd1, 0x8d, 0x10, 0x54, 0xa4,
	0x4e, 0x0a, 0x56, 0xc8, 0x53, 0x98, 0xa4, 0xae, 0xfa, 0x28, 0xa4, 0x4c, 0xf7, 0x5a, 0x69, 0xe6,
	0xea, 0x2b, 0xa2, 0xd9, 0xa0, 0xae, 0xfc, 0x37, 0xfe, 0xbb, 0x02, 0x33, 0xb9, 0x91, 0x7f, 0x2b,
	0x7d, 0x99, 0x28, 0xfd, 0x5c, 0x25, 0x8b, 0x05, 0xde, 0x0d, 0xd1, 0xdf, 0xd7, 0xf5, 0xe7, 0xbf,
	0xe4, 0x7b, 0x39, 0x67, 0x7d, 0x9f, 0x05, 0xc2, 0x72, 0x03, 0x87, 0x9d, 0xea, 0x2f, 0xfe, 0x53,
	0x1a, 0xb8, 0x23, 0x61, 0xe4, 0x27, 0x30, 0x23, 0x18, 0x0b, 0x68, 0x9f, 0xc5, 0x1c, 0x4f, 0x96,
	0xbe, 0xf5, 0x9b, 0x4e, 0xa1, 0xf2, 0x50, 0x48, 0xf7, 0x27, 0x52, 0xdf, 0x58, 0x6b, 0x66, 0x35,
	0xe2, 0x58, 0x57, 0x9f, 0x56, 0x65, 0x9d, 0xe1, 0x1e, 0x0d, 0x3c, 0x4f, 0x71, 0x68, 0xea, 0xd0,
	0x76, 0xe0, 0x79, 0x48, 0x7c, 0x1b, 0xe0, 0x20, 0x0e, 0x7d, 0x8b, 0xdb, 0x2c, 0x60, 0xfa, 0x7b,
	0x60, 0x4b, 0x42, 0xf6, 0x25, 0xc0, 0xf0, 0x60, 0x1a, 0x67, 0xfc, 0x5c, 0x08, 0xb5, 0x51, 0x8b,
	0xd0, 0xb0, 0xbd, 0x90, 0x33, 0x47, 0x47, 0x4e, 0xba, 0x36, 0xdc, 0xc0, 0xea, 0xd5, 0x37, 0xd0,
	0xf8, 0x46, 0x1f, 0x2e, 0xec, 0xed, 0x87, 0x5d, 0xdc, 0x74, 0x66, 0xfb, 0xdb, 0x9f, 0xff, 0x3f,
	0xce, 0x0c, 0x7b, 0xfb, 0x81, 0x67, 0xf6, 0xfb, 0x49, 0xd9, 0xd9, 0x4b, 0x97, 0x9d, 0xbc, 0x7e,
	0x62, 0x9f, 0xc2, 0x04, 0x46, 0x7a, 0xca, 0x49, 0xbe, 0x77, 0xf1, 0xbc, 0x5e, 0xba, 0x0e, 0x0b,
	0x77, 0x29, 0x3f, 0x32, 0x91, 0x90, 0x7c, 0x0e, 0x4d, 0x3e, 0xe8, 0x09, 0x57, 0x78, 0xac, 0xbc,
	0x68, 0x21, 0x93, 0x7d, 0x4d, 0x66, 0xa6, 0x0c, 0x30, 0x8f, 0x45, 0x19, 0x61, 0xcb, 0xf1, 0x93,
	0x9c, 0x0b, 0xd0, 0xa0, 0x6d, 0x9f, 0x93, 0x67, 0x43, 0x39, 0xae, 0x5f, 0xe6, 0xa6, 0x22, 0xf7,
	0x8d, 0x38, 0x91, 0x65, 0xf2, 0x35, 0x4c, 0xe7, 0x6f, 0x3f, 0x1a, 0x65, 0x3d, 0xc4, 0xc2, 0x4b,
	0x1d, 0x73, 0x2a, 0xca, 0x5e, 0x31, 0xbc, 0x03, 0x33, 0x9c, 0x05, 0x8e, 0xd5, 0x0b, 0x4f, 0x2d,
	0x2e, 0xce, 0x74, 0xf2, 0x46, 0x5d, 0x6e, 0x54, 0xe0, 0x6c, 0x86, 0xa7, 0xfb, 0x12, 0x26, 0xf5,
	0x15, 0xf5, 0xbc, 0xf0, 0x44, 0x07, 0xeb, 0xaa, 0x22, 0xc5, 0xd5, 0x3e, 0x64, 0xf6, 0x91, 0x24,
	0xd6, 0x49, 0x0f, 0x4d, 0x3b, 0xc9, 0xdf, 0xb9, 0x07, 0x24, 0x6d, 0xb4, 0xf8, 0x61, 0x78, 0x62,
	0xf9, 0xbc, 0xaf, 0x3f, 0xd7, 0x5f, 0x4b, 0xb0, 0xf6, 0x0f, 0xc3, 0x93, 0x5d, 0xde, 0x27, 0xef,
	0x42, 0x07, 0xb3, 0x58, 0x22, 0x8f, 0xda, 0xec, 0x30, 0xf4, 0x64, 0x74, 0xdb, 0x56, 0xa8, 0x12,
	0xbe, 0x37, 0x04, 0x93, 0x7b, 0x30, 0xeb, 0x06, 0xd1, 0x20, 0x8f, 0xab, 0x3e, 0xed, 0x77, 0xb0,
	0x21, 0x8b, 0xbc, 0x0e, 0x0b, 0x31, 0x86, 0x64, 0xd6, 0x81, 0xeb, 0x09, 0xb5, 0x84, 0x98, 0x7d,
	0x30, 0x8d, 0x9b, 0x36, 0xa7, 0x1a, 0x9f, 0x60, 0xdb, 0x96, 0xce, 0x44, 0xd8, 0x85, 0x36, 0x3b,
	0x8d, 0x42, 0x4b, 0xb5, 0x69, 0x27, 0xa8, 0x44, 0xa6, 0x4c, 0x26, 0xfe, 0x03, 0x96, 0x96, 0xc9,
	0x6f, 0xe1, 0x5a, 0x9a, 0x16, 0xa5, 0x37, 0x50, 0xb9, 0x3e, 0xf7, 0xcb, 0xa7, 0x76, 0xe9, 0x9d,
	0x9b, 0xe9, 0xe5, 0xd3, 0xc5, 0x9e, 0xe3, 0x48, 0x63, 0x15, 0xae, 0xf2, 0x6e, 0xa7, 0xac, 0xd4,
	0x3f, 0x1e, 0x12, 0x99, 0x59, 0x0e, 0xe4, 0x33, 0x80, 0x28, 0xe4, 0xc2, 0x8a, 0x68, 0xc0, 0xbc,
	0xee, 0x2c, 0xf2, 0x2b, 0x21, 0x6d, 0x7b, 0x21, 0x17, 0x7b, 0x92, 0xc4, 0x6c, 0x45, 0x49, 0x51,
	0x2a, 0x00, 0x6a, 0x0b, 0xf7, 0xd8, 0x15, 0x67, 0x96, 0xcf, 0x04, 0xed, 0x12, 0x95, 0x1e, 0x95,
	0x00, 0x77, 0x99, 0xa0, 0xc6, 0x5f, 0x40, 0x2b, 0x91, 0xff, 0xab, 0xab, 0x9a, 0xc2, 0x98, 0x9c,
	0x2c, 0xc3, 0x94, 0xcb, 0xad, 0x43, 0x1a, 0xcb, 0xb3, 0x1d, 0x0a, 0x6d, 0x90, 0xc0, 0xe5, 0x4f,
	0x69, 0xec, 0x6c, 0x86, 0xa1, 0x30, 0xfe, 0xad, 0x2e, 0x8d, 0xe4, 0x57, 0xac, 0x37, 0x54, 0x40,
	0xa9, 0x5d, 0xae, 0x64, 0xed, 0x72, 0x92, 0x8a, 0x56, 0xcd, 0xa4, 0xa2, 0xdd, 0x84, 0x16, 0x9e,
	0x58, 0xee, 0xea, 0x74, 0x99, 0x96, 0xd9, 0x94, 0x80, 0x7d, 0xd7, 0x61, 0x64, 0x1b, 0x1a, 0x8e,
	0x6f, 0xf1, 0x3e, 0xd3, 0xf1, 0x71, 0x19, 0x4d, 0x3c, 0x74, 0x55, 0xcc, 0xba, 0xe3, 0xef, 0xf7,
	0x19, 0xf9, 0xb5, 0xce, 0x26, 0xf9, 0x0e, 0x3a, 0x04, 0x19, 0x8c, 0x2a, 0xac, 0xc6, 0x39, 0x85,
	0x95, 0x13, 0x64, 0x75, 0x63, 0x37, 0x14, 0x64, 0xcc, 0xf1, 0x19, 0x04, 0x22, 0xcd, 0xcc, 0x91,
	0x15, 0xf2, 0x39, 0x80, 0x9d, 0x64, 0x6a, 0xf1, 0x6e, 0xab, 0xec, 0x51, 0x49, 0xb3, 0xbb, 0xcc,
	0x0c, 0x39, 0xf9, 0xb3, 0x51, 0x15, 0x07, 0x65, 0x23, 0x9a, 0xa2, 0x9b, 0xa4, 0x11, 0x0d, 0x37,
	0x56, 0x07, 0xb4, 0xc7, 0xeb, 0x80, 0x11, 0xc9, 0x9a, 0xfa, 0x9e, 0x25, 0x6b, 0xfa, 0xfb, 0x95,
	0xac, 0x99, 0x02, 0xc9, 0xfa, 0x25, 0xc0, 0x50, 0x21, 0x91, 0x35, 0x98, 0xe7, 0x87, 0xe1, 0xc0,
	0x73, 0xb4, 0x56, 0xb3, 0xa8, 0xb0, 0x58, 0x90, 0x98, 0xd9, 0x59, 0xd5, 0xa6, 0x70, 0x37, 0xc4,
	0xe3, 0xc0, 0x31, 0x5e, 0x21, 0xb9, 0x1e, 0x3e, 0xe9, 0xc2, 0xa4, 0xce, 0x28, 0xd5, 0x49, 0x8e,
	0x49, 0xb5, 0x20, 0x15, 0xf7, 0x11, 0x34, 0x22, 0x16, 0xbb, 0xa1, 0xa3, 0x2f, 0xcd, 0x4b, 0x64,
	0x01, 0xee, 0x21, 0xbe, 0xa9, 0xe9, 0x8c, 0xe7, 0xd0, 0xce, 0xac, 0x23, 0x79, 0x04, 0x13, 0x0e,
	0x15, 0x54, 0xfb, 0xdb, 0xef, 0x5d, 0x66, 0x13, 0x4c, 0xa4, 0x34, 0x3e, 0x86, 0xfa, 0x33, 0xda,
	0x63, 0x98, 0x0a, 0xa6, 0x7c, 0x00, 0x75, 0xd3, 0xa7, 0x2a, 0xd9, 0xa4, 0x34, 0x95, 0x9c, 0x99,
	0x54, 0x8d, 0xfb, 0xd0, 0x50, 0x63, 0xd3, 0x8a, 0x21, 0x16, 0x5a, 0x3b, 0xa9, 0x8a, 0x9c, 0xbd,
	0x5c, 0x45, 0xad, 0x9f, 0x58, 0xe0, 0x18, 0x0f, 0xe0, 0xc6, 0xd8, 0xb8, 0x6c, 0x78, 0x35, 0xa9,
	0x96, 0x5d, 0x55, 0x8c, 0x8f, 0xe1, 0xcd, 0x0b, 0x42, 0x9c, 0x31, 0x84, 0x3f, 0x85, 0xb7, 0x2e,
	0x8c, 0x8d, 0xf2, 0xa4, 0xc9, 0x75, 0xa8, 0xf1, 0x09, 0x2c, 0x5f, 0x74, 0x3d, 0x36, 0xa6, 0xd3,
	0xfb, 0xd0, 0x1d, 0x77, 0x85, 0x33, 0x86, 0x62, 0x1d, 0x96, 0xc6, 0x5f, 0xca, 0x5c, 0xa6, 0x17,
	0x7d, 0xb3, 0x72, 0x09, 0x0a, 0x7d, 0x57, 0x55, 0x4c, 0xf1, 0x00, 0x6e, 0x8c, 0xbd, 0x6b, 0x19,
	0x43, 0xf2, 0x3e, 0x2c, 0x14, 0xde, 0xba, 0x8d, 0x41, 0xbf, 0x07, 0x73, 0x05, 0x97, 0x17, 0x79,
	0xe4, 0x6a, 0x82, 0xfc, 0x10, 0x6e, 0xbd, 0xee, 0x16, 0x61, 0x4c, 0x17, 0xef, 0xc1, 0x7c, 0xd1,
	0xa5, 0xce, 0x98, 0x3e, 0x46, 0xb7, 0x22, 0xff, 0x55, 0xbe, 0x98, 0xe6, 0x43, 0xb8, 0xfd, 0xda,
	0xa8, 0x7f, 0xcc, 0x09, 0x5b, 0x01, 0x72, 0xfe, 0xaa, 0x65, 0x0c, 0xee, 0xce, 0xc8, 0x3a, 0xbd,
	0xee, 0x00, 0x92, 0x5b, 0xd0, 0xb2, 0x69, 0xb0, 0xd3, 0x0f, 0xc2, 0x38, 0xc9, 0x9d, 0x19, 0x02,
	0x8c, 0x35, 0xb8, 0x3e, 0xe6, 0x32, 0x7b, 0xcc, 0x02, 0x8e, 0x4e, 0xef, 0x5c, 0xd6, 0x4c, 0x31,
	0xd9, 0xbf, 0xd7, 0xa0, 0x95, 0x2a, 0xe7, 0xb2, 0xda, 0x41, 0x7d, 0xb9, 0x75, 0xc3, 0xd8, 0x15,
	0x67, 0xe8, 0x33, 0xd4, 0xcc, 0xb4, 0x4e, 0x16, 0xa0, 0xd1, 0x73, 0x5f, 0x59, 0x69, 0x4a, 0x7d,
	0xbd, 0xe7, 0xbe, 0xda, 0x71, 0xc8, 0x2e, 0x34, 0x25, 0x38, 0x93, 0xb4, 0xbd, 0x7e, 0x09, 0xb3,
	0xb1, 0xe9, 0xbe, 0xc2, 0xd4, 0xed, 0xc9, 0x9e, 0x2a, 0x90, 0x3d, 0x98, 0xb2, 0x3d, 0x57, 0x5a,
	0x7a, 0x4c, 0x62, 0xd7, 0xb1, 0x44, 0x09, 0xcb, 0x96, 0xc9, 0x7c, 0x37, 0xdb, 0x76, 0x26, 0x0d,
	0xfe, 0x33, 0x00, 0x74, 0x84, 0xd0, 0xf7, 0xd6, 0xb7, 0xd7, 0x25, 0x2c, 0xdb, 0x0b, 0x76, 0x2a,
	0x76, 0x24, 0x89, 0x89, 0x7e, 0x14, 0x16, 0xc9, 0xaf, 0xb3, 0x7e, 0x88, 0xba, 0xb0, 0x5e, 0x29,
	0x99, 0xe4, 0xbf, 0x19, 0x9e, 0x66, 0x7c, 0x96, 0x5f, 0x42, 0x5d, 0x84, 0x94, 0x0b, 0x7d, 0x2f,
	0xfd, 0xc7, 0x25, 0xc6, 0x23, 0xd1, 0x4d, 0x45, 0x65, 0x7c, 0x02, 0x4d, 0x93, 0xf1, 0x28, 0x0c,
	0x38, 0x3a, 0x7f, 0x76, 0xe8, 0x24, 0x27, 0x16, 0xcb, 0x98, 0xe0, 0xcc, 0x38, 0xa7, 0x7d, 0x96,
	0xa4, 0xe8, 0xea, 0xaa, 0xf1, 0x4f, 0x35, 0x98, 0x4a, 0x42, 0xc6, 0x1d, 0x51, 0x90, 0x7d, 0xbd,
	0x00, 0x0d, 0xd7, 0xb1, 0xb8, 0x88, 0x35, 0xa5, 0x4e, 0x47, 0xee, 0x40, 0xcd, 0xa3, 0x41, 0x92,
	0xc9, 0xee, 0xd1, 0x80, 0x5c, 0x87, 0x49, 0x8f, 0x06, 0x96, 0x13, 0xda, 0xda, 0xaf, 0x6d, 0x78,
	0x34, 0xd8, 0x0e, 0x6d, 0xf2, 0x16, 0x4c, 0x25, 0xa1, 0xa8, 0x25, 0x6d, 0xaf, 0xca, 0x66, 0x6f,
	0x27, 0xb0, 0x2f, 0x63, 0x8f, 0x6c, 0x42, 0x83, 0x0e, 0xc4, 0x61, 0x18, 0xeb, 0xfd, 0x2d, 0xb1,
	0x88, 0x5f, 0x72, 0x16, 0xef, 0x04, 0x07, 0xa1, 0xa9, 0x29, 0xd3, 0xb7, 0x16, 0x93, 0x65, 0xdf,
	0x5a, 0x24, 0xd3, 0xce, 0xbc, 0xb5, 0x30, 0x60, 0x5a, 0xcf, 0xc1, 0xea, 0xc5, 0x2e, 0x3b, 0xd0,
	0xf9, 0xf2, 0x6d, 0x35, 0x93, 0x4d, 0x09, 0x22, 0x3b, 0x18, 0x2c, 0x63, 0x57, 0x2d, 0xec, 0xea,
	0x7e, 0xf9, 0xae, 0x36, 0x5c, 0xec, 0xac, 0x41, 0xf1, 0x9f, 0x3c, 0x57, 0x5f, 0xc4, 0x05, 0x15,
	0x03, 0x8e, 0x2e, 0x64, 0x29, 0x61, 0x19, 0x32, 0xdb, 0x47, 0x4a, 0xfc, 0x8a, 0x8e, 0x25, 0xe3,
	0x5f, 0x6a, 0xd0, 0x4a, 0x0f, 0x2a, 0x79, 0x00, 0xf3, 0xe9, 0x23, 0x8d, 0x6c, 0xf0, 0xa9, 0x5c,
	0xa2, 0xf4, 0x01, 0x47, 0x36, 0xfe, 0xfc, 0x00, 0x16, 0x86, 0xef, 0x34, 0xb2, 0x34, 0xca, 0xd1,
	0x18, 0x3e, 0xe2, 0xc8, 0x12, 0x8d, 0x3c, 0xd5, 0xa8, 0x7d, 0xc7, 0xa7, 0x1a, 0xef, 0x42, 0x27,
	0xd3, 0xb3, 0x25, 0xfd, 0x48, 0xfd, 0xdd, 0xff, 0x5a, 0x06, 0x2e, 0x55, 0x46, 0xfa, 0xaa, 0xa3,
	0x9e, 0x7f, 0xd5, 0xa1, 0x5e, 0x46, 0x61, 0xdc, 0x50, 0xca, 0x9f, 0x53, 0xaf, 0xaa, 0x4c, 0x4d,
	0x27, 0xe7, 0x83, 0xbe, 0xaf, 0xde, 0x98, 0xc9, 0xb2, 0xf3, 0x91, 0x43, 0xd2, 0x5b, 0x82, 0xce,
	0xb3, 0x2a, 0x4b, 0xd9, 0xf6, 0xa4, 0x37, 0xa7, 0x15, 0x44, 0x09, 0xd9, 0x46, 0xe7, 0xcf, 0x54,
	0x54, 0xc6, 0xdf, 0x54, 0xa0, 0x8e, 0xc2, 0x5e, 0xf8, 0xc2, 0x68, 0x09, 0x9a, 0xce, 0x20, 0xa6,
	0x99, 0xd7, 0x5a, 0x69, 0x3d, 0x5d, 0x9d, 0xda, 0xe8, 0x9b, 0x17, 0xd4, 0xa4, 0x13, 0xe5, 0xdf,
	0xbc, 0xa0, 0x12, 0xd5, 0x74, 0xc6, 0x5f, 0x41, 0x33, 0x91, 0xbd, 0xe4, 0x3d, 0x8b, 0x8e, 0x80,
	0xf5, 0x8b, 0x02, 0x7c, 0xa8, 0x55, 0xcd, 0x3c, 0xd4, 0xea, 0x40, 0x8d, 0xb3, 0xd3, 0x44, 0x57,
	0x70, 0x86, 0x6f, 0xa5, 0x0e, 0xa8, 0xcd, 0xb4, 0xa2, 0xc0, 0x32, 0x8e, 0xd6, 0xed, 0x07, 0x5a,
	0x3d, 0x60, 0x59, 0xc2, 0x62, 0x1a, 0x1c, 0xe9, 0x57, 0x2e, 0x58, 0x36, 0x62, 0x68, 0xa5, 0xb7,
	0x65, 0x92, 0xb5, 0x3d, 0x1c, 0x80, 0xad, 0x06, 0x10, 0x79, 0x54, 0xe8, 0xc5, 0xc0, 0xb2, 0xc4,
	0x3a, 0x88, 0xb8, 0x8e, 0xc1, 0x65, 0x11, 0x97, 0xd2, 0xf5, 0x99, 0x36, 0x5d, 0x58, 0x26, 0x37,
	0xa0, 0xe9, 0x53, 0x7e, 0x94, 0xd1, 0x51, 0x93, 0xb2, 0xfe, 0x65, 0xec, 0x19, 0x7f, 0x5d, 0x81,
	0xe9, 0xdc, 0xed, 0x5a, 0xa2, 0xff, 0x2a, 0x43, 0xfd, 0xb7, 0x08, 0x5a, 0xe1, 0x25, 0xcf, 0xd1,
	0xb4, 0xfa, 0x7b, 0x06, 0xad, 0x44, 0xd5, 0x71, 0x1d, 0x62, 0x5c, 0x42, 0x39, 0x49, 0x9d, 0x6c,
	0x0e, 0x19, 0xac, 0x7c, 0x00, 0x30, 0x7c, 0x03, 0x48, 0x08, 0xcc, 0x0c, 0x6b, 0x5f, 0x84, 0x01,
	0xeb, 0xbc, 0x41, 0x66, 0x61, 0x3a, 0x03, 0x7b, 0xf2, 0xa2, 0x53, 0x59, 0xf9, 0x0d, 0x4c, 0x65,
	0x1f, 0x96, 0x91, 0x79, 0xe8, 0x64, 0xeb, 0x9a, 0xf0, 0x06, 0x2c, 0x64, 0xa1, 0x8f, 0x03, 0x3b,
	0x1c, 0xc4, 0xb4, 0xcf, 0x3a, 0x15, 0x72, 0x1d, 0xe6, 0xb2, 0x4d, 0x5b, 0xd2, 0x19, 0xde, 0xde,
	0xed, 0x54, 0x57, 0x9e, 0x41, 0x6b, 0x7b, 0x77, 0x43, 0x88, 0x78, 0xd3, 0x95, 0x1e, 0x5f, 0x27,
	0xad, 0xec, 0xc5, 0xa1, 0x60, 0xb6, 0xe8, 0xbc, 0x41, 0x16, 0x60, 0x36, 0x85, 0x3e, 0x89, 0x43,
	0xff, 0x99, 0x7b, 0x2c, 0x59, 0x12, 0x98, 0x51, 0xe0, 0xa7, 0x6e, 0xff, 0xf0, 0x99, 0x7b, 0xc4,
	0x3a, 0xd5, 0x95, 0x7f, 0xac, 0x40, 0x67, 0xd4, 0x15, 0x20, 0x5d, 0x98, 0x1f, 0x85, 0xe9, 0x01,
	0xdf, 0x86, 0x1b, 0xa3, 0x2d, 0xd9, 0x41, 0xdf, 0x84, 0xeb, 0xa3, 0xcd, 0xe9, 0xc0, 0xe5, 0x64,
	0xcf, 0x71, 0x7d, 0xf2, 0x62, 0x7b, 0xb7, 0x53, 0x2b, 0x62, 0xfb, 0x24, 0xa6, 0xfd, 0x2d, 0x2f,
	0xe4, 0xac, 0x33, 0x51, 0xd4, 0x9c, 0xc6, 0x22, 0x9d, 0xfa, 0xca, 0x27, 0x00, 0x43, 0x3d, 0x20,
	0x97, 0x64, 0x58, 0xfb, 0x22, 0x8c, 0x7d, 0xea, 0x75, 0xde, 0xc8, 0x43, 0x91, 0xaf, 0xd3, 0xa9,
	0xac, 0x7c, 0x01, 0x60, 0x66, 0x1f, 0xac, 0xcd, 0x0c, 0x6b, 0x7a, 0xc2, 0xf3, 0xd0, 0x19, 0xc2,
	0xf6, 0xdd, 0xa0, 0xef, 0xc9, 0x79, 0x2e, 0x02, 0xc9, 0x68, 0xd2, 0x50, 0xa0, 0xf0, 0x77, 0xaa,
	0x2b, 0x1f, 0x41, 0x67, 0xd4, 0x54, 0x90, 0x26, 0x4c, 0x68, 0x5e, 0x53, 0xd0, 0x94, 0xf1, 0x36,
	0x1f, 0xc4, 0x92, 0x07, 0x40, 0x63, 0x83, 0x73, 0x97, 0x8b, 0x4e, 0x75, 0xe5, 0x1e, 0xcc, 0xe4,
	0xed, 0x95, 0x6c, 0x4d, 0xc7, 0x3e, 0x0d, 0xad, 0x17, 0x31, 0x0d, 0xb8, 0x47, 0x05, 0xeb, 0x54,
	0x56, 0xee, 0x0c, 0xdd, 0x07, 0x44, 0x6d, 0x40, 0x75, 0x6b, 0xab, 0xf3, 0x86, 0xfc, 0xdf, 0xd8,
	0xc1, 0x49, 0xcd, 0xa2, 0xf2, 0x7a, 0x32, 0x08, 0xf0, 0xc5, 0x13, 0x22, 0xdd, 0x80, 0x85, 0x73,
	0x40, 0x3d, 0xac, 0x3b, 0xb0, 0x74, 0xae, 0x29, 0x5d, 0xee, 0x4e, 0x65, 0xfd, 0xef, 0xea, 0x50,
	0xdd, 0xde, 0x25, 0x5c, 0x5f, 0xfa, 0xab, 0xcf, 0x45, 0xe4, 0x7e, 0xc9, 0xfb, 0xaa, 0xf4, 0xeb,
	0xd2, 0xd2, 0xfa, 0x25, 0x29, 0x22, 0xef, 0x8c, 0x38, 0xd0, 0x50, 0x97, 0x7f, 0xe4, 0x5e, 0x19,
	0x6a, 0x7d, 0x4d, 0xb8, 0xf4, 0x7e, 0x79, 0x64, 0xd9, 0xcb, 0xb7, 0x30, 0x93, 0xcf, 0xc3, 0x21,
	0x65, 0x6e, 0xd2, 0x46, 0x33, 0x77, 0x96, 0x56, 0xca, 0xd8, 0x5f, 0xed, 0x32, 0x7e, 0x03, 0xcd,
	0xe4, 0xe3, 0x10, 0x29, 0x7b, 0xf5, 0xa7, 0x3e, 0x24, 0x2d, 0xad, 0x5d, 0x06, 0x5d, 0x4e, 0x2f,
	0xe9, 0x6b, 0x7f, 0xfb, 0xf3, 0xd2, 0x7d, 0xa9, 0x4f, 0x3b, 0xa5, 0xfb, 0x4a, 0xbf, 0x3b, 0x09,
	0x98, 0xca, 0xa6, 0x39, 0x91, 0x07, 0x65, 0x18, 0xe4, 0x12, 0xae, 0x96, 0x2e, 0x4d, 0xc2, 0x7b,
	0x0d, 0x7c, 0x30, 0xfe, 0xc1, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0xe2, 0x6d, 0x15, 0x1e, 0x66,
	0x3e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DMClient is the client API for DM service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DMClient interface {
	// 获取分段弹幕
	DmSegMobile(ctx context.Context, in *DmSegMobileReq, opts ...grpc.CallOption) (*DmSegMobileReply, error)
	// 客户端弹幕元数据 字幕、分段、防挡蒙版等
	DmView(ctx context.Context, in *DmViewReq, opts ...grpc.CallOption) (*DmViewReply, error)
	// 修改弹幕配置
	DmPlayerConfig(ctx context.Context, in *DmPlayerConfigReq, opts ...grpc.CallOption) (*Response, error)
	// ott弹幕列表
	DmSegOtt(ctx context.Context, in *DmSegOttReq, opts ...grpc.CallOption) (*DmSegOttReply, error)
	// SDK弹幕列表
	DmSegSDK(ctx context.Context, in *DmSegSDKReq, opts ...grpc.CallOption) (*DmSegSDKReply, error)
	//
	DmExpoReport(ctx context.Context, in *DmExpoReportReq, opts ...grpc.CallOption) (*DmExpoReportRes, error)
}

type dMClient struct {
	cc *grpc.ClientConn
}

func NewDMClient(cc *grpc.ClientConn) DMClient {
	return &dMClient{cc}
}

func (c *dMClient) DmSegMobile(ctx context.Context, in *DmSegMobileReq, opts ...grpc.CallOption) (*DmSegMobileReply, error) {
	out := new(DmSegMobileReply)
	err := c.cc.Invoke(ctx, "/bilibili.community.service.dm.v1.DM/DmSegMobile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dMClient) DmView(ctx context.Context, in *DmViewReq, opts ...grpc.CallOption) (*DmViewReply, error) {
	out := new(DmViewReply)
	err := c.cc.Invoke(ctx, "/bilibili.community.service.dm.v1.DM/DmView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dMClient) DmPlayerConfig(ctx context.Context, in *DmPlayerConfigReq, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/bilibili.community.service.dm.v1.DM/DmPlayerConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dMClient) DmSegOtt(ctx context.Context, in *DmSegOttReq, opts ...grpc.CallOption) (*DmSegOttReply, error) {
	out := new(DmSegOttReply)
	err := c.cc.Invoke(ctx, "/bilibili.community.service.dm.v1.DM/DmSegOtt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dMClient) DmSegSDK(ctx context.Context, in *DmSegSDKReq, opts ...grpc.CallOption) (*DmSegSDKReply, error) {
	out := new(DmSegSDKReply)
	err := c.cc.Invoke(ctx, "/bilibili.community.service.dm.v1.DM/DmSegSDK", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dMClient) DmExpoReport(ctx context.Context, in *DmExpoReportReq, opts ...grpc.CallOption) (*DmExpoReportRes, error) {
	out := new(DmExpoReportRes)
	err := c.cc.Invoke(ctx, "/bilibili.community.service.dm.v1.DM/DmExpoReport", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DMServer is the server API for DM service.
type DMServer interface {
	// 获取分段弹幕
	DmSegMobile(context.Context, *DmSegMobileReq) (*DmSegMobileReply, error)
	// 客户端弹幕元数据 字幕、分段、防挡蒙版等
	DmView(context.Context, *DmViewReq) (*DmViewReply, error)
	// 修改弹幕配置
	DmPlayerConfig(context.Context, *DmPlayerConfigReq) (*Response, error)
	// ott弹幕列表
	DmSegOtt(context.Context, *DmSegOttReq) (*DmSegOttReply, error)
	// SDK弹幕列表
	DmSegSDK(context.Context, *DmSegSDKReq) (*DmSegSDKReply, error)
	//
	DmExpoReport(context.Context, *DmExpoReportReq) (*DmExpoReportRes, error)
}

// UnimplementedDMServer can be embedded to have forward compatible implementations.
type UnimplementedDMServer struct {
}

func (*UnimplementedDMServer) DmSegMobile(ctx context.Context, req *DmSegMobileReq) (*DmSegMobileReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DmSegMobile not implemented")
}
func (*UnimplementedDMServer) DmView(ctx context.Context, req *DmViewReq) (*DmViewReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DmView not implemented")
}
func (*UnimplementedDMServer) DmPlayerConfig(ctx context.Context, req *DmPlayerConfigReq) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DmPlayerConfig not implemented")
}
func (*UnimplementedDMServer) DmSegOtt(ctx context.Context, req *DmSegOttReq) (*DmSegOttReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DmSegOtt not implemented")
}
func (*UnimplementedDMServer) DmSegSDK(ctx context.Context, req *DmSegSDKReq) (*DmSegSDKReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DmSegSDK not implemented")
}
func (*UnimplementedDMServer) DmExpoReport(ctx context.Context, req *DmExpoReportReq) (*DmExpoReportRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DmExpoReport not implemented")
}

func RegisterDMServer(s *grpc.Server, srv DMServer) {
	s.RegisterService(&_DM_serviceDesc, srv)
}

func _DM_DmSegMobile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DmSegMobileReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DMServer).DmSegMobile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.community.service.dm.v1.DM/DmSegMobile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DMServer).DmSegMobile(ctx, req.(*DmSegMobileReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DM_DmView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DmViewReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DMServer).DmView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.community.service.dm.v1.DM/DmView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DMServer).DmView(ctx, req.(*DmViewReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DM_DmPlayerConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DmPlayerConfigReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DMServer).DmPlayerConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.community.service.dm.v1.DM/DmPlayerConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DMServer).DmPlayerConfig(ctx, req.(*DmPlayerConfigReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DM_DmSegOtt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DmSegOttReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DMServer).DmSegOtt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.community.service.dm.v1.DM/DmSegOtt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DMServer).DmSegOtt(ctx, req.(*DmSegOttReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DM_DmSegSDK_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DmSegSDKReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DMServer).DmSegSDK(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.community.service.dm.v1.DM/DmSegSDK",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DMServer).DmSegSDK(ctx, req.(*DmSegSDKReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DM_DmExpoReport_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DmExpoReportReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DMServer).DmExpoReport(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bilibili.community.service.dm.v1.DM/DmExpoReport",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DMServer).DmExpoReport(ctx, req.(*DmExpoReportReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _DM_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bilibili.community.service.dm.v1.DM",
	HandlerType: (*DMServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DmSegMobile",
			Handler:    _DM_DmSegMobile_Handler,
		},
		{
			MethodName: "DmView",
			Handler:    _DM_DmView_Handler,
		},
		{
			MethodName: "DmPlayerConfig",
			Handler:    _DM_DmPlayerConfig_Handler,
		},
		{
			MethodName: "DmSegOtt",
			Handler:    _DM_DmSegOtt_Handler,
		},
		{
			MethodName: "DmSegSDK",
			Handler:    _DM_DmSegSDK_Handler,
		},
		{
			MethodName: "DmExpoReport",
			Handler:    _DM_DmExpoReport_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc_api/bilibili/community/service/dm/v1/dm.proto",
}
