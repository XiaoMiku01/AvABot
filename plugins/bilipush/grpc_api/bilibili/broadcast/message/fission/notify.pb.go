// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc_api/bilibili/broadcast/message/fission/notify.proto

package bilibili_broadcast_message_fission

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GameNotifyReply struct {
	// 类型字段
	Type uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 数据字段
	Data                 string   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameNotifyReply) Reset()         { *m = GameNotifyReply{} }
func (m *GameNotifyReply) String() string { return proto.CompactTextString(m) }
func (*GameNotifyReply) ProtoMessage()    {}
func (*GameNotifyReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5b9564f036252943, []int{0}
}

func (m *GameNotifyReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameNotifyReply.Unmarshal(m, b)
}
func (m *GameNotifyReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameNotifyReply.Marshal(b, m, deterministic)
}
func (m *GameNotifyReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameNotifyReply.Merge(m, src)
}
func (m *GameNotifyReply) XXX_Size() int {
	return xxx_messageInfo_GameNotifyReply.Size(m)
}
func (m *GameNotifyReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GameNotifyReply.DiscardUnknown(m)
}

var xxx_messageInfo_GameNotifyReply proto.InternalMessageInfo

func (m *GameNotifyReply) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *GameNotifyReply) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func init() {
	proto.RegisterType((*GameNotifyReply)(nil), "bilibili.broadcast.message.fission.GameNotifyReply")
}

func init() {
	proto.RegisterFile("grpc_api/bilibili/broadcast/message/fission/notify.proto", fileDescriptor_5b9564f036252943)
}

var fileDescriptor_5b9564f036252943 = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x8e, 0xb1, 0xaa, 0xc2, 0x30,
	0x18, 0x46, 0xc9, 0xe5, 0xa2, 0x18, 0x10, 0x21, 0x83, 0x94, 0xba, 0x94, 0x4e, 0x9d, 0xfe, 0x88,
	0x5d, 0xf4, 0x01, 0xd4, 0xcd, 0xa1, 0xab, 0x83, 0x24, 0x6d, 0x12, 0x02, 0x6d, 0x13, 0x9a, 0x38,
	0xf4, 0xed, 0xa5, 0x69, 0xab, 0xe0, 0xe2, 0x10, 0xf8, 0x09, 0x9c, 0x73, 0x3e, 0x7c, 0x54, 0x9d,
	0x2d, 0x1f, 0xcc, 0x6a, 0xca, 0x75, 0xad, 0x87, 0x47, 0x79, 0x67, 0x58, 0x55, 0x32, 0xe7, 0x69,
	0x23, 0x9c, 0x63, 0x4a, 0x50, 0xa9, 0x9d, 0xd3, 0xa6, 0xa5, 0xad, 0xf1, 0x5a, 0xf6, 0x60, 0x3b,
	0xe3, 0x0d, 0x49, 0x67, 0x00, 0xde, 0x00, 0x4c, 0x00, 0x4c, 0x40, 0xbc, 0x53, 0xc6, 0xa8, 0x5a,
	0xd0, 0x40, 0xf0, 0xa7, 0xa4, 0xa2, 0xb1, 0x7e, 0x12, 0xa4, 0x27, 0xbc, 0xb9, 0xb2, 0x46, 0xdc,
	0x82, 0xb4, 0x10, 0xb6, 0xee, 0x09, 0xc1, 0xff, 0xbe, 0xb7, 0x22, 0x42, 0x09, 0xca, 0xd6, 0x45,
	0xb8, 0x87, 0xbf, 0x8a, 0x79, 0x16, 0xfd, 0x25, 0x28, 0x5b, 0x15, 0xe1, 0x3e, 0x48, 0xbc, 0xbc,
	0x8c, 0x09, 0x72, 0xc7, 0xf8, 0x63, 0x21, 0x5b, 0x18, 0x8b, 0x30, 0x17, 0xe1, 0x3c, 0x14, 0xe3,
	0x1c, 0x7e, 0xaf, 0x85, 0xaf, 0x35, 0x7b, 0xc4, 0x17, 0x41, 0x93, 0xbf, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x1d, 0xc4, 0x80, 0x53, 0x26, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FissionClient is the client API for Fission service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FissionClient interface {
	//
	GameNotify(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (Fission_GameNotifyClient, error)
}

type fissionClient struct {
	cc *grpc.ClientConn
}

func NewFissionClient(cc *grpc.ClientConn) FissionClient {
	return &fissionClient{cc}
}

func (c *fissionClient) GameNotify(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (Fission_GameNotifyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Fission_serviceDesc.Streams[0], "/bilibili.broadcast.message.fission.Fission/GameNotify", opts...)
	if err != nil {
		return nil, err
	}
	x := &fissionGameNotifyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Fission_GameNotifyClient interface {
	Recv() (*GameNotifyReply, error)
	grpc.ClientStream
}

type fissionGameNotifyClient struct {
	grpc.ClientStream
}

func (x *fissionGameNotifyClient) Recv() (*GameNotifyReply, error) {
	m := new(GameNotifyReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FissionServer is the server API for Fission service.
type FissionServer interface {
	//
	GameNotify(*emptypb.Empty, Fission_GameNotifyServer) error
}

// UnimplementedFissionServer can be embedded to have forward compatible implementations.
type UnimplementedFissionServer struct {
}

func (*UnimplementedFissionServer) GameNotify(req *emptypb.Empty, srv Fission_GameNotifyServer) error {
	return status.Errorf(codes.Unimplemented, "method GameNotify not implemented")
}

func RegisterFissionServer(s *grpc.Server, srv FissionServer) {
	s.RegisterService(&_Fission_serviceDesc, srv)
}

func _Fission_GameNotify_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(emptypb.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FissionServer).GameNotify(m, &fissionGameNotifyServer{stream})
}

type Fission_GameNotifyServer interface {
	Send(*GameNotifyReply) error
	grpc.ServerStream
}

type fissionGameNotifyServer struct {
	grpc.ServerStream
}

func (x *fissionGameNotifyServer) Send(m *GameNotifyReply) error {
	return x.ServerStream.SendMsg(m)
}

var _Fission_serviceDesc = grpc.ServiceDesc{
	ServiceName: "bilibili.broadcast.message.fission.Fission",
	HandlerType: (*FissionServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GameNotify",
			Handler:       _Fission_GameNotify_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc_api/bilibili/broadcast/message/fission/notify.proto",
}
