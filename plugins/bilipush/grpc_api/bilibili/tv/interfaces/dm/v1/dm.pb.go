// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc_api/bilibili/tv/interfaces/dm/v1/dm.proto

package bilibili_tv_interfaces_dm_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//
type Chronos struct {
	//
	Md5 string `protobuf:"bytes,1,opt,name=md5,proto3" json:"md5,omitempty"`
	//
	File string `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	//
	Sign                 string   `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chronos) Reset()         { *m = Chronos{} }
func (m *Chronos) String() string { return proto.CompactTextString(m) }
func (*Chronos) ProtoMessage()    {}
func (*Chronos) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{0}
}

func (m *Chronos) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chronos.Unmarshal(m, b)
}
func (m *Chronos) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chronos.Marshal(b, m, deterministic)
}
func (m *Chronos) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chronos.Merge(m, src)
}
func (m *Chronos) XXX_Size() int {
	return xxx_messageInfo_Chronos.Size(m)
}
func (m *Chronos) XXX_DiscardUnknown() {
	xxx_messageInfo_Chronos.DiscardUnknown(m)
}

var xxx_messageInfo_Chronos proto.InternalMessageInfo

func (m *Chronos) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *Chronos) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *Chronos) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

// 互动弹幕条目信息
type CommandDm struct {
	// 弹幕id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 对象视频cid
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 发送者mid
	Mid string `protobuf:"bytes,3,opt,name=mid,proto3" json:"mid,omitempty"`
	// 互动弹幕指令
	Command string `protobuf:"bytes,4,opt,name=command,proto3" json:"command,omitempty"`
	// 互动弹幕正文
	Content string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	// 出现时间
	Progress int32 `protobuf:"varint,6,opt,name=progress,proto3" json:"progress,omitempty"`
	// 创建时间
	Ctime string `protobuf:"bytes,7,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 发布时间
	Mtime string `protobuf:"bytes,8,opt,name=mtime,proto3" json:"mtime,omitempty"`
	// 扩展json数据
	Extra string `protobuf:"bytes,9,opt,name=extra,proto3" json:"extra,omitempty"`
	// 弹幕id str类型
	IdStr                string   `protobuf:"bytes,10,opt,name=idStr,proto3" json:"idStr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandDm) Reset()         { *m = CommandDm{} }
func (m *CommandDm) String() string { return proto.CompactTextString(m) }
func (*CommandDm) ProtoMessage()    {}
func (*CommandDm) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{1}
}

func (m *CommandDm) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandDm.Unmarshal(m, b)
}
func (m *CommandDm) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandDm.Marshal(b, m, deterministic)
}
func (m *CommandDm) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandDm.Merge(m, src)
}
func (m *CommandDm) XXX_Size() int {
	return xxx_messageInfo_CommandDm.Size(m)
}
func (m *CommandDm) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandDm.DiscardUnknown(m)
}

var xxx_messageInfo_CommandDm proto.InternalMessageInfo

func (m *CommandDm) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CommandDm) GetOid() int64 {
	if m != nil {
		return m.Oid
	}
	return 0
}

func (m *CommandDm) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

func (m *CommandDm) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *CommandDm) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *CommandDm) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *CommandDm) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *CommandDm) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *CommandDm) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *CommandDm) GetIdStr() string {
	if m != nil {
		return m.IdStr
	}
	return ""
}

// ott互动弹幕条目信息
type CommandDmOtt struct {
	// 弹幕id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 对象视频cid
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 发送者mid
	Mid int64 `protobuf:"varint,3,opt,name=mid,proto3" json:"mid,omitempty"`
	//
	Type int32 `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	// 互动弹幕指令
	Command string `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`
	// 互动弹幕正文
	Content string `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	//
	State int32 `protobuf:"varint,7,opt,name=state,proto3" json:"state,omitempty"`
	// 出现时间
	Progress int32 `protobuf:"varint,8,opt,name=progress,proto3" json:"progress,omitempty"`
	// 创建时间
	Ctime string `protobuf:"bytes,9,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 发布时间
	Mtime string `protobuf:"bytes,10,opt,name=mtime,proto3" json:"mtime,omitempty"`
	// 扩展json数据
	Extra string `protobuf:"bytes,11,opt,name=extra,proto3" json:"extra,omitempty"`
	// 弹幕id str类型
	IdStr                string   `protobuf:"bytes,12,opt,name=id_str,json=idStr,proto3" json:"id_str,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandDmOtt) Reset()         { *m = CommandDmOtt{} }
func (m *CommandDmOtt) String() string { return proto.CompactTextString(m) }
func (*CommandDmOtt) ProtoMessage()    {}
func (*CommandDmOtt) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{2}
}

func (m *CommandDmOtt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandDmOtt.Unmarshal(m, b)
}
func (m *CommandDmOtt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandDmOtt.Marshal(b, m, deterministic)
}
func (m *CommandDmOtt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandDmOtt.Merge(m, src)
}
func (m *CommandDmOtt) XXX_Size() int {
	return xxx_messageInfo_CommandDmOtt.Size(m)
}
func (m *CommandDmOtt) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandDmOtt.DiscardUnknown(m)
}

var xxx_messageInfo_CommandDmOtt proto.InternalMessageInfo

func (m *CommandDmOtt) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CommandDmOtt) GetOid() int64 {
	if m != nil {
		return m.Oid
	}
	return 0
}

func (m *CommandDmOtt) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *CommandDmOtt) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *CommandDmOtt) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *CommandDmOtt) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *CommandDmOtt) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *CommandDmOtt) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *CommandDmOtt) GetCtime() string {
	if m != nil {
		return m.Ctime
	}
	return ""
}

func (m *CommandDmOtt) GetMtime() string {
	if m != nil {
		return m.Mtime
	}
	return ""
}

func (m *CommandDmOtt) GetExtra() string {
	if m != nil {
		return m.Extra
	}
	return ""
}

func (m *CommandDmOtt) GetIdStr() string {
	if m != nil {
		return m.IdStr
	}
	return ""
}

//
type CommandDmsOttReply struct {
	//
	CommandDmsOtt        []*CommandDmOtt `protobuf:"bytes,1,rep,name=command_dms_ott,json=commandDmsOtt,proto3" json:"command_dms_ott,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CommandDmsOttReply) Reset()         { *m = CommandDmsOttReply{} }
func (m *CommandDmsOttReply) String() string { return proto.CompactTextString(m) }
func (*CommandDmsOttReply) ProtoMessage()    {}
func (*CommandDmsOttReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{3}
}

func (m *CommandDmsOttReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandDmsOttReply.Unmarshal(m, b)
}
func (m *CommandDmsOttReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandDmsOttReply.Marshal(b, m, deterministic)
}
func (m *CommandDmsOttReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandDmsOttReply.Merge(m, src)
}
func (m *CommandDmsOttReply) XXX_Size() int {
	return xxx_messageInfo_CommandDmsOttReply.Size(m)
}
func (m *CommandDmsOttReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandDmsOttReply.DiscardUnknown(m)
}

var xxx_messageInfo_CommandDmsOttReply proto.InternalMessageInfo

func (m *CommandDmsOttReply) GetCommandDmsOtt() []*CommandDmOtt {
	if m != nil {
		return m.CommandDmsOtt
	}
	return nil
}

//
type CommandDmsOttReq struct {
	//
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	//
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	//
	Mid                  int64    `protobuf:"varint,3,opt,name=mid,proto3" json:"mid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommandDmsOttReq) Reset()         { *m = CommandDmsOttReq{} }
func (m *CommandDmsOttReq) String() string { return proto.CompactTextString(m) }
func (*CommandDmsOttReq) ProtoMessage()    {}
func (*CommandDmsOttReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{4}
}

func (m *CommandDmsOttReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommandDmsOttReq.Unmarshal(m, b)
}
func (m *CommandDmsOttReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommandDmsOttReq.Marshal(b, m, deterministic)
}
func (m *CommandDmsOttReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommandDmsOttReq.Merge(m, src)
}
func (m *CommandDmsOttReq) XXX_Size() int {
	return xxx_messageInfo_CommandDmsOttReq.Size(m)
}
func (m *CommandDmsOttReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CommandDmsOttReq.DiscardUnknown(m)
}

var xxx_messageInfo_CommandDmsOttReq proto.InternalMessageInfo

func (m *CommandDmsOttReq) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *CommandDmsOttReq) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *CommandDmsOttReq) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

// 弹幕ai云屏蔽列表
type DanmakuAIFlag struct {
	// 弹幕ai云屏蔽条目
	DmFlags              []*DanmakuFlag `protobuf:"bytes,1,rep,name=dm_flags,json=dmFlags,proto3" json:"dm_flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DanmakuAIFlag) Reset()         { *m = DanmakuAIFlag{} }
func (m *DanmakuAIFlag) String() string { return proto.CompactTextString(m) }
func (*DanmakuAIFlag) ProtoMessage()    {}
func (*DanmakuAIFlag) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{5}
}

func (m *DanmakuAIFlag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmakuAIFlag.Unmarshal(m, b)
}
func (m *DanmakuAIFlag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmakuAIFlag.Marshal(b, m, deterministic)
}
func (m *DanmakuAIFlag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmakuAIFlag.Merge(m, src)
}
func (m *DanmakuAIFlag) XXX_Size() int {
	return xxx_messageInfo_DanmakuAIFlag.Size(m)
}
func (m *DanmakuAIFlag) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmakuAIFlag.DiscardUnknown(m)
}

var xxx_messageInfo_DanmakuAIFlag proto.InternalMessageInfo

func (m *DanmakuAIFlag) GetDmFlags() []*DanmakuFlag {
	if m != nil {
		return m.DmFlags
	}
	return nil
}

// 弹幕条目
type DanmakuElem struct {
	// 弹幕dmid
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 弹幕出现位置(单位ms)
	Progress int32 `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
	// 弹幕类型
	Mode int32 `protobuf:"varint,3,opt,name=mode,proto3" json:"mode,omitempty"`
	// 弹幕字号
	Fontsize int32 `protobuf:"varint,4,opt,name=fontsize,proto3" json:"fontsize,omitempty"`
	// 弹幕颜色
	Color uint32 `protobuf:"varint,5,opt,name=color,proto3" json:"color,omitempty"`
	// 发送着mid hash
	MidHash string `protobuf:"bytes,6,opt,name=midHash,proto3" json:"midHash,omitempty"`
	// 弹幕正文
	Content string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	// 发送时间
	Ctime int64 `protobuf:"varint,8,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 权重 区间:[1,10]
	Weight int32 `protobuf:"varint,9,opt,name=weight,proto3" json:"weight,omitempty"`
	// 动作
	Action string `protobuf:"bytes,10,opt,name=action,proto3" json:"action,omitempty"`
	// 弹幕池
	Pool int32 `protobuf:"varint,11,opt,name=pool,proto3" json:"pool,omitempty"`
	// 弹幕dmid str
	IdStr string `protobuf:"bytes,12,opt,name=idStr,proto3" json:"idStr,omitempty"`
	// 弹幕属性位(bin求AND)
	// bit0:保护 bit1:直播 bit2:高赞
	Attr                 int32    `protobuf:"varint,13,opt,name=attr,proto3" json:"attr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DanmakuElem) Reset()         { *m = DanmakuElem{} }
func (m *DanmakuElem) String() string { return proto.CompactTextString(m) }
func (*DanmakuElem) ProtoMessage()    {}
func (*DanmakuElem) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{6}
}

func (m *DanmakuElem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmakuElem.Unmarshal(m, b)
}
func (m *DanmakuElem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmakuElem.Marshal(b, m, deterministic)
}
func (m *DanmakuElem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmakuElem.Merge(m, src)
}
func (m *DanmakuElem) XXX_Size() int {
	return xxx_messageInfo_DanmakuElem.Size(m)
}
func (m *DanmakuElem) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmakuElem.DiscardUnknown(m)
}

var xxx_messageInfo_DanmakuElem proto.InternalMessageInfo

func (m *DanmakuElem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DanmakuElem) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *DanmakuElem) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *DanmakuElem) GetFontsize() int32 {
	if m != nil {
		return m.Fontsize
	}
	return 0
}

func (m *DanmakuElem) GetColor() uint32 {
	if m != nil {
		return m.Color
	}
	return 0
}

func (m *DanmakuElem) GetMidHash() string {
	if m != nil {
		return m.MidHash
	}
	return ""
}

func (m *DanmakuElem) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *DanmakuElem) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *DanmakuElem) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *DanmakuElem) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *DanmakuElem) GetPool() int32 {
	if m != nil {
		return m.Pool
	}
	return 0
}

func (m *DanmakuElem) GetIdStr() string {
	if m != nil {
		return m.IdStr
	}
	return ""
}

func (m *DanmakuElem) GetAttr() int32 {
	if m != nil {
		return m.Attr
	}
	return 0
}

// 弹幕ai云屏蔽条目
type DanmakuFlag struct {
	Dmid                 int64    `protobuf:"varint,1,opt,name=dmid,proto3" json:"dmid,omitempty"`
	Flag                 uint32   `protobuf:"varint,2,opt,name=flag,proto3" json:"flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DanmakuFlag) Reset()         { *m = DanmakuFlag{} }
func (m *DanmakuFlag) String() string { return proto.CompactTextString(m) }
func (*DanmakuFlag) ProtoMessage()    {}
func (*DanmakuFlag) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{7}
}

func (m *DanmakuFlag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmakuFlag.Unmarshal(m, b)
}
func (m *DanmakuFlag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmakuFlag.Marshal(b, m, deterministic)
}
func (m *DanmakuFlag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmakuFlag.Merge(m, src)
}
func (m *DanmakuFlag) XXX_Size() int {
	return xxx_messageInfo_DanmakuFlag.Size(m)
}
func (m *DanmakuFlag) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmakuFlag.DiscardUnknown(m)
}

var xxx_messageInfo_DanmakuFlag proto.InternalMessageInfo

func (m *DanmakuFlag) GetDmid() int64 {
	if m != nil {
		return m.Dmid
	}
	return 0
}

func (m *DanmakuFlag) GetFlag() uint32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

// 云屏蔽配置信息
type DanmakuFlagConfig struct {
	// 云屏蔽等级
	RecFlag int32 `protobuf:"varint,1,opt,name=rec_flag,json=recFlag,proto3" json:"rec_flag,omitempty"`
	// 云屏蔽文案
	RecText string `protobuf:"bytes,2,opt,name=rec_text,json=recText,proto3" json:"rec_text,omitempty"`
	// 云屏蔽开关
	RecSwitch            int32    `protobuf:"varint,3,opt,name=rec_switch,json=recSwitch,proto3" json:"rec_switch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DanmakuFlagConfig) Reset()         { *m = DanmakuFlagConfig{} }
func (m *DanmakuFlagConfig) String() string { return proto.CompactTextString(m) }
func (*DanmakuFlagConfig) ProtoMessage()    {}
func (*DanmakuFlagConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{8}
}

func (m *DanmakuFlagConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmakuFlagConfig.Unmarshal(m, b)
}
func (m *DanmakuFlagConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmakuFlagConfig.Marshal(b, m, deterministic)
}
func (m *DanmakuFlagConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmakuFlagConfig.Merge(m, src)
}
func (m *DanmakuFlagConfig) XXX_Size() int {
	return xxx_messageInfo_DanmakuFlagConfig.Size(m)
}
func (m *DanmakuFlagConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmakuFlagConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DanmakuFlagConfig proto.InternalMessageInfo

func (m *DanmakuFlagConfig) GetRecFlag() int32 {
	if m != nil {
		return m.RecFlag
	}
	return 0
}

func (m *DanmakuFlagConfig) GetRecText() string {
	if m != nil {
		return m.RecText
	}
	return ""
}

func (m *DanmakuFlagConfig) GetRecSwitch() int32 {
	if m != nil {
		return m.RecSwitch
	}
	return 0
}

// 弹幕默认配置
type DanmuDefaultPlayerConfig struct {
	PlayerDanmakuUseDefaultConfig    bool     `protobuf:"varint,1,opt,name=player_danmaku_use_default_config,json=playerDanmakuUseDefaultConfig,proto3" json:"player_danmaku_use_default_config,omitempty"`
	PlayerDanmakuAiRecommendedSwitch bool     `protobuf:"varint,4,opt,name=player_danmaku_ai_recommended_switch,json=playerDanmakuAiRecommendedSwitch,proto3" json:"player_danmaku_ai_recommended_switch,omitempty"`
	PlayerDanmakuAiRecommendedLevel  int32    `protobuf:"varint,5,opt,name=player_danmaku_ai_recommended_level,json=playerDanmakuAiRecommendedLevel,proto3" json:"player_danmaku_ai_recommended_level,omitempty"`
	PlayerDanmakuBlocktop            bool     `protobuf:"varint,6,opt,name=player_danmaku_blocktop,json=playerDanmakuBlocktop,proto3" json:"player_danmaku_blocktop,omitempty"`
	PlayerDanmakuBlockscroll         bool     `protobuf:"varint,7,opt,name=player_danmaku_blockscroll,json=playerDanmakuBlockscroll,proto3" json:"player_danmaku_blockscroll,omitempty"`
	PlayerDanmakuBlockbottom         bool     `protobuf:"varint,8,opt,name=player_danmaku_blockbottom,json=playerDanmakuBlockbottom,proto3" json:"player_danmaku_blockbottom,omitempty"`
	PlayerDanmakuBlockcolorful       bool     `protobuf:"varint,9,opt,name=player_danmaku_blockcolorful,json=playerDanmakuBlockcolorful,proto3" json:"player_danmaku_blockcolorful,omitempty"`
	PlayerDanmakuBlockrepeat         bool     `protobuf:"varint,10,opt,name=player_danmaku_blockrepeat,json=playerDanmakuBlockrepeat,proto3" json:"player_danmaku_blockrepeat,omitempty"`
	PlayerDanmakuBlockspecial        bool     `protobuf:"varint,11,opt,name=player_danmaku_blockspecial,json=playerDanmakuBlockspecial,proto3" json:"player_danmaku_blockspecial,omitempty"`
	PlayerDanmakuOpacity             float32  `protobuf:"fixed32,12,opt,name=player_danmaku_opacity,json=playerDanmakuOpacity,proto3" json:"player_danmaku_opacity,omitempty"`
	PlayerDanmakuScalingfactor       float32  `protobuf:"fixed32,13,opt,name=player_danmaku_scalingfactor,json=playerDanmakuScalingfactor,proto3" json:"player_danmaku_scalingfactor,omitempty"`
	PlayerDanmakuDomain              float32  `protobuf:"fixed32,14,opt,name=player_danmaku_domain,json=playerDanmakuDomain,proto3" json:"player_danmaku_domain,omitempty"`
	PlayerDanmakuSpeed               int32    `protobuf:"varint,15,opt,name=player_danmaku_speed,json=playerDanmakuSpeed,proto3" json:"player_danmaku_speed,omitempty"`
	InlinePlayerDanmakuSwitch        bool     `protobuf:"varint,16,opt,name=inline_player_danmaku_switch,json=inlinePlayerDanmakuSwitch,proto3" json:"inline_player_danmaku_switch,omitempty"`
	PlayerDanmakuSeniorModeSwitch    int32    `protobuf:"varint,17,opt,name=player_danmaku_senior_mode_switch,json=playerDanmakuSeniorModeSwitch,proto3" json:"player_danmaku_senior_mode_switch,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *DanmuDefaultPlayerConfig) Reset()         { *m = DanmuDefaultPlayerConfig{} }
func (m *DanmuDefaultPlayerConfig) String() string { return proto.CompactTextString(m) }
func (*DanmuDefaultPlayerConfig) ProtoMessage()    {}
func (*DanmuDefaultPlayerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{9}
}

func (m *DanmuDefaultPlayerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmuDefaultPlayerConfig.Unmarshal(m, b)
}
func (m *DanmuDefaultPlayerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmuDefaultPlayerConfig.Marshal(b, m, deterministic)
}
func (m *DanmuDefaultPlayerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmuDefaultPlayerConfig.Merge(m, src)
}
func (m *DanmuDefaultPlayerConfig) XXX_Size() int {
	return xxx_messageInfo_DanmuDefaultPlayerConfig.Size(m)
}
func (m *DanmuDefaultPlayerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmuDefaultPlayerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DanmuDefaultPlayerConfig proto.InternalMessageInfo

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuUseDefaultConfig() bool {
	if m != nil {
		return m.PlayerDanmakuUseDefaultConfig
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuAiRecommendedSwitch() bool {
	if m != nil {
		return m.PlayerDanmakuAiRecommendedSwitch
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuAiRecommendedLevel() int32 {
	if m != nil {
		return m.PlayerDanmakuAiRecommendedLevel
	}
	return 0
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuBlocktop() bool {
	if m != nil {
		return m.PlayerDanmakuBlocktop
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuBlockscroll() bool {
	if m != nil {
		return m.PlayerDanmakuBlockscroll
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuBlockbottom() bool {
	if m != nil {
		return m.PlayerDanmakuBlockbottom
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuBlockcolorful() bool {
	if m != nil {
		return m.PlayerDanmakuBlockcolorful
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuBlockrepeat() bool {
	if m != nil {
		return m.PlayerDanmakuBlockrepeat
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuBlockspecial() bool {
	if m != nil {
		return m.PlayerDanmakuBlockspecial
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuOpacity() float32 {
	if m != nil {
		return m.PlayerDanmakuOpacity
	}
	return 0
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuScalingfactor() float32 {
	if m != nil {
		return m.PlayerDanmakuScalingfactor
	}
	return 0
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuDomain() float32 {
	if m != nil {
		return m.PlayerDanmakuDomain
	}
	return 0
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuSpeed() int32 {
	if m != nil {
		return m.PlayerDanmakuSpeed
	}
	return 0
}

func (m *DanmuDefaultPlayerConfig) GetInlinePlayerDanmakuSwitch() bool {
	if m != nil {
		return m.InlinePlayerDanmakuSwitch
	}
	return false
}

func (m *DanmuDefaultPlayerConfig) GetPlayerDanmakuSeniorModeSwitch() int32 {
	if m != nil {
		return m.PlayerDanmakuSeniorModeSwitch
	}
	return 0
}

// 弹幕配置
type DanmuPlayerConfig struct {
	PlayerDanmakuSwitch              bool     `protobuf:"varint,1,opt,name=player_danmaku_switch,json=playerDanmakuSwitch,proto3" json:"player_danmaku_switch,omitempty"`
	PlayerDanmakuSwitchSave          bool     `protobuf:"varint,2,opt,name=player_danmaku_switch_save,json=playerDanmakuSwitchSave,proto3" json:"player_danmaku_switch_save,omitempty"`
	PlayerDanmakuUseDefaultConfig    bool     `protobuf:"varint,3,opt,name=player_danmaku_use_default_config,json=playerDanmakuUseDefaultConfig,proto3" json:"player_danmaku_use_default_config,omitempty"`
	PlayerDanmakuAiRecommendedSwitch bool     `protobuf:"varint,4,opt,name=player_danmaku_ai_recommended_switch,json=playerDanmakuAiRecommendedSwitch,proto3" json:"player_danmaku_ai_recommended_switch,omitempty"`
	PlayerDanmakuAiRecommendedLevel  int32    `protobuf:"varint,5,opt,name=player_danmaku_ai_recommended_level,json=playerDanmakuAiRecommendedLevel,proto3" json:"player_danmaku_ai_recommended_level,omitempty"`
	PlayerDanmakuBlocktop            bool     `protobuf:"varint,6,opt,name=player_danmaku_blocktop,json=playerDanmakuBlocktop,proto3" json:"player_danmaku_blocktop,omitempty"`
	PlayerDanmakuBlockscroll         bool     `protobuf:"varint,7,opt,name=player_danmaku_blockscroll,json=playerDanmakuBlockscroll,proto3" json:"player_danmaku_blockscroll,omitempty"`
	PlayerDanmakuBlockbottom         bool     `protobuf:"varint,8,opt,name=player_danmaku_blockbottom,json=playerDanmakuBlockbottom,proto3" json:"player_danmaku_blockbottom,omitempty"`
	PlayerDanmakuBlockcolorful       bool     `protobuf:"varint,9,opt,name=player_danmaku_blockcolorful,json=playerDanmakuBlockcolorful,proto3" json:"player_danmaku_blockcolorful,omitempty"`
	PlayerDanmakuBlockrepeat         bool     `protobuf:"varint,10,opt,name=player_danmaku_blockrepeat,json=playerDanmakuBlockrepeat,proto3" json:"player_danmaku_blockrepeat,omitempty"`
	PlayerDanmakuBlockspecial        bool     `protobuf:"varint,11,opt,name=player_danmaku_blockspecial,json=playerDanmakuBlockspecial,proto3" json:"player_danmaku_blockspecial,omitempty"`
	PlayerDanmakuOpacity             float32  `protobuf:"fixed32,12,opt,name=player_danmaku_opacity,json=playerDanmakuOpacity,proto3" json:"player_danmaku_opacity,omitempty"`
	PlayerDanmakuScalingfactor       float32  `protobuf:"fixed32,13,opt,name=player_danmaku_scalingfactor,json=playerDanmakuScalingfactor,proto3" json:"player_danmaku_scalingfactor,omitempty"`
	PlayerDanmakuDomain              float32  `protobuf:"fixed32,14,opt,name=player_danmaku_domain,json=playerDanmakuDomain,proto3" json:"player_danmaku_domain,omitempty"`
	PlayerDanmakuSpeed               int32    `protobuf:"varint,15,opt,name=player_danmaku_speed,json=playerDanmakuSpeed,proto3" json:"player_danmaku_speed,omitempty"`
	PlayerDanmakuEnableblocklist     bool     `protobuf:"varint,16,opt,name=player_danmaku_enableblocklist,json=playerDanmakuEnableblocklist,proto3" json:"player_danmaku_enableblocklist,omitempty"`
	InlinePlayerDanmakuSwitch        bool     `protobuf:"varint,17,opt,name=inline_player_danmaku_switch,json=inlinePlayerDanmakuSwitch,proto3" json:"inline_player_danmaku_switch,omitempty"`
	InlinePlayerDanmakuConfig        int32    `protobuf:"varint,18,opt,name=inline_player_danmaku_config,json=inlinePlayerDanmakuConfig,proto3" json:"inline_player_danmaku_config,omitempty"`
	PlayerDanmakuIosSwitchSave       int32    `protobuf:"varint,19,opt,name=player_danmaku_ios_switch_save,json=playerDanmakuIosSwitchSave,proto3" json:"player_danmaku_ios_switch_save,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *DanmuPlayerConfig) Reset()         { *m = DanmuPlayerConfig{} }
func (m *DanmuPlayerConfig) String() string { return proto.CompactTextString(m) }
func (*DanmuPlayerConfig) ProtoMessage()    {}
func (*DanmuPlayerConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{10}
}

func (m *DanmuPlayerConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmuPlayerConfig.Unmarshal(m, b)
}
func (m *DanmuPlayerConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmuPlayerConfig.Marshal(b, m, deterministic)
}
func (m *DanmuPlayerConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmuPlayerConfig.Merge(m, src)
}
func (m *DanmuPlayerConfig) XXX_Size() int {
	return xxx_messageInfo_DanmuPlayerConfig.Size(m)
}
func (m *DanmuPlayerConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmuPlayerConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DanmuPlayerConfig proto.InternalMessageInfo

func (m *DanmuPlayerConfig) GetPlayerDanmakuSwitch() bool {
	if m != nil {
		return m.PlayerDanmakuSwitch
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuSwitchSave() bool {
	if m != nil {
		return m.PlayerDanmakuSwitchSave
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuUseDefaultConfig() bool {
	if m != nil {
		return m.PlayerDanmakuUseDefaultConfig
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuAiRecommendedSwitch() bool {
	if m != nil {
		return m.PlayerDanmakuAiRecommendedSwitch
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuAiRecommendedLevel() int32 {
	if m != nil {
		return m.PlayerDanmakuAiRecommendedLevel
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuBlocktop() bool {
	if m != nil {
		return m.PlayerDanmakuBlocktop
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuBlockscroll() bool {
	if m != nil {
		return m.PlayerDanmakuBlockscroll
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuBlockbottom() bool {
	if m != nil {
		return m.PlayerDanmakuBlockbottom
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuBlockcolorful() bool {
	if m != nil {
		return m.PlayerDanmakuBlockcolorful
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuBlockrepeat() bool {
	if m != nil {
		return m.PlayerDanmakuBlockrepeat
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuBlockspecial() bool {
	if m != nil {
		return m.PlayerDanmakuBlockspecial
	}
	return false
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuOpacity() float32 {
	if m != nil {
		return m.PlayerDanmakuOpacity
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuScalingfactor() float32 {
	if m != nil {
		return m.PlayerDanmakuScalingfactor
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuDomain() float32 {
	if m != nil {
		return m.PlayerDanmakuDomain
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuSpeed() int32 {
	if m != nil {
		return m.PlayerDanmakuSpeed
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuEnableblocklist() bool {
	if m != nil {
		return m.PlayerDanmakuEnableblocklist
	}
	return false
}

func (m *DanmuPlayerConfig) GetInlinePlayerDanmakuSwitch() bool {
	if m != nil {
		return m.InlinePlayerDanmakuSwitch
	}
	return false
}

func (m *DanmuPlayerConfig) GetInlinePlayerDanmakuConfig() int32 {
	if m != nil {
		return m.InlinePlayerDanmakuConfig
	}
	return 0
}

func (m *DanmuPlayerConfig) GetPlayerDanmakuIosSwitchSave() int32 {
	if m != nil {
		return m.PlayerDanmakuIosSwitchSave
	}
	return 0
}

// 弹幕显示区域自动配置
type DanmuPlayerDynamicConfig struct {
	// 时间
	Progress int32 `protobuf:"varint,1,opt,name=progress,proto3" json:"progress,omitempty"`
	// 弹幕显示区域
	PlayerDanmakuDomain  float32  `protobuf:"fixed32,14,opt,name=player_danmaku_domain,json=playerDanmakuDomain,proto3" json:"player_danmaku_domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DanmuPlayerDynamicConfig) Reset()         { *m = DanmuPlayerDynamicConfig{} }
func (m *DanmuPlayerDynamicConfig) String() string { return proto.CompactTextString(m) }
func (*DanmuPlayerDynamicConfig) ProtoMessage()    {}
func (*DanmuPlayerDynamicConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{11}
}

func (m *DanmuPlayerDynamicConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmuPlayerDynamicConfig.Unmarshal(m, b)
}
func (m *DanmuPlayerDynamicConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmuPlayerDynamicConfig.Marshal(b, m, deterministic)
}
func (m *DanmuPlayerDynamicConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmuPlayerDynamicConfig.Merge(m, src)
}
func (m *DanmuPlayerDynamicConfig) XXX_Size() int {
	return xxx_messageInfo_DanmuPlayerDynamicConfig.Size(m)
}
func (m *DanmuPlayerDynamicConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmuPlayerDynamicConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DanmuPlayerDynamicConfig proto.InternalMessageInfo

func (m *DanmuPlayerDynamicConfig) GetProgress() int32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *DanmuPlayerDynamicConfig) GetPlayerDanmakuDomain() float32 {
	if m != nil {
		return m.PlayerDanmakuDomain
	}
	return 0
}

// 弹幕配置信息
type DanmuPlayerViewConfig struct {
	// 弹幕默认配置
	DanmukuDefaultPlayerConfig *DanmuDefaultPlayerConfig `protobuf:"bytes,1,opt,name=danmuku_default_player_config,json=danmukuDefaultPlayerConfig,proto3" json:"danmuku_default_player_config,omitempty"`
	// 弹幕用户配置
	DanmukuPlayerConfig *DanmuPlayerConfig `protobuf:"bytes,2,opt,name=danmuku_player_config,json=danmukuPlayerConfig,proto3" json:"danmuku_player_config,omitempty"`
	// 弹幕显示区域自动配置列表
	DanmukuPlayerDynamicConfig []*DanmuPlayerDynamicConfig `protobuf:"bytes,3,rep,name=danmuku_player_dynamic_config,json=danmukuPlayerDynamicConfig,proto3" json:"danmuku_player_dynamic_config,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                    `json:"-"`
	XXX_unrecognized           []byte                      `json:"-"`
	XXX_sizecache              int32                       `json:"-"`
}

func (m *DanmuPlayerViewConfig) Reset()         { *m = DanmuPlayerViewConfig{} }
func (m *DanmuPlayerViewConfig) String() string { return proto.CompactTextString(m) }
func (*DanmuPlayerViewConfig) ProtoMessage()    {}
func (*DanmuPlayerViewConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{12}
}

func (m *DanmuPlayerViewConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DanmuPlayerViewConfig.Unmarshal(m, b)
}
func (m *DanmuPlayerViewConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DanmuPlayerViewConfig.Marshal(b, m, deterministic)
}
func (m *DanmuPlayerViewConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DanmuPlayerViewConfig.Merge(m, src)
}
func (m *DanmuPlayerViewConfig) XXX_Size() int {
	return xxx_messageInfo_DanmuPlayerViewConfig.Size(m)
}
func (m *DanmuPlayerViewConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_DanmuPlayerViewConfig.DiscardUnknown(m)
}

var xxx_messageInfo_DanmuPlayerViewConfig proto.InternalMessageInfo

func (m *DanmuPlayerViewConfig) GetDanmukuDefaultPlayerConfig() *DanmuDefaultPlayerConfig {
	if m != nil {
		return m.DanmukuDefaultPlayerConfig
	}
	return nil
}

func (m *DanmuPlayerViewConfig) GetDanmukuPlayerConfig() *DanmuPlayerConfig {
	if m != nil {
		return m.DanmukuPlayerConfig
	}
	return nil
}

func (m *DanmuPlayerViewConfig) GetDanmukuPlayerDynamicConfig() []*DanmuPlayerDynamicConfig {
	if m != nil {
		return m.DanmukuPlayerDynamicConfig
	}
	return nil
}

// 获取弹幕-响应
type DmSegMobileReply struct {
	// 弹幕列表
	Elems []*DanmakuElem `protobuf:"bytes,1,rep,name=elems,proto3" json:"elems,omitempty"`
	// 是否已关闭弹幕
	// 0:未关闭 1:已关闭
	State int32 `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	// 弹幕云屏蔽ai评分值
	AiFlag               *DanmakuAIFlag `protobuf:"bytes,3,opt,name=ai_flag,json=aiFlag,proto3" json:"ai_flag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DmSegMobileReply) Reset()         { *m = DmSegMobileReply{} }
func (m *DmSegMobileReply) String() string { return proto.CompactTextString(m) }
func (*DmSegMobileReply) ProtoMessage()    {}
func (*DmSegMobileReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{13}
}

func (m *DmSegMobileReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmSegMobileReply.Unmarshal(m, b)
}
func (m *DmSegMobileReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmSegMobileReply.Marshal(b, m, deterministic)
}
func (m *DmSegMobileReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmSegMobileReply.Merge(m, src)
}
func (m *DmSegMobileReply) XXX_Size() int {
	return xxx_messageInfo_DmSegMobileReply.Size(m)
}
func (m *DmSegMobileReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DmSegMobileReply.DiscardUnknown(m)
}

var xxx_messageInfo_DmSegMobileReply proto.InternalMessageInfo

func (m *DmSegMobileReply) GetElems() []*DanmakuElem {
	if m != nil {
		return m.Elems
	}
	return nil
}

func (m *DmSegMobileReply) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *DmSegMobileReply) GetAiFlag() *DanmakuAIFlag {
	if m != nil {
		return m.AiFlag
	}
	return nil
}

// 获取弹幕-请求
type DmSegMobileReq struct {
	// 稿件avid/漫画epid
	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// 视频cid/漫画cid
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 弹幕类型
	// 1:视频 2:漫画
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// 分段(6min)
	SegmentIndex int64 `protobuf:"varint,4,opt,name=segment_index,json=segmentIndex,proto3" json:"segment_index,omitempty"`
	// 是否青少年模式
	TeenagersMode int32 `protobuf:"varint,5,opt,name=teenagers_mode,json=teenagersMode,proto3" json:"teenagers_mode,omitempty"`
	//
	From                 int64    `protobuf:"varint,6,opt,name=from,proto3" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmSegMobileReq) Reset()         { *m = DmSegMobileReq{} }
func (m *DmSegMobileReq) String() string { return proto.CompactTextString(m) }
func (*DmSegMobileReq) ProtoMessage()    {}
func (*DmSegMobileReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{14}
}

func (m *DmSegMobileReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmSegMobileReq.Unmarshal(m, b)
}
func (m *DmSegMobileReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmSegMobileReq.Marshal(b, m, deterministic)
}
func (m *DmSegMobileReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmSegMobileReq.Merge(m, src)
}
func (m *DmSegMobileReq) XXX_Size() int {
	return xxx_messageInfo_DmSegMobileReq.Size(m)
}
func (m *DmSegMobileReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DmSegMobileReq.DiscardUnknown(m)
}

var xxx_messageInfo_DmSegMobileReq proto.InternalMessageInfo

func (m *DmSegMobileReq) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *DmSegMobileReq) GetOid() int64 {
	if m != nil {
		return m.Oid
	}
	return 0
}

func (m *DmSegMobileReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *DmSegMobileReq) GetSegmentIndex() int64 {
	if m != nil {
		return m.SegmentIndex
	}
	return 0
}

func (m *DmSegMobileReq) GetTeenagersMode() int32 {
	if m != nil {
		return m.TeenagersMode
	}
	return 0
}

func (m *DmSegMobileReq) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

// 客户端弹幕元数据-响应
type DmViewReply struct {
	// 是否已关闭弹幕
	// 0:未关闭 1:已关闭
	Closed bool `protobuf:"varint,1,opt,name=closed,proto3" json:"closed,omitempty"`
	// 智能防挡弹幕蒙版信息
	Mask *VideoMask `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	// 视频字幕
	Subtitle *VideoSubtitle `protobuf:"bytes,3,opt,name=subtitle,proto3" json:"subtitle,omitempty"`
	// 高级弹幕专包url(bfs)
	SpecialDms []string `protobuf:"bytes,4,rep,name=special_dms,json=specialDms,proto3" json:"special_dms,omitempty"`
	// 云屏蔽配置信息
	AiFlag *DanmakuFlagConfig `protobuf:"bytes,5,opt,name=ai_flag,json=aiFlag,proto3" json:"ai_flag,omitempty"`
	// 弹幕配置信息
	PlayerConfig *DanmuPlayerViewConfig `protobuf:"bytes,6,opt,name=player_config,json=playerConfig,proto3" json:"player_config,omitempty"`
	// 弹幕发送框样式
	SendBoxStyle int32 `protobuf:"varint,7,opt,name=send_box_style,json=sendBoxStyle,proto3" json:"send_box_style,omitempty"`
	// 是否允许
	Allow bool `protobuf:"varint,8,opt,name=allow,proto3" json:"allow,omitempty"`
	// check box 是否展示
	CheckBox string `protobuf:"bytes,9,opt,name=check_box,json=checkBox,proto3" json:"check_box,omitempty"`
	// check box 展示文本
	CheckBoxShowMsg string `protobuf:"bytes,10,opt,name=check_box_show_msg,json=checkBoxShowMsg,proto3" json:"check_box_show_msg,omitempty"`
	// 展示文案
	TextPlaceholder string `protobuf:"bytes,11,opt,name=text_placeholder,json=textPlaceholder,proto3" json:"text_placeholder,omitempty"`
	// 弹幕输入框文案
	InputPlaceholder string `protobuf:"bytes,12,opt,name=input_placeholder,json=inputPlaceholder,proto3" json:"input_placeholder,omitempty"`
	//
	CommandClose         bool     `protobuf:"varint,13,opt,name=command_close,json=commandClose,proto3" json:"command_close,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmViewReply) Reset()         { *m = DmViewReply{} }
func (m *DmViewReply) String() string { return proto.CompactTextString(m) }
func (*DmViewReply) ProtoMessage()    {}
func (*DmViewReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{15}
}

func (m *DmViewReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmViewReply.Unmarshal(m, b)
}
func (m *DmViewReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmViewReply.Marshal(b, m, deterministic)
}
func (m *DmViewReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmViewReply.Merge(m, src)
}
func (m *DmViewReply) XXX_Size() int {
	return xxx_messageInfo_DmViewReply.Size(m)
}
func (m *DmViewReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DmViewReply.DiscardUnknown(m)
}

var xxx_messageInfo_DmViewReply proto.InternalMessageInfo

func (m *DmViewReply) GetClosed() bool {
	if m != nil {
		return m.Closed
	}
	return false
}

func (m *DmViewReply) GetMask() *VideoMask {
	if m != nil {
		return m.Mask
	}
	return nil
}

func (m *DmViewReply) GetSubtitle() *VideoSubtitle {
	if m != nil {
		return m.Subtitle
	}
	return nil
}

func (m *DmViewReply) GetSpecialDms() []string {
	if m != nil {
		return m.SpecialDms
	}
	return nil
}

func (m *DmViewReply) GetAiFlag() *DanmakuFlagConfig {
	if m != nil {
		return m.AiFlag
	}
	return nil
}

func (m *DmViewReply) GetPlayerConfig() *DanmuPlayerViewConfig {
	if m != nil {
		return m.PlayerConfig
	}
	return nil
}

func (m *DmViewReply) GetSendBoxStyle() int32 {
	if m != nil {
		return m.SendBoxStyle
	}
	return 0
}

func (m *DmViewReply) GetAllow() bool {
	if m != nil {
		return m.Allow
	}
	return false
}

func (m *DmViewReply) GetCheckBox() string {
	if m != nil {
		return m.CheckBox
	}
	return ""
}

func (m *DmViewReply) GetCheckBoxShowMsg() string {
	if m != nil {
		return m.CheckBoxShowMsg
	}
	return ""
}

func (m *DmViewReply) GetTextPlaceholder() string {
	if m != nil {
		return m.TextPlaceholder
	}
	return ""
}

func (m *DmViewReply) GetInputPlaceholder() string {
	if m != nil {
		return m.InputPlaceholder
	}
	return ""
}

func (m *DmViewReply) GetCommandClose() bool {
	if m != nil {
		return m.CommandClose
	}
	return false
}

// 客户端弹幕元数据-请求
type DmViewReq struct {
	// 稿件avid/漫画epid
	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	// 视频cid/漫画cid
	Oid int64 `protobuf:"varint,2,opt,name=oid,proto3" json:"oid,omitempty"`
	// 弹幕类型
	// 1:视频 2:漫画
	Type int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	// 页面spm
	Spmid string `protobuf:"bytes,4,opt,name=spmid,proto3" json:"spmid,omitempty"`
	// 是否冷启
	IsHardBoot int32 `protobuf:"varint,5,opt,name=is_hard_boot,json=isHardBoot,proto3" json:"is_hard_boot,omitempty"`
	//
	From                 int64    `protobuf:"varint,6,opt,name=from,proto3" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DmViewReq) Reset()         { *m = DmViewReq{} }
func (m *DmViewReq) String() string { return proto.CompactTextString(m) }
func (*DmViewReq) ProtoMessage()    {}
func (*DmViewReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{16}
}

func (m *DmViewReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DmViewReq.Unmarshal(m, b)
}
func (m *DmViewReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DmViewReq.Marshal(b, m, deterministic)
}
func (m *DmViewReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DmViewReq.Merge(m, src)
}
func (m *DmViewReq) XXX_Size() int {
	return xxx_messageInfo_DmViewReq.Size(m)
}
func (m *DmViewReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DmViewReq.DiscardUnknown(m)
}

var xxx_messageInfo_DmViewReq proto.InternalMessageInfo

func (m *DmViewReq) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *DmViewReq) GetOid() int64 {
	if m != nil {
		return m.Oid
	}
	return 0
}

func (m *DmViewReq) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *DmViewReq) GetSpmid() string {
	if m != nil {
		return m.Spmid
	}
	return ""
}

func (m *DmViewReq) GetIsHardBoot() int32 {
	if m != nil {
		return m.IsHardBoot
	}
	return 0
}

func (m *DmViewReq) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

// 单个字幕信息
type SubtitleItem struct {
	// 字幕id
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 字幕id str
	IdStr string `protobuf:"bytes,2,opt,name=id_str,json=idStr,proto3" json:"id_str,omitempty"`
	// 字幕语言代码
	Lan string `protobuf:"bytes,3,opt,name=lan,proto3" json:"lan,omitempty"`
	// 字幕语言
	LanDoc string `protobuf:"bytes,4,opt,name=lan_doc,json=lanDoc,proto3" json:"lan_doc,omitempty"`
	// 字幕文件url
	SubtitleUrl string `protobuf:"bytes,5,opt,name=subtitle_url,json=subtitleUrl,proto3" json:"subtitle_url,omitempty"`
	// 字幕作者信息
	Author               *UserInfo `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SubtitleItem) Reset()         { *m = SubtitleItem{} }
func (m *SubtitleItem) String() string { return proto.CompactTextString(m) }
func (*SubtitleItem) ProtoMessage()    {}
func (*SubtitleItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{17}
}

func (m *SubtitleItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubtitleItem.Unmarshal(m, b)
}
func (m *SubtitleItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubtitleItem.Marshal(b, m, deterministic)
}
func (m *SubtitleItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubtitleItem.Merge(m, src)
}
func (m *SubtitleItem) XXX_Size() int {
	return xxx_messageInfo_SubtitleItem.Size(m)
}
func (m *SubtitleItem) XXX_DiscardUnknown() {
	xxx_messageInfo_SubtitleItem.DiscardUnknown(m)
}

var xxx_messageInfo_SubtitleItem proto.InternalMessageInfo

func (m *SubtitleItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *SubtitleItem) GetIdStr() string {
	if m != nil {
		return m.IdStr
	}
	return ""
}

func (m *SubtitleItem) GetLan() string {
	if m != nil {
		return m.Lan
	}
	return ""
}

func (m *SubtitleItem) GetLanDoc() string {
	if m != nil {
		return m.LanDoc
	}
	return ""
}

func (m *SubtitleItem) GetSubtitleUrl() string {
	if m != nil {
		return m.SubtitleUrl
	}
	return ""
}

func (m *SubtitleItem) GetAuthor() *UserInfo {
	if m != nil {
		return m.Author
	}
	return nil
}

//
type TvViewProgressReply struct {
	//
	VideoGuide *VideoGuide `protobuf:"bytes,1,opt,name=video_guide,json=videoGuide,proto3" json:"video_guide,omitempty"`
	//
	Chronos              *Chronos `protobuf:"bytes,2,opt,name=chronos,proto3" json:"chronos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TvViewProgressReply) Reset()         { *m = TvViewProgressReply{} }
func (m *TvViewProgressReply) String() string { return proto.CompactTextString(m) }
func (*TvViewProgressReply) ProtoMessage()    {}
func (*TvViewProgressReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{18}
}

func (m *TvViewProgressReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TvViewProgressReply.Unmarshal(m, b)
}
func (m *TvViewProgressReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TvViewProgressReply.Marshal(b, m, deterministic)
}
func (m *TvViewProgressReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TvViewProgressReply.Merge(m, src)
}
func (m *TvViewProgressReply) XXX_Size() int {
	return xxx_messageInfo_TvViewProgressReply.Size(m)
}
func (m *TvViewProgressReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TvViewProgressReply.DiscardUnknown(m)
}

var xxx_messageInfo_TvViewProgressReply proto.InternalMessageInfo

func (m *TvViewProgressReply) GetVideoGuide() *VideoGuide {
	if m != nil {
		return m.VideoGuide
	}
	return nil
}

func (m *TvViewProgressReply) GetChronos() *Chronos {
	if m != nil {
		return m.Chronos
	}
	return nil
}

//
type TvViewProgressReq struct {
	//
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	//
	Cid int64 `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	//
	UpMid int64 `protobuf:"varint,3,opt,name=up_mid,json=upMid,proto3" json:"up_mid,omitempty"`
	//
	EngineVersion string `protobuf:"bytes,4,opt,name=engine_version,json=engineVersion,proto3" json:"engine_version,omitempty"`
	//
	MessageProtocol string `protobuf:"bytes,5,opt,name=message_protocol,json=messageProtocol,proto3" json:"message_protocol,omitempty"`
	//
	ServiceKey string `protobuf:"bytes,6,opt,name=service_key,json=serviceKey,proto3" json:"service_key,omitempty"`
	//
	Sid int64 `protobuf:"varint,7,opt,name=sid,proto3" json:"sid,omitempty"`
	//
	Pid int64 `protobuf:"varint,8,opt,name=pid,proto3" json:"pid,omitempty"`
	//
	From int64 `protobuf:"varint,9,opt,name=from,proto3" json:"from,omitempty"`
	//
	GuestAccessKey       string   `protobuf:"bytes,10,opt,name=guest_access_key,json=guestAccessKey,proto3" json:"guest_access_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TvViewProgressReq) Reset()         { *m = TvViewProgressReq{} }
func (m *TvViewProgressReq) String() string { return proto.CompactTextString(m) }
func (*TvViewProgressReq) ProtoMessage()    {}
func (*TvViewProgressReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{19}
}

func (m *TvViewProgressReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TvViewProgressReq.Unmarshal(m, b)
}
func (m *TvViewProgressReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TvViewProgressReq.Marshal(b, m, deterministic)
}
func (m *TvViewProgressReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TvViewProgressReq.Merge(m, src)
}
func (m *TvViewProgressReq) XXX_Size() int {
	return xxx_messageInfo_TvViewProgressReq.Size(m)
}
func (m *TvViewProgressReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TvViewProgressReq.DiscardUnknown(m)
}

var xxx_messageInfo_TvViewProgressReq proto.InternalMessageInfo

func (m *TvViewProgressReq) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *TvViewProgressReq) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *TvViewProgressReq) GetUpMid() int64 {
	if m != nil {
		return m.UpMid
	}
	return 0
}

func (m *TvViewProgressReq) GetEngineVersion() string {
	if m != nil {
		return m.EngineVersion
	}
	return ""
}

func (m *TvViewProgressReq) GetMessageProtocol() string {
	if m != nil {
		return m.MessageProtocol
	}
	return ""
}

func (m *TvViewProgressReq) GetServiceKey() string {
	if m != nil {
		return m.ServiceKey
	}
	return ""
}

func (m *TvViewProgressReq) GetSid() int64 {
	if m != nil {
		return m.Sid
	}
	return 0
}

func (m *TvViewProgressReq) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *TvViewProgressReq) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *TvViewProgressReq) GetGuestAccessKey() string {
	if m != nil {
		return m.GuestAccessKey
	}
	return ""
}

// 字幕作者信息
type UserInfo struct {
	// 用户mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 用户昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 用户性别
	Sex string `protobuf:"bytes,3,opt,name=sex,proto3" json:"sex,omitempty"`
	// 用户头像url
	Face string `protobuf:"bytes,4,opt,name=face,proto3" json:"face,omitempty"`
	// 用户签名
	Sign string `protobuf:"bytes,5,opt,name=sign,proto3" json:"sign,omitempty"`
	// 用户等级
	Rank                 int32    `protobuf:"varint,6,opt,name=rank,proto3" json:"rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{20}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetSex() string {
	if m != nil {
		return m.Sex
	}
	return ""
}

func (m *UserInfo) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

func (m *UserInfo) GetSign() string {
	if m != nil {
		return m.Sign
	}
	return ""
}

func (m *UserInfo) GetRank() int32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

//
type VideoGuide struct {
	//
	CommandDms           []*CommandDm `protobuf:"bytes,2,rep,name=command_dms,json=commandDms,proto3" json:"command_dms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *VideoGuide) Reset()         { *m = VideoGuide{} }
func (m *VideoGuide) String() string { return proto.CompactTextString(m) }
func (*VideoGuide) ProtoMessage()    {}
func (*VideoGuide) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{21}
}

func (m *VideoGuide) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoGuide.Unmarshal(m, b)
}
func (m *VideoGuide) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoGuide.Marshal(b, m, deterministic)
}
func (m *VideoGuide) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoGuide.Merge(m, src)
}
func (m *VideoGuide) XXX_Size() int {
	return xxx_messageInfo_VideoGuide.Size(m)
}
func (m *VideoGuide) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoGuide.DiscardUnknown(m)
}

var xxx_messageInfo_VideoGuide proto.InternalMessageInfo

func (m *VideoGuide) GetCommandDms() []*CommandDm {
	if m != nil {
		return m.CommandDms
	}
	return nil
}

// 智能防挡弹幕蒙版信息
type VideoMask struct {
	// 视频cid
	Cid int64 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	// 平台
	// 0:web端 1:客户端
	Plat int32 `protobuf:"varint,2,opt,name=plat,proto3" json:"plat,omitempty"`
	// 帧率
	Fps int32 `protobuf:"varint,3,opt,name=fps,proto3" json:"fps,omitempty"`
	// 间隔时间
	Time int64 `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`
	// 蒙版url
	MaskUrl              string   `protobuf:"bytes,5,opt,name=mask_url,json=maskUrl,proto3" json:"mask_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VideoMask) Reset()         { *m = VideoMask{} }
func (m *VideoMask) String() string { return proto.CompactTextString(m) }
func (*VideoMask) ProtoMessage()    {}
func (*VideoMask) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{22}
}

func (m *VideoMask) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoMask.Unmarshal(m, b)
}
func (m *VideoMask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoMask.Marshal(b, m, deterministic)
}
func (m *VideoMask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoMask.Merge(m, src)
}
func (m *VideoMask) XXX_Size() int {
	return xxx_messageInfo_VideoMask.Size(m)
}
func (m *VideoMask) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoMask.DiscardUnknown(m)
}

var xxx_messageInfo_VideoMask proto.InternalMessageInfo

func (m *VideoMask) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *VideoMask) GetPlat() int32 {
	if m != nil {
		return m.Plat
	}
	return 0
}

func (m *VideoMask) GetFps() int32 {
	if m != nil {
		return m.Fps
	}
	return 0
}

func (m *VideoMask) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *VideoMask) GetMaskUrl() string {
	if m != nil {
		return m.MaskUrl
	}
	return ""
}

// 视频字幕信息
type VideoSubtitle struct {
	// 视频原语言代码
	Lan string `protobuf:"bytes,1,opt,name=lan,proto3" json:"lan,omitempty"`
	// 视频原语言
	LanDoc string `protobuf:"bytes,2,opt,name=lanDoc,proto3" json:"lanDoc,omitempty"`
	// 视频字幕列表
	Subtitles            []*SubtitleItem `protobuf:"bytes,3,rep,name=subtitles,proto3" json:"subtitles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *VideoSubtitle) Reset()         { *m = VideoSubtitle{} }
func (m *VideoSubtitle) String() string { return proto.CompactTextString(m) }
func (*VideoSubtitle) ProtoMessage()    {}
func (*VideoSubtitle) Descriptor() ([]byte, []int) {
	return fileDescriptor_4719876a333af26d, []int{23}
}

func (m *VideoSubtitle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VideoSubtitle.Unmarshal(m, b)
}
func (m *VideoSubtitle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VideoSubtitle.Marshal(b, m, deterministic)
}
func (m *VideoSubtitle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoSubtitle.Merge(m, src)
}
func (m *VideoSubtitle) XXX_Size() int {
	return xxx_messageInfo_VideoSubtitle.Size(m)
}
func (m *VideoSubtitle) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoSubtitle.DiscardUnknown(m)
}

var xxx_messageInfo_VideoSubtitle proto.InternalMessageInfo

func (m *VideoSubtitle) GetLan() string {
	if m != nil {
		return m.Lan
	}
	return ""
}

func (m *VideoSubtitle) GetLanDoc() string {
	if m != nil {
		return m.LanDoc
	}
	return ""
}

func (m *VideoSubtitle) GetSubtitles() []*SubtitleItem {
	if m != nil {
		return m.Subtitles
	}
	return nil
}

func init() {
	proto.RegisterType((*Chronos)(nil), "bilibili.tv.interfaces.dm.v1.Chronos")
	proto.RegisterType((*CommandDm)(nil), "bilibili.tv.interfaces.dm.v1.CommandDm")
	proto.RegisterType((*CommandDmOtt)(nil), "bilibili.tv.interfaces.dm.v1.CommandDmOtt")
	proto.RegisterType((*CommandDmsOttReply)(nil), "bilibili.tv.interfaces.dm.v1.CommandDmsOttReply")
	proto.RegisterType((*CommandDmsOttReq)(nil), "bilibili.tv.interfaces.dm.v1.CommandDmsOttReq")
	proto.RegisterType((*DanmakuAIFlag)(nil), "bilibili.tv.interfaces.dm.v1.DanmakuAIFlag")
	proto.RegisterType((*DanmakuElem)(nil), "bilibili.tv.interfaces.dm.v1.DanmakuElem")
	proto.RegisterType((*DanmakuFlag)(nil), "bilibili.tv.interfaces.dm.v1.DanmakuFlag")
	proto.RegisterType((*DanmakuFlagConfig)(nil), "bilibili.tv.interfaces.dm.v1.DanmakuFlagConfig")
	proto.RegisterType((*DanmuDefaultPlayerConfig)(nil), "bilibili.tv.interfaces.dm.v1.DanmuDefaultPlayerConfig")
	proto.RegisterType((*DanmuPlayerConfig)(nil), "bilibili.tv.interfaces.dm.v1.DanmuPlayerConfig")
	proto.RegisterType((*DanmuPlayerDynamicConfig)(nil), "bilibili.tv.interfaces.dm.v1.DanmuPlayerDynamicConfig")
	proto.RegisterType((*DanmuPlayerViewConfig)(nil), "bilibili.tv.interfaces.dm.v1.DanmuPlayerViewConfig")
	proto.RegisterType((*DmSegMobileReply)(nil), "bilibili.tv.interfaces.dm.v1.DmSegMobileReply")
	proto.RegisterType((*DmSegMobileReq)(nil), "bilibili.tv.interfaces.dm.v1.DmSegMobileReq")
	proto.RegisterType((*DmViewReply)(nil), "bilibili.tv.interfaces.dm.v1.DmViewReply")
	proto.RegisterType((*DmViewReq)(nil), "bilibili.tv.interfaces.dm.v1.DmViewReq")
	proto.RegisterType((*SubtitleItem)(nil), "bilibili.tv.interfaces.dm.v1.SubtitleItem")
	proto.RegisterType((*TvViewProgressReply)(nil), "bilibili.tv.interfaces.dm.v1.TvViewProgressReply")
	proto.RegisterType((*TvViewProgressReq)(nil), "bilibili.tv.interfaces.dm.v1.TvViewProgressReq")
	proto.RegisterType((*UserInfo)(nil), "bilibili.tv.interfaces.dm.v1.UserInfo")
	proto.RegisterType((*VideoGuide)(nil), "bilibili.tv.interfaces.dm.v1.VideoGuide")
	proto.RegisterType((*VideoMask)(nil), "bilibili.tv.interfaces.dm.v1.VideoMask")
	proto.RegisterType((*VideoSubtitle)(nil), "bilibili.tv.interfaces.dm.v1.VideoSubtitle")
}

func init() {
	proto.RegisterFile("grpc_api/bilibili/tv/interfaces/dm/v1/dm.proto", fileDescriptor_4719876a333af26d)
}

var fileDescriptor_4719876a333af26d = []byte{
	// 2025 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0xcf, 0x72, 0x1b, 0xc7,
	0xd1, 0x2f, 0xfc, 0x07, 0x9a, 0x04, 0x45, 0x8d, 0x44, 0x09, 0x92, 0xa5, 0xcf, 0xf4, 0xca, 0xfe,
	0x4c, 0x47, 0x55, 0x64, 0x2c, 0xc7, 0xbe, 0x38, 0x65, 0x45, 0x12, 0x1c, 0x93, 0x65, 0x2b, 0x52,
	0x0d, 0x2d, 0x55, 0x6e, 0x5b, 0xc3, 0xdd, 0x01, 0x30, 0xe1, 0xee, 0xce, 0x66, 0x67, 0x00, 0x12,
	0x39, 0xe4, 0x92, 0x07, 0xc8, 0x29, 0x0f, 0x90, 0xca, 0x25, 0xb7, 0x1c, 0xf3, 0x00, 0xb9, 0xe5,
	0x25, 0x72, 0xcc, 0x3d, 0x79, 0x81, 0xd4, 0xf4, 0xcc, 0x62, 0x77, 0x41, 0x90, 0x84, 0x7d, 0xd6,
	0x01, 0x85, 0x9e, 0x9e, 0xee, 0x9e, 0x99, 0x9e, 0x5f, 0xf7, 0x6c, 0x37, 0xec, 0x8f, 0xb3, 0x34,
	0xf0, 0x59, 0x2a, 0x0e, 0x4e, 0x44, 0x24, 0xcc, 0xef, 0x40, 0xcf, 0x0e, 0x44, 0xa2, 0x79, 0x36,
	0x62, 0x01, 0x57, 0x07, 0x61, 0x7c, 0x30, 0xfb, 0xf4, 0x20, 0x8c, 0xf7, 0xd3, 0x4c, 0x6a, 0x49,
	0x1e, 0xe4, 0x62, 0xfb, 0x7a, 0xb6, 0x5f, 0x88, 0xed, 0x87, 0xf1, 0xfe, 0xec, 0x53, 0xef, 0x05,
	0x74, 0x5e, 0x4c, 0x32, 0x99, 0x48, 0x45, 0xb6, 0xa1, 0x11, 0x87, 0x9f, 0x0f, 0x6a, 0xbb, 0xb5,
	0xbd, 0x1e, 0x35, 0x24, 0x21, 0xd0, 0x1c, 0x89, 0x88, 0x0f, 0xea, 0xc8, 0x42, 0xda, 0xf0, 0x94,
	0x18, 0x27, 0x83, 0x86, 0xe5, 0x19, 0xda, 0xfb, 0x77, 0x0d, 0x7a, 0x2f, 0x64, 0x1c, 0xb3, 0x24,
	0x1c, 0xc6, 0x64, 0x0b, 0xea, 0x22, 0x44, 0x33, 0x0d, 0x5a, 0x17, 0xa1, 0xb1, 0x2b, 0x45, 0x88,
	0x46, 0x1a, 0xd4, 0x90, 0xb8, 0x92, 0x08, 0x9d, 0x09, 0x43, 0x92, 0x01, 0x74, 0x02, 0x6b, 0x60,
	0xd0, 0x44, 0x6e, 0x3e, 0xb4, 0x33, 0x89, 0xe6, 0x89, 0x1e, 0xb4, 0xf2, 0x19, 0x1c, 0x92, 0xfb,
	0xd0, 0x4d, 0x33, 0x39, 0xce, 0xb8, 0x52, 0x83, 0xf6, 0x6e, 0x6d, 0xaf, 0x45, 0x17, 0x63, 0x72,
	0x1b, 0x5a, 0x81, 0x16, 0x31, 0x1f, 0x74, 0x50, 0xc7, 0x0e, 0x0c, 0x37, 0x46, 0x6e, 0xd7, 0x72,
	0xe3, 0x9c, 0xcb, 0xcf, 0x75, 0xc6, 0x06, 0x3d, 0xcb, 0xc5, 0x81, 0xe1, 0x8a, 0xf0, 0x58, 0x67,
	0x03, 0xb0, 0x5c, 0x1c, 0x78, 0x7f, 0xaa, 0xc3, 0xe6, 0xe2, 0xa4, 0xaf, 0xb4, 0xfe, 0x61, 0x87,
	0x6d, 0xd8, 0xc3, 0x12, 0x68, 0xea, 0x79, 0xca, 0xf1, 0xa4, 0x2d, 0x8a, 0x74, 0xd9, 0x01, 0xad,
	0x4b, 0x1d, 0xd0, 0xae, 0x3a, 0xe0, 0x36, 0xb4, 0x94, 0x66, 0xda, 0x1e, 0xb2, 0x45, 0xed, 0xa0,
	0xe2, 0x96, 0xee, 0x65, 0x6e, 0xe9, 0xad, 0x74, 0x0b, 0xac, 0x74, 0xcb, 0x46, 0xd9, 0x2d, 0x3b,
	0xd0, 0x16, 0xa1, 0xaf, 0x74, 0x36, 0xd8, 0x2c, 0xfb, 0x65, 0x02, 0x64, 0xe1, 0x16, 0xf5, 0x4a,
	0x6b, 0xca, 0xd3, 0x68, 0x4e, 0x28, 0xdc, 0x70, 0xa7, 0xf0, 0xc3, 0x58, 0xf9, 0x52, 0xeb, 0x41,
	0x6d, 0xb7, 0xb1, 0xb7, 0xf1, 0xe4, 0x27, 0xfb, 0x57, 0x81, 0x72, 0xbf, 0xec, 0x61, 0xda, 0x0f,
	0xca, 0x86, 0xbd, 0x43, 0xd8, 0x5e, 0x5a, 0xe9, 0xb7, 0xc6, 0xc5, 0x6c, 0x71, 0x0b, 0x86, 0x34,
	0x9c, 0xa0, 0xb8, 0x86, 0x60, 0xd5, 0x35, 0x78, 0x6f, 0xa0, 0x3f, 0x64, 0x49, 0xcc, 0x4e, 0xa7,
	0xcf, 0x8e, 0x7e, 0x19, 0xb1, 0x31, 0x19, 0x42, 0x37, 0x8c, 0xfd, 0x51, 0xc4, 0xc6, 0xca, 0xed,
	0xf3, 0x93, 0xab, 0xf7, 0xe9, 0xd4, 0x8d, 0x32, 0xed, 0x84, 0xb1, 0xf9, 0x57, 0xde, 0xdf, 0xeb,
	0xb0, 0xe1, 0x26, 0xbe, 0x8e, 0xf8, 0xc5, 0x70, 0x28, 0xdf, 0x4f, 0x7d, 0xe9, 0x7e, 0x08, 0x34,
	0x63, 0x19, 0x72, 0xdc, 0x65, 0x8b, 0x22, 0x6d, 0xe4, 0x47, 0x32, 0xd1, 0x4a, 0xfc, 0x2e, 0x47,
	0xcc, 0x62, 0x8c, 0xf7, 0x29, 0x23, 0x99, 0x21, 0x66, 0xfa, 0xd4, 0x0e, 0x0c, 0x62, 0x62, 0x11,
	0x1e, 0x32, 0x35, 0xc9, 0x11, 0xe3, 0x86, 0x65, 0x2c, 0x75, 0x2e, 0x60, 0x29, 0x58, 0x84, 0x46,
	0x23, 0x47, 0xc6, 0x1d, 0x68, 0x9f, 0x71, 0x31, 0x9e, 0x68, 0x04, 0x4c, 0x8b, 0xba, 0x91, 0xe1,
	0xb3, 0x40, 0x0b, 0x99, 0x38, 0xc8, 0xb8, 0x91, 0xd9, 0x7f, 0x2a, 0x65, 0x84, 0x90, 0x69, 0x51,
	0xa4, 0x8b, 0x40, 0x2a, 0x03, 0xc6, 0x48, 0x32, 0xad, 0xb3, 0x41, 0xdf, 0x4a, 0x1a, 0xda, 0xfb,
	0x7c, 0xe1, 0x38, 0xbc, 0x0e, 0x02, 0xcd, 0x30, 0x5e, 0xb8, 0x0e, 0x69, 0xcc, 0x48, 0x11, 0x1b,
	0xa3, 0xe3, 0xfa, 0x14, 0x69, 0x6f, 0x02, 0x37, 0x4b, 0x6a, 0x2f, 0x64, 0x32, 0x12, 0x63, 0x72,
	0x0f, 0xba, 0x19, 0x0f, 0xf0, 0x32, 0xd1, 0x40, 0x8b, 0x76, 0x32, 0x1e, 0xa0, 0x5d, 0x37, 0xa5,
	0xf9, 0xb9, 0x76, 0x99, 0xcd, 0x4c, 0x7d, 0xcf, 0xcf, 0x35, 0x79, 0x08, 0x60, 0xa6, 0xd4, 0x99,
	0xd0, 0xc1, 0xc4, 0xdd, 0x42, 0x2f, 0xe3, 0xc1, 0x31, 0x32, 0xbc, 0x7f, 0x75, 0x60, 0x60, 0x96,
	0x9a, 0x0e, 0xf9, 0x88, 0x4d, 0x23, 0xfd, 0x3a, 0x62, 0x73, 0x9e, 0xb9, 0x15, 0x0f, 0xe1, 0x83,
	0x14, 0xc7, 0x7e, 0x68, 0x77, 0xe3, 0x4f, 0x15, 0xf7, 0x43, 0x2b, 0xe9, 0x07, 0x28, 0x84, 0x5b,
	0xe9, 0xd2, 0x87, 0x56, 0xd0, 0xed, 0xfa, 0x8d, 0xe2, 0xce, 0x9e, 0xb3, 0xf4, 0x2b, 0xf8, 0x70,
	0xc9, 0x12, 0x13, 0x7e, 0xc6, 0x4d, 0x1c, 0xf0, 0x24, 0xe4, 0x61, 0xbe, 0xbf, 0x26, 0x1a, 0xdb,
	0xad, 0x18, 0x7b, 0x26, 0x68, 0x21, 0x68, 0xb7, 0x4d, 0xbe, 0x83, 0x47, 0x57, 0xdb, 0x8b, 0xf8,
	0x8c, 0x47, 0x88, 0xa1, 0x16, 0x7d, 0xff, 0x72, 0x73, 0xdf, 0x19, 0x31, 0xf2, 0x05, 0xdc, 0x5d,
	0xb2, 0x76, 0x12, 0xc9, 0xe0, 0x54, 0xcb, 0x14, 0xd1, 0xd6, 0xa5, 0x3b, 0x15, 0x0b, 0xcf, 0xdd,
	0x24, 0xf9, 0x39, 0xdc, 0x5f, 0xa5, 0xa7, 0x82, 0x4c, 0x46, 0x11, 0xc2, 0xb1, 0x4b, 0x07, 0x17,
	0x55, 0xed, 0xfc, 0x65, 0xda, 0x27, 0x52, 0x6b, 0x19, 0x23, 0x68, 0x57, 0x6a, 0xdb, 0x79, 0xf2,
	0x0b, 0x78, 0xb0, 0x4a, 0x1b, 0xc3, 0x65, 0x34, 0x8d, 0x10, 0xdd, 0x5d, 0x7a, 0xff, 0xa2, 0x7e,
	0x2e, 0x71, 0xd9, 0xfa, 0x19, 0x4f, 0x39, 0xd3, 0x18, 0x05, 0x2b, 0xd7, 0xb7, 0xf3, 0xe4, 0x2b,
	0x78, 0x6f, 0xe5, 0xd9, 0x53, 0x1e, 0x08, 0x66, 0xc3, 0xa5, 0x4b, 0xef, 0xad, 0x38, 0xbc, 0x15,
	0x20, 0x3f, 0x83, 0x3b, 0x4b, 0xfa, 0x32, 0x65, 0x81, 0xd0, 0x73, 0x0c, 0xaa, 0x3a, 0xbd, 0x5d,
	0x51, 0x7d, 0x65, 0xe7, 0x56, 0x9c, 0x5a, 0x05, 0x2c, 0x12, 0xc9, 0x78, 0xc4, 0x02, 0x2d, 0x6d,
	0xec, 0xd5, 0x97, 0x4e, 0x7d, 0x5c, 0x96, 0x20, 0x4f, 0x60, 0x67, 0xc9, 0x42, 0x28, 0x63, 0x26,
	0x92, 0xc1, 0x16, 0xaa, 0xde, 0xaa, 0xa8, 0x0e, 0x71, 0x8a, 0xfc, 0x14, 0x6e, 0x2f, 0xaf, 0x9a,
	0x72, 0x1e, 0x0e, 0x6e, 0x20, 0xbc, 0x48, 0x75, 0x35, 0x33, 0x43, 0x9e, 0xc2, 0x03, 0x91, 0x44,
	0x22, 0xe1, 0xfe, 0xb2, 0xa2, 0xc5, 0xf9, 0xb6, 0x75, 0x8f, 0x95, 0x79, 0x5d, 0xd1, 0xb7, 0x00,
	0xbf, 0x18, 0x7a, 0x8a, 0x27, 0x42, 0x66, 0xbe, 0x49, 0xa0, 0xb9, 0x95, 0x9b, 0xb8, 0x7e, 0x35,
	0xf4, 0x8e, 0x51, 0xec, 0xa5, 0x0c, 0xb9, 0x8b, 0xf0, 0x7f, 0xf6, 0x6c, 0x32, 0x99, 0x56, 0x42,
	0xfb, 0xa2, 0x1b, 0x9c, 0x4d, 0x1b, 0xce, 0x55, 0x37, 0xb8, 0x3d, 0x7d, 0x79, 0x01, 0x30, 0x56,
	0xc7, 0x57, 0x6c, 0x66, 0xbf, 0xa8, 0xba, 0xf4, 0xee, 0x0a, 0xc5, 0x63, 0x36, 0xe3, 0xeb, 0xe5,
	0x92, 0xc6, 0xbb, 0x5c, 0xf2, 0x2e, 0x97, 0xbc, 0xcb, 0x25, 0xd5, 0x5c, 0x32, 0x84, 0xff, 0x5b,
	0xd2, 0xe0, 0x09, 0x3b, 0x89, 0x38, 0xfa, 0x28, 0x12, 0x4a, 0xbb, 0x6c, 0xf2, 0xa0, 0xa2, 0xfb,
	0x75, 0x55, 0xe6, 0xda, 0x8c, 0x74, 0xf3, 0xba, 0x8c, 0x74, 0xa9, 0x01, 0x17, 0xbb, 0x04, 0x0f,
	0xb0, 0xca, 0x80, 0x8b, 0xdb, 0xe7, 0x17, 0xce, 0x21, 0xa4, 0xaa, 0xa4, 0x90, 0x5b, 0x68, 0xa2,
	0xea, 0xf1, 0x23, 0xa9, 0x8a, 0x2c, 0xe2, 0xfd, 0xc6, 0x7d, 0xad, 0x38, 0xfb, 0xf3, 0x84, 0xc5,
	0x22, 0x70, 0xf6, 0xcb, 0x5f, 0xa1, 0xb5, 0xa5, 0xaf, 0xd0, 0x1f, 0x71, 0x53, 0xde, 0x7f, 0xea,
	0xb0, 0x53, 0x5a, 0xec, 0xad, 0xe0, 0x67, 0x6e, 0xa5, 0x39, 0x3c, 0x34, 0x66, 0xa6, 0xc6, 0x8c,
	0x4b, 0x60, 0xce, 0x7a, 0xe9, 0x9b, 0x68, 0xe3, 0xc9, 0x17, 0xd7, 0x7f, 0x6a, 0xaf, 0xfa, 0xec,
	0xa2, 0xf7, 0x9d, 0xf1, 0x55, 0x9f, 0x64, 0x01, 0xec, 0xe4, 0x4b, 0x57, 0x97, 0xac, 0xe3, 0x92,
	0x07, 0x6b, 0x2c, 0x59, 0x59, 0xeb, 0x96, 0xb3, 0x56, 0x59, 0xa4, 0x74, 0xbe, 0xdc, 0x6b, 0xd6,
	0xd3, 0x45, 0x9e, 0x6e, 0xac, 0x79, 0xbe, 0x15, 0x17, 0xb5, 0x38, 0xdf, 0x8a, 0x39, 0xef, 0x6f,
	0x35, 0xd8, 0x1e, 0xc6, 0xc7, 0x7c, 0xfc, 0x52, 0x9e, 0x88, 0x88, 0xdb, 0xa2, 0xeb, 0x29, 0xb4,
	0x78, 0xc4, 0xe3, 0x1f, 0x56, 0xc2, 0x98, 0x4a, 0x85, 0x5a, 0xbd, 0xa2, 0xac, 0xac, 0x97, 0xcb,
	0xca, 0x21, 0x74, 0x98, 0xb0, 0xdf, 0xd3, 0x0d, 0xf4, 0xde, 0xe3, 0xb5, 0x0c, 0xdb, 0xd2, 0x8a,
	0xb6, 0x99, 0x30, 0xff, 0xde, 0x5f, 0x6b, 0xb0, 0x55, 0xd9, 0x31, 0x16, 0x6f, 0x69, 0x51, 0xbc,
	0xa5, 0x2b, 0x6b, 0xe8, 0xbc, 0x62, 0x6e, 0x94, 0x2a, 0xe6, 0x47, 0xd0, 0x57, 0x7c, 0x1c, 0xf3,
	0x44, 0xfb, 0x22, 0x09, 0xf9, 0x39, 0x3e, 0x61, 0x0d, 0xba, 0xe9, 0x98, 0x47, 0x86, 0x47, 0x3e,
	0x82, 0x2d, 0xcd, 0x79, 0xc2, 0xc6, 0x3c, 0x53, 0xf8, 0x35, 0xe0, 0x5e, 0xa6, 0xfe, 0x82, 0x6b,
	0x1e, 0x7f, 0x2c, 0x2b, 0x32, 0x19, 0xe3, 0xa3, 0xd3, 0xa0, 0x48, 0x7b, 0xff, 0x6d, 0xc2, 0xc6,
	0x30, 0x36, 0x40, 0xb6, 0x7e, 0xbd, 0x03, 0xed, 0x20, 0x92, 0x8a, 0x87, 0xee, 0xd5, 0x77, 0x23,
	0xf2, 0x25, 0x34, 0x63, 0xa6, 0x4e, 0x1d, 0xa6, 0x3e, 0xbe, 0xda, 0x2b, 0x6f, 0x45, 0xc8, 0xe5,
	0x4b, 0xa6, 0x4e, 0x29, 0x2a, 0x91, 0x6f, 0xa0, 0xab, 0xa6, 0x27, 0x5a, 0xe8, 0x88, 0xaf, 0xe7,
	0x56, 0x34, 0x70, 0xec, 0x54, 0xe8, 0x42, 0x99, 0xbc, 0x0f, 0x1b, 0x2e, 0xc1, 0x9b, 0x52, 0x7b,
	0xd0, 0xdc, 0x6d, 0xec, 0xf5, 0x28, 0x38, 0xd6, 0x30, 0x56, 0xe4, 0xb0, 0xb8, 0xbf, 0xd6, 0xba,
	0xe8, 0xaf, 0x94, 0x54, 0xf9, 0x1d, 0x92, 0x5f, 0x43, 0xbf, 0x1a, 0x4d, 0x6d, 0xb4, 0xf7, 0xd9,
	0xda, 0x00, 0x2f, 0x92, 0x03, 0xdd, 0x4c, 0xcb, 0xa1, 0xf4, 0x21, 0x6c, 0x29, 0x9e, 0x84, 0xfe,
	0x89, 0x3c, 0xf7, 0x95, 0x9e, 0x47, 0x79, 0x67, 0x63, 0xd3, 0x70, 0x9f, 0xcb, 0xf3, 0x63, 0xc3,
	0x33, 0xf8, 0x64, 0x51, 0x24, 0xcf, 0xdc, 0x4b, 0x6d, 0x07, 0xe4, 0x3d, 0xe8, 0x05, 0x13, 0x1e,
	0x9c, 0x1a, 0x65, 0xd7, 0xde, 0xe8, 0x22, 0xe3, 0xb9, 0x3c, 0x27, 0x8f, 0x81, 0x2c, 0x26, 0x7d,
	0x35, 0x91, 0x67, 0x7e, 0xac, 0xc6, 0xae, 0x76, 0xbd, 0x91, 0x4b, 0x1d, 0x4f, 0xe4, 0xd9, 0x4b,
	0x35, 0x26, 0x9f, 0xc0, 0xb6, 0xa9, 0x0d, 0x4d, 0x34, 0x07, 0x7c, 0x22, 0xa3, 0x90, 0x67, 0xae,
	0x07, 0x72, 0xc3, 0xf0, 0x5f, 0x17, 0x6c, 0xf2, 0x18, 0x6e, 0x8a, 0x24, 0x9d, 0x56, 0x65, 0x6d,
	0x9d, 0xbb, 0x8d, 0x13, 0x65, 0xe1, 0x47, 0x90, 0xb7, 0x32, 0x7c, 0x84, 0x0e, 0xbe, 0x99, 0x5d,
	0xba, 0xe9, 0x98, 0x2f, 0x0c, 0xcf, 0xfb, 0x63, 0x0d, 0x7a, 0x39, 0xea, 0x7e, 0x7c, 0x6c, 0x98,
	0x10, 0x4e, 0x4d, 0xed, 0x6c, 0x9b, 0x69, 0x76, 0x40, 0x76, 0x61, 0x53, 0x28, 0x7f, 0xc2, 0x32,
	0xe3, 0x61, 0xa9, 0x5d, 0x28, 0x80, 0x50, 0x87, 0x2c, 0x0b, 0x9f, 0x4b, 0xa9, 0x57, 0xc6, 0xc1,
	0x3f, 0x6a, 0xb0, 0x99, 0x03, 0xee, 0x48, 0xaf, 0x68, 0x68, 0x14, 0x2d, 0xa1, 0x7a, 0xb9, 0xc2,
	0xdf, 0x86, 0x46, 0xc4, 0xf2, 0x3e, 0xa1, 0x21, 0xc9, 0x5d, 0xe8, 0x44, 0x2c, 0xf1, 0x43, 0x19,
	0xb8, 0x7d, 0xb5, 0x23, 0x96, 0x0c, 0x65, 0x40, 0x3e, 0x80, 0xcd, 0x1c, 0xc8, 0xfe, 0x34, 0x8b,
	0x5c, 0x07, 0x6c, 0x23, 0xe7, 0xbd, 0xc9, 0x22, 0xf2, 0x15, 0xb4, 0xd9, 0x54, 0x4f, 0x64, 0xe6,
	0xd0, 0xf6, 0xff, 0x57, 0xa3, 0xed, 0x8d, 0xe2, 0xd9, 0x51, 0x32, 0x92, 0xd4, 0x69, 0x79, 0x7f,
	0xae, 0xc1, 0xad, 0xef, 0x67, 0xc6, 0xaf, 0xaf, 0xdd, 0x33, 0x67, 0xa3, 0xfa, 0x08, 0x36, 0x66,
	0x26, 0xa4, 0xfc, 0xf1, 0x54, 0x84, 0xdc, 0xbd, 0x45, 0x7b, 0x6b, 0xc4, 0xe0, 0x37, 0x46, 0x9e,
	0xc2, 0x6c, 0x41, 0x93, 0xa7, 0xd0, 0x09, 0x6c, 0x2b, 0xd5, 0xe5, 0x82, 0x8f, 0xae, 0xe9, 0x72,
	0x59, 0x61, 0x9a, 0x6b, 0x79, 0x7f, 0xa9, 0xc3, 0xcd, 0xe5, 0x3d, 0xae, 0xd7, 0xdc, 0xda, 0x81,
	0xf6, 0x34, 0xf5, 0x8b, 0xfe, 0x56, 0x6b, 0x9a, 0xbe, 0x14, 0xa1, 0xc9, 0x7e, 0x3c, 0x19, 0x9b,
	0xaf, 0x90, 0x19, 0xcf, 0x94, 0x90, 0x89, 0xf3, 0x7b, 0xdf, 0x72, 0xdf, 0x5a, 0xa6, 0x01, 0x7c,
	0xcc, 0x95, 0x62, 0x63, 0xee, 0x63, 0xcb, 0x38, 0x90, 0xf9, 0x15, 0xdc, 0x70, 0xfc, 0xd7, 0x8e,
	0x8d, 0x69, 0x86, 0x67, 0x33, 0x11, 0x70, 0xff, 0x94, 0xcf, 0x5d, 0x7b, 0x09, 0x1c, 0xeb, 0x5b,
	0x3e, 0x37, 0x7b, 0x53, 0x22, 0xc4, 0xb8, 0x6d, 0x50, 0x43, 0xe6, 0x18, 0xee, 0x16, 0x18, 0xce,
	0x51, 0xd6, 0x2b, 0x50, 0x46, 0xf6, 0x60, 0x7b, 0x3c, 0xe5, 0x4a, 0xfb, 0x2c, 0x08, 0xb8, 0x52,
	0x68, 0xdd, 0xc6, 0xe7, 0x16, 0xf2, 0x9f, 0x21, 0xfb, 0x5b, 0x3e, 0xf7, 0x7e, 0x0f, 0xdd, 0xfc,
	0x76, 0xf3, 0xa6, 0x5e, 0xad, 0xd2, 0x5b, 0x4d, 0x58, 0xbc, 0x68, 0x59, 0x1b, 0x1a, 0xf7, 0xc4,
	0xcf, 0x73, 0x24, 0x2a, 0x7e, 0x8e, 0x3b, 0x60, 0x01, 0x77, 0xee, 0x40, 0x7a, 0xd1, 0xd8, 0x6e,
	0x15, 0x8d, 0x6d, 0xc3, 0xcb, 0x58, 0x72, 0xea, 0xda, 0xcb, 0x48, 0x7b, 0x6f, 0x01, 0x0a, 0x00,
	0x90, 0x43, 0xd8, 0x28, 0xb5, 0x38, 0x07, 0x75, 0x7c, 0x73, 0x3f, 0x5e, 0xb3, 0xbd, 0x49, 0xa1,
	0xe8, 0x6d, 0x7a, 0x19, 0xf4, 0x16, 0xaf, 0x43, 0x7e, 0xc5, 0xb5, 0xe2, 0x8a, 0x09, 0x34, 0xd3,
	0x88, 0x69, 0xf7, 0x28, 0x23, 0x6d, 0xa4, 0x46, 0xa9, 0x72, 0x91, 0x6f, 0x48, 0x4c, 0x06, 0x22,
	0xe6, 0xee, 0x2d, 0x44, 0x9a, 0xdc, 0x83, 0xae, 0x79, 0x6b, 0x4a, 0x91, 0xd5, 0x31, 0xe3, 0x37,
	0x59, 0xe4, 0xfd, 0xa1, 0x06, 0xfd, 0xca, 0x8b, 0x92, 0x47, 0x6d, 0xad, 0x88, 0xda, 0x3b, 0xe0,
	0xc2, 0xd4, 0xf9, 0x34, 0x0f, 0xda, 0x43, 0xe8, 0xe5, 0x01, 0xaa, 0xdc, 0x37, 0xce, 0x35, 0x6d,
	0xdd, 0x72, 0x16, 0xa1, 0x85, 0xf2, 0x49, 0x1b, 0x51, 0xf7, 0xd9, 0xff, 0x02, 0x00, 0x00, 0xff,
	0xff, 0xbd, 0x2a, 0xd6, 0x50, 0xda, 0x18, 0x00, 0x00,
}
