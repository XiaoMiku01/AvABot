// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc_api/bilibili/app/archive/v1/archive.proto

package bilibili_app_archive_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 稿件基本信息
type Arc struct {
	// 稿件avid
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// 稿件分P数
	Videos int64 `protobuf:"varint,2,opt,name=videos,proto3" json:"videos,omitempty"`
	// 分区id
	TypeId int32 `protobuf:"varint,3,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	// 二级分区名
	TypeName string `protobuf:"bytes,4,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	// 稿件类型
	// 1:原创 2:转载
	Copyright int32 `protobuf:"varint,5,opt,name=copyright,proto3" json:"copyright,omitempty"`
	// 稿件封面url
	Pic string `protobuf:"bytes,6,opt,name=pic,proto3" json:"pic,omitempty"`
	// 稿件标题
	Title string `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	// 稿件发布时间
	Pubdate int64 `protobuf:"varint,8,opt,name=pubdate,proto3" json:"pubdate,omitempty"`
	// 用户投稿时间
	Ctime int64 `protobuf:"varint,9,opt,name=ctime,proto3" json:"ctime,omitempty"`
	// 稿件简介
	Desc string `protobuf:"bytes,10,opt,name=desc,proto3" json:"desc,omitempty"`
	// 稿件状态
	State int32 `protobuf:"varint,11,opt,name=state,proto3" json:"state,omitempty"`
	// 访问属性
	// 0:全部可见 10000:登录可见
	Access int32 `protobuf:"varint,12,opt,name=access,proto3" json:"access,omitempty"`
	// 属性位配置(现在无了)
	Attribute int32 `protobuf:"varint,13,opt,name=attribute,proto3" json:"attribute,omitempty"`
	// 空
	Tag string `protobuf:"bytes,14,opt,name=tag,proto3" json:"tag,omitempty"`
	// 空
	Tags []string `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty"`
	// 稿件总时长(单位为秒)
	Duration int64 `protobuf:"varint,16,opt,name=duration,proto3" json:"duration,omitempty"`
	// 参与的活动id
	MissionId int64 `protobuf:"varint,17,opt,name=mission_id,json=missionId,proto3" json:"mission_id,omitempty"`
	// 绑定的商单id
	OrderId int64 `protobuf:"varint,18,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// PGC稿件强制重定向url(如番剧、影视)
	RedirectUrl string `protobuf:"bytes,19,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`
	// 空
	Forward int64 `protobuf:"varint,20,opt,name=forward,proto3" json:"forward,omitempty"`
	// 控制标志
	Rights *Rights `protobuf:"bytes,21,opt,name=rights,proto3" json:"rights,omitempty"`
	// UP主信息
	Author *Author `protobuf:"bytes,22,opt,name=author,proto3" json:"author,omitempty"`
	// 状态数
	Stat *Stat `protobuf:"bytes,23,opt,name=stat,proto3" json:"stat,omitempty"`
	// 空
	ReportResult string `protobuf:"bytes,24,opt,name=report_result,json=reportResult,proto3" json:"report_result,omitempty"`
	// 投稿时发送的动态内容
	Dynamic string `protobuf:"bytes,25,opt,name=dynamic,proto3" json:"dynamic,omitempty"`
	// 稿件1P cid
	FirstCid int64 `protobuf:"varint,26,opt,name=first_cid,json=firstCid,proto3" json:"first_cid,omitempty"`
	// 稿件1P 分辨率
	Dimension *Dimension `protobuf:"bytes,27,opt,name=dimension,proto3" json:"dimension,omitempty"`
	// 合作组成员列表
	StaffInfo []*StaffInfo `protobuf:"bytes,28,rep,name=staff_info,json=staffInfo,proto3" json:"staff_info,omitempty"`
	// UGC合集id
	SeasonId int64 `protobuf:"varint,29,opt,name=season_id,json=seasonId,proto3" json:"season_id,omitempty"`
	// 新版属性位配置(也没用)
	AttributeV2          int64    `protobuf:"varint,30,opt,name=attribute_v2,json=attributeV2,proto3" json:"attribute_v2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Arc) Reset()         { *m = Arc{} }
func (m *Arc) String() string { return proto.CompactTextString(m) }
func (*Arc) ProtoMessage()    {}
func (*Arc) Descriptor() ([]byte, []int) {
	return fileDescriptor_5428eeb21b0e062c, []int{0}
}

func (m *Arc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Arc.Unmarshal(m, b)
}
func (m *Arc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Arc.Marshal(b, m, deterministic)
}
func (m *Arc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Arc.Merge(m, src)
}
func (m *Arc) XXX_Size() int {
	return xxx_messageInfo_Arc.Size(m)
}
func (m *Arc) XXX_DiscardUnknown() {
	xxx_messageInfo_Arc.DiscardUnknown(m)
}

var xxx_messageInfo_Arc proto.InternalMessageInfo

func (m *Arc) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *Arc) GetVideos() int64 {
	if m != nil {
		return m.Videos
	}
	return 0
}

func (m *Arc) GetTypeId() int32 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *Arc) GetTypeName() string {
	if m != nil {
		return m.TypeName
	}
	return ""
}

func (m *Arc) GetCopyright() int32 {
	if m != nil {
		return m.Copyright
	}
	return 0
}

func (m *Arc) GetPic() string {
	if m != nil {
		return m.Pic
	}
	return ""
}

func (m *Arc) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Arc) GetPubdate() int64 {
	if m != nil {
		return m.Pubdate
	}
	return 0
}

func (m *Arc) GetCtime() int64 {
	if m != nil {
		return m.Ctime
	}
	return 0
}

func (m *Arc) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Arc) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *Arc) GetAccess() int32 {
	if m != nil {
		return m.Access
	}
	return 0
}

func (m *Arc) GetAttribute() int32 {
	if m != nil {
		return m.Attribute
	}
	return 0
}

func (m *Arc) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Arc) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Arc) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Arc) GetMissionId() int64 {
	if m != nil {
		return m.MissionId
	}
	return 0
}

func (m *Arc) GetOrderId() int64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *Arc) GetRedirectUrl() string {
	if m != nil {
		return m.RedirectUrl
	}
	return ""
}

func (m *Arc) GetForward() int64 {
	if m != nil {
		return m.Forward
	}
	return 0
}

func (m *Arc) GetRights() *Rights {
	if m != nil {
		return m.Rights
	}
	return nil
}

func (m *Arc) GetAuthor() *Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Arc) GetStat() *Stat {
	if m != nil {
		return m.Stat
	}
	return nil
}

func (m *Arc) GetReportResult() string {
	if m != nil {
		return m.ReportResult
	}
	return ""
}

func (m *Arc) GetDynamic() string {
	if m != nil {
		return m.Dynamic
	}
	return ""
}

func (m *Arc) GetFirstCid() int64 {
	if m != nil {
		return m.FirstCid
	}
	return 0
}

func (m *Arc) GetDimension() *Dimension {
	if m != nil {
		return m.Dimension
	}
	return nil
}

func (m *Arc) GetStaffInfo() []*StaffInfo {
	if m != nil {
		return m.StaffInfo
	}
	return nil
}

func (m *Arc) GetSeasonId() int64 {
	if m != nil {
		return m.SeasonId
	}
	return 0
}

func (m *Arc) GetAttributeV2() int64 {
	if m != nil {
		return m.AttributeV2
	}
	return 0
}

// UP主信息
type Author struct {
	// UP主mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// UP主昵称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// UP主头像url
	Face                 string   `protobuf:"bytes,3,opt,name=face,proto3" json:"face,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Author) Reset()         { *m = Author{} }
func (m *Author) String() string { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()    {}
func (*Author) Descriptor() ([]byte, []int) {
	return fileDescriptor_5428eeb21b0e062c, []int{1}
}

func (m *Author) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Author.Unmarshal(m, b)
}
func (m *Author) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Author.Marshal(b, m, deterministic)
}
func (m *Author) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Author.Merge(m, src)
}
func (m *Author) XXX_Size() int {
	return xxx_messageInfo_Author.Size(m)
}
func (m *Author) XXX_DiscardUnknown() {
	xxx_messageInfo_Author.DiscardUnknown(m)
}

var xxx_messageInfo_Author proto.InternalMessageInfo

func (m *Author) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *Author) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Author) GetFace() string {
	if m != nil {
		return m.Face
	}
	return ""
}

// 分辨率
type Dimension struct {
	// 宽度
	Width int64 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	// 高度
	Height int64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	// 方向
	// 0:横屏 1:竖屏
	Rotate               int64    `protobuf:"varint,3,opt,name=rotate,proto3" json:"rotate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dimension) Reset()         { *m = Dimension{} }
func (m *Dimension) String() string { return proto.CompactTextString(m) }
func (*Dimension) ProtoMessage()    {}
func (*Dimension) Descriptor() ([]byte, []int) {
	return fileDescriptor_5428eeb21b0e062c, []int{2}
}

func (m *Dimension) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dimension.Unmarshal(m, b)
}
func (m *Dimension) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dimension.Marshal(b, m, deterministic)
}
func (m *Dimension) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dimension.Merge(m, src)
}
func (m *Dimension) XXX_Size() int {
	return xxx_messageInfo_Dimension.Size(m)
}
func (m *Dimension) XXX_DiscardUnknown() {
	xxx_messageInfo_Dimension.DiscardUnknown(m)
}

var xxx_messageInfo_Dimension proto.InternalMessageInfo

func (m *Dimension) GetWidth() int64 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Dimension) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Dimension) GetRotate() int64 {
	if m != nil {
		return m.Rotate
	}
	return 0
}

// 分P信息
type Page struct {
	// 视频cid
	Cid int64 `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	// 分P序号
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// 源类型
	// vupload:B站 qq:腾讯 hunan:芒果
	From string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	// 分P标题
	Part string `protobuf:"bytes,4,opt,name=part,proto3" json:"part,omitempty"`
	// 分P时长(单位为秒)
	Duration int64 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	// 外链vid
	Vid string `protobuf:"bytes,6,opt,name=vid,proto3" json:"vid,omitempty"`
	// 分P简介
	Desc string `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc,omitempty"`
	// 外链url
	WebLink string `protobuf:"bytes,8,opt,name=webLink,proto3" json:"webLink,omitempty"`
	// 分P分辨率
	Dimension            *Dimension `protobuf:"bytes,9,opt,name=dimension,proto3" json:"dimension,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Page) Reset()         { *m = Page{} }
func (m *Page) String() string { return proto.CompactTextString(m) }
func (*Page) ProtoMessage()    {}
func (*Page) Descriptor() ([]byte, []int) {
	return fileDescriptor_5428eeb21b0e062c, []int{3}
}

func (m *Page) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Page.Unmarshal(m, b)
}
func (m *Page) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Page.Marshal(b, m, deterministic)
}
func (m *Page) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Page.Merge(m, src)
}
func (m *Page) XXX_Size() int {
	return xxx_messageInfo_Page.Size(m)
}
func (m *Page) XXX_DiscardUnknown() {
	xxx_messageInfo_Page.DiscardUnknown(m)
}

var xxx_messageInfo_Page proto.InternalMessageInfo

func (m *Page) GetCid() int64 {
	if m != nil {
		return m.Cid
	}
	return 0
}

func (m *Page) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Page) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Page) GetPart() string {
	if m != nil {
		return m.Part
	}
	return ""
}

func (m *Page) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Page) GetVid() string {
	if m != nil {
		return m.Vid
	}
	return ""
}

func (m *Page) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *Page) GetWebLink() string {
	if m != nil {
		return m.WebLink
	}
	return ""
}

func (m *Page) GetDimension() *Dimension {
	if m != nil {
		return m.Dimension
	}
	return nil
}

// 稿件控制标志
type Rights struct {
	// 老版是否付费
	Bp int32 `protobuf:"varint,1,opt,name=bp,proto3" json:"bp,omitempty"`
	// 允许充电
	Elec int32 `protobuf:"varint,2,opt,name=elec,proto3" json:"elec,omitempty"`
	// 允许下载
	Download int32 `protobuf:"varint,3,opt,name=download,proto3" json:"download,omitempty"`
	// 是否电影
	Movie int32 `protobuf:"varint,4,opt,name=movie,proto3" json:"movie,omitempty"`
	// PGC稿件需要付费
	Pay int32 `protobuf:"varint,5,opt,name=pay,proto3" json:"pay,omitempty"`
	// 是否高码率
	Hd5 int32 `protobuf:"varint,6,opt,name=hd5,proto3" json:"hd5,omitempty"`
	// 是否显示“禁止转载”标志
	NoReprint int32 `protobuf:"varint,7,opt,name=no_reprint,json=noReprint,proto3" json:"no_reprint,omitempty"`
	// 是否允许自动播放
	Autoplay int32 `protobuf:"varint,8,opt,name=autoplay,proto3" json:"autoplay,omitempty"`
	// UGC稿件需要付费(旧版)
	UgcPay int32 `protobuf:"varint,9,opt,name=ugc_pay,json=ugcPay,proto3" json:"ugc_pay,omitempty"`
	// 是否联合投稿
	IsCooperation int32 `protobuf:"varint,10,opt,name=is_cooperation,json=isCooperation,proto3" json:"is_cooperation,omitempty"`
	// 是否UGC付费预览
	UgcPayPreview int32 `protobuf:"varint,11,opt,name=ugc_pay_preview,json=ugcPayPreview,proto3" json:"ugc_pay_preview,omitempty"`
	// 是否禁止后台播放
	NoBackground int32 `protobuf:"varint,12,opt,name=no_background,json=noBackground,proto3" json:"no_background,omitempty"`
	// UGC稿件需要付费
	ArcPay int32 `protobuf:"varint,13,opt,name=arc_pay,json=arcPay,proto3" json:"arc_pay,omitempty"`
	// 是否已付费可自由观看
	PayFreeWatch         int32    `protobuf:"varint,14,opt,name=pay_free_watch,json=payFreeWatch,proto3" json:"pay_free_watch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rights) Reset()         { *m = Rights{} }
func (m *Rights) String() string { return proto.CompactTextString(m) }
func (*Rights) ProtoMessage()    {}
func (*Rights) Descriptor() ([]byte, []int) {
	return fileDescriptor_5428eeb21b0e062c, []int{4}
}

func (m *Rights) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rights.Unmarshal(m, b)
}
func (m *Rights) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rights.Marshal(b, m, deterministic)
}
func (m *Rights) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rights.Merge(m, src)
}
func (m *Rights) XXX_Size() int {
	return xxx_messageInfo_Rights.Size(m)
}
func (m *Rights) XXX_DiscardUnknown() {
	xxx_messageInfo_Rights.DiscardUnknown(m)
}

var xxx_messageInfo_Rights proto.InternalMessageInfo

func (m *Rights) GetBp() int32 {
	if m != nil {
		return m.Bp
	}
	return 0
}

func (m *Rights) GetElec() int32 {
	if m != nil {
		return m.Elec
	}
	return 0
}

func (m *Rights) GetDownload() int32 {
	if m != nil {
		return m.Download
	}
	return 0
}

func (m *Rights) GetMovie() int32 {
	if m != nil {
		return m.Movie
	}
	return 0
}

func (m *Rights) GetPay() int32 {
	if m != nil {
		return m.Pay
	}
	return 0
}

func (m *Rights) GetHd5() int32 {
	if m != nil {
		return m.Hd5
	}
	return 0
}

func (m *Rights) GetNoReprint() int32 {
	if m != nil {
		return m.NoReprint
	}
	return 0
}

func (m *Rights) GetAutoplay() int32 {
	if m != nil {
		return m.Autoplay
	}
	return 0
}

func (m *Rights) GetUgcPay() int32 {
	if m != nil {
		return m.UgcPay
	}
	return 0
}

func (m *Rights) GetIsCooperation() int32 {
	if m != nil {
		return m.IsCooperation
	}
	return 0
}

func (m *Rights) GetUgcPayPreview() int32 {
	if m != nil {
		return m.UgcPayPreview
	}
	return 0
}

func (m *Rights) GetNoBackground() int32 {
	if m != nil {
		return m.NoBackground
	}
	return 0
}

func (m *Rights) GetArcPay() int32 {
	if m != nil {
		return m.ArcPay
	}
	return 0
}

func (m *Rights) GetPayFreeWatch() int32 {
	if m != nil {
		return m.PayFreeWatch
	}
	return 0
}

// 合作成员信息
type StaffInfo struct {
	// 成员mid
	Mid int64 `protobuf:"varint,1,opt,name=mid,proto3" json:"mid,omitempty"`
	// 成员角色
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// 属性位
	// 0:普通 1:赞助商金色标志
	Attribute            int64    `protobuf:"varint,3,opt,name=attribute,proto3" json:"attribute,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StaffInfo) Reset()         { *m = StaffInfo{} }
func (m *StaffInfo) String() string { return proto.CompactTextString(m) }
func (*StaffInfo) ProtoMessage()    {}
func (*StaffInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_5428eeb21b0e062c, []int{5}
}

func (m *StaffInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StaffInfo.Unmarshal(m, b)
}
func (m *StaffInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StaffInfo.Marshal(b, m, deterministic)
}
func (m *StaffInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StaffInfo.Merge(m, src)
}
func (m *StaffInfo) XXX_Size() int {
	return xxx_messageInfo_StaffInfo.Size(m)
}
func (m *StaffInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_StaffInfo.DiscardUnknown(m)
}

var xxx_messageInfo_StaffInfo proto.InternalMessageInfo

func (m *StaffInfo) GetMid() int64 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *StaffInfo) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *StaffInfo) GetAttribute() int64 {
	if m != nil {
		return m.Attribute
	}
	return 0
}

// 状态数
type Stat struct {
	// 稿件avid
	Aid int64 `protobuf:"varint,1,opt,name=aid,proto3" json:"aid,omitempty"`
	// 播放数(当屏蔽时为-1)
	View int32 `protobuf:"varint,2,opt,name=view,proto3" json:"view,omitempty"`
	// 弹幕数
	Danmaku int32 `protobuf:"varint,3,opt,name=danmaku,proto3" json:"danmaku,omitempty"`
	// 评论数
	Reply int32 `protobuf:"varint,4,opt,name=reply,proto3" json:"reply,omitempty"`
	// 收藏数
	Fav int32 `protobuf:"varint,5,opt,name=fav,proto3" json:"fav,omitempty"`
	// 投币数
	Coin int32 `protobuf:"varint,6,opt,name=coin,proto3" json:"coin,omitempty"`
	// 分享数
	Share int32 `protobuf:"varint,7,opt,name=share,proto3" json:"share,omitempty"`
	// 当前排名
	NowRank int32 `protobuf:"varint,8,opt,name=now_rank,json=nowRank,proto3" json:"now_rank,omitempty"`
	// 历史最高排名
	HisRank int32 `protobuf:"varint,9,opt,name=his_rank,json=hisRank,proto3" json:"his_rank,omitempty"`
	// 点赞数
	Like int32 `protobuf:"varint,10,opt,name=like,proto3" json:"like,omitempty"`
	// 点踩数(前端不可见故恒为0)
	Dislike              int32    `protobuf:"varint,11,opt,name=dislike,proto3" json:"dislike,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stat) Reset()         { *m = Stat{} }
func (m *Stat) String() string { return proto.CompactTextString(m) }
func (*Stat) ProtoMessage()    {}
func (*Stat) Descriptor() ([]byte, []int) {
	return fileDescriptor_5428eeb21b0e062c, []int{6}
}

func (m *Stat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stat.Unmarshal(m, b)
}
func (m *Stat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stat.Marshal(b, m, deterministic)
}
func (m *Stat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stat.Merge(m, src)
}
func (m *Stat) XXX_Size() int {
	return xxx_messageInfo_Stat.Size(m)
}
func (m *Stat) XXX_DiscardUnknown() {
	xxx_messageInfo_Stat.DiscardUnknown(m)
}

var xxx_messageInfo_Stat proto.InternalMessageInfo

func (m *Stat) GetAid() int64 {
	if m != nil {
		return m.Aid
	}
	return 0
}

func (m *Stat) GetView() int32 {
	if m != nil {
		return m.View
	}
	return 0
}

func (m *Stat) GetDanmaku() int32 {
	if m != nil {
		return m.Danmaku
	}
	return 0
}

func (m *Stat) GetReply() int32 {
	if m != nil {
		return m.Reply
	}
	return 0
}

func (m *Stat) GetFav() int32 {
	if m != nil {
		return m.Fav
	}
	return 0
}

func (m *Stat) GetCoin() int32 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *Stat) GetShare() int32 {
	if m != nil {
		return m.Share
	}
	return 0
}

func (m *Stat) GetNowRank() int32 {
	if m != nil {
		return m.NowRank
	}
	return 0
}

func (m *Stat) GetHisRank() int32 {
	if m != nil {
		return m.HisRank
	}
	return 0
}

func (m *Stat) GetLike() int32 {
	if m != nil {
		return m.Like
	}
	return 0
}

func (m *Stat) GetDislike() int32 {
	if m != nil {
		return m.Dislike
	}
	return 0
}

func init() {
	proto.RegisterType((*Arc)(nil), "bilibili.app.archive.v1.Arc")
	proto.RegisterType((*Author)(nil), "bilibili.app.archive.v1.Author")
	proto.RegisterType((*Dimension)(nil), "bilibili.app.archive.v1.Dimension")
	proto.RegisterType((*Page)(nil), "bilibili.app.archive.v1.Page")
	proto.RegisterType((*Rights)(nil), "bilibili.app.archive.v1.Rights")
	proto.RegisterType((*StaffInfo)(nil), "bilibili.app.archive.v1.StaffInfo")
	proto.RegisterType((*Stat)(nil), "bilibili.app.archive.v1.Stat")
}

func init() {
	proto.RegisterFile("grpc_api/bilibili/app/archive/v1/archive.proto", fileDescriptor_5428eeb21b0e062c)
}

var fileDescriptor_5428eeb21b0e062c = []byte{
	// 1027 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x5d, 0x6f, 0x23, 0x35,
	0x17, 0x56, 0x9a, 0x4c, 0xd2, 0x71, 0x3f, 0x76, 0x5f, 0xbf, 0xcb, 0xd6, 0xfb, 0x51, 0x08, 0xe1,
	0x43, 0xbd, 0x4a, 0xd5, 0x22, 0xc4, 0x2d, 0xdd, 0x45, 0x48, 0x95, 0x10, 0x2a, 0x5e, 0x01, 0x97,
	0x23, 0xc7, 0x76, 0x12, 0xab, 0x99, 0xb1, 0xe5, 0xf1, 0x4c, 0x94, 0x9f, 0xc0, 0x5f, 0xe2, 0x67,
	0x71, 0xcd, 0x05, 0x3a, 0xc7, 0x9e, 0xc9, 0x16, 0x6d, 0x41, 0xe2, 0x22, 0xd2, 0x79, 0x1e, 0x1f,
	0xdb, 0xcf, 0xf1, 0xf9, 0x98, 0x90, 0xf9, 0xca, 0x3b, 0x59, 0x08, 0x67, 0x2e, 0x17, 0x66, 0x63,
	0xe0, 0x77, 0x29, 0x9c, 0xbb, 0x14, 0x5e, 0xae, 0x4d, 0xab, 0x2f, 0xdb, 0xab, 0xce, 0x9c, 0x3b,
	0x6f, 0x83, 0xa5, 0x67, 0x9d, 0xdb, 0x5c, 0x38, 0x37, 0xef, 0xd6, 0xda, 0xab, 0xd9, 0xef, 0x13,
	0x32, 0xbc, 0xf1, 0x92, 0x3e, 0x25, 0x43, 0x61, 0x14, 0x1b, 0x4c, 0x07, 0x17, 0x43, 0x0e, 0x26,
	0x7d, 0x4e, 0xc6, 0xad, 0x51, 0xda, 0xd6, 0xec, 0x00, 0xc9, 0x84, 0xe8, 0x19, 0x99, 0x84, 0x9d,
	0xd3, 0x85, 0x51, 0x6c, 0x38, 0x1d, 0x5c, 0x64, 0x7c, 0x0c, 0xf0, 0x56, 0xd1, 0x57, 0x24, 0xc7,
	0x85, 0x4a, 0x94, 0x9a, 0x8d, 0xa6, 0x83, 0x8b, 0x9c, 0x1f, 0x02, 0xf1, 0xa3, 0x28, 0x35, 0x7d,
	0x4d, 0x72, 0x69, 0xdd, 0xce, 0x9b, 0xd5, 0x3a, 0xb0, 0x0c, 0xf7, 0xed, 0x09, 0xb8, 0xdd, 0x19,
	0xc9, 0xc6, 0xb8, 0x09, 0x4c, 0xfa, 0x8c, 0x64, 0xc1, 0x84, 0x8d, 0x66, 0x13, 0xe4, 0x22, 0xa0,
	0x8c, 0x4c, 0x5c, 0xb3, 0x50, 0x22, 0x68, 0x76, 0x88, 0xa2, 0x3a, 0x08, 0xfe, 0x32, 0x98, 0x52,
	0xb3, 0x1c, 0xf9, 0x08, 0x28, 0x25, 0x23, 0xa5, 0x6b, 0xc9, 0x08, 0x1e, 0x82, 0x36, 0x78, 0xd6,
	0x01, 0x4e, 0x38, 0x42, 0x15, 0x11, 0x40, 0xb4, 0x42, 0x4a, 0x5d, 0xd7, 0xec, 0x38, 0x06, 0x15,
	0x11, 0xe8, 0x16, 0x21, 0x78, 0xb3, 0x68, 0x82, 0x66, 0x27, 0x51, 0x77, 0x4f, 0x80, 0xee, 0x20,
	0x56, 0xec, 0x34, 0xea, 0x0e, 0x62, 0x05, 0x37, 0x06, 0xb1, 0xaa, 0xd9, 0x93, 0xe9, 0x10, 0x6e,
	0x04, 0x9b, 0xbe, 0x24, 0x87, 0xaa, 0xf1, 0x22, 0x18, 0x5b, 0xb1, 0xa7, 0x28, 0xaf, 0xc7, 0xf4,
	0x9c, 0x90, 0xd2, 0xd4, 0xb5, 0xb1, 0x15, 0x3c, 0xe8, 0xff, 0x70, 0x35, 0x4f, 0xcc, 0xad, 0xa2,
	0x2f, 0xc8, 0xa1, 0xf5, 0x4a, 0x7b, 0x58, 0xa4, 0x31, 0x62, 0xc4, 0xb7, 0x8a, 0x7e, 0x4a, 0x8e,
	0xbd, 0x56, 0xc6, 0x6b, 0x19, 0x8a, 0xc6, 0x6f, 0xd8, 0xff, 0x51, 0xc4, 0x51, 0xc7, 0xfd, 0xec,
	0x37, 0xf0, 0x5c, 0x4b, 0xeb, 0xb7, 0xc2, 0x2b, 0xf6, 0x2c, 0x6e, 0x4e, 0x90, 0x7e, 0x43, 0xc6,
	0xf8, 0xf2, 0x35, 0xfb, 0x68, 0x3a, 0xb8, 0x38, 0xba, 0xfe, 0x64, 0xfe, 0x48, 0x81, 0xcc, 0x39,
	0xba, 0xf1, 0xe4, 0x0e, 0x1b, 0x45, 0x13, 0xd6, 0xd6, 0xb3, 0xe7, 0xff, 0xb2, 0xf1, 0x06, 0xdd,
	0x78, 0x72, 0xa7, 0x57, 0x64, 0x04, 0x2f, 0xcd, 0xce, 0x70, 0xdb, 0xf9, 0xa3, 0xdb, 0xde, 0x05,
	0x11, 0x38, 0xba, 0xd2, 0xcf, 0xc8, 0x89, 0xd7, 0xce, 0xfa, 0x50, 0x78, 0x5d, 0x37, 0x9b, 0xc0,
	0x18, 0x86, 0x78, 0x1c, 0x49, 0x8e, 0x1c, 0xc4, 0xa8, 0x76, 0x95, 0x28, 0x8d, 0x64, 0x2f, 0x70,
	0xb9, 0x83, 0x50, 0x8f, 0x4b, 0xe3, 0xeb, 0x50, 0x48, 0xa3, 0xd8, 0xcb, 0xf8, 0xee, 0x48, 0xbc,
	0x35, 0x8a, 0x7e, 0x4b, 0x72, 0x65, 0x4a, 0x5d, 0xc1, 0x3b, 0xb3, 0x57, 0xa8, 0x69, 0xf6, 0xa8,
	0xa6, 0xef, 0x3a, 0x4f, 0xbe, 0xdf, 0x44, 0x6f, 0x08, 0xa9, 0x83, 0x58, 0x2e, 0x0b, 0x53, 0x2d,
	0x2d, 0x7b, 0x3d, 0x1d, 0xfe, 0xe3, 0x11, 0xef, 0xc0, 0xf5, 0xb6, 0x5a, 0x5a, 0x9e, 0xd7, 0x9d,
	0x09, 0x0a, 0x6b, 0x2d, 0xea, 0x98, 0xfb, 0xf3, 0xa8, 0x30, 0x12, 0x31, 0xbf, 0x7d, 0xa1, 0x15,
	0xed, 0x35, 0xfb, 0x18, 0xd7, 0x8f, 0x7a, 0xee, 0x97, 0xeb, 0xd9, 0x1b, 0x32, 0x8e, 0xaf, 0x0c,
	0x85, 0x58, 0xee, 0xdb, 0xb7, 0x34, 0x0a, 0x0a, 0x11, 0x1b, 0xf1, 0x20, 0x96, 0x3e, 0xd8, 0xc0,
	0x2d, 0x85, 0xd4, 0xd8, 0xb7, 0x39, 0x47, 0x7b, 0xf6, 0x13, 0xc9, 0xfb, 0xf0, 0xa0, 0x37, 0xb6,
	0x46, 0x85, 0x75, 0x3a, 0x28, 0x02, 0xe8, 0x8d, 0xb5, 0xc6, 0xc6, 0x4d, 0x93, 0x20, 0x22, 0xe0,
	0xbd, 0xc5, 0x56, 0x1a, 0x46, 0x3e, 0xa2, 0xd9, 0x1f, 0x03, 0x32, 0xba, 0x13, 0x2b, 0x6c, 0x0f,
	0xb9, 0x57, 0x25, 0xa3, 0x2a, 0x27, 0x56, 0x51, 0x55, 0xc6, 0xd1, 0x46, 0x55, 0xde, 0x96, 0xbd,
	0x2a, 0x6f, 0xcb, 0xe8, 0xe7, 0x43, 0x1a, 0x23, 0x68, 0x3f, 0x68, 0xa3, 0xec, 0x6f, 0x6d, 0xf4,
	0x94, 0x0c, 0x5b, 0xa3, 0xba, 0x01, 0xd2, 0xc6, 0x9b, 0xb0, 0xf5, 0x27, 0xef, 0xb5, 0x3e, 0x23,
	0x93, 0xad, 0x5e, 0xfc, 0x60, 0xaa, 0x7b, 0x1c, 0x1f, 0x39, 0xef, 0xe0, 0xc3, 0x72, 0xc8, 0xff,
	0x43, 0x39, 0xcc, 0x7e, 0x1b, 0x92, 0x71, 0xec, 0x15, 0x7a, 0x4a, 0x0e, 0x16, 0x0e, 0xa3, 0xce,
	0xf8, 0xc1, 0xc2, 0x81, 0x14, 0xbd, 0xd1, 0xb2, 0x0b, 0x1a, 0x6c, 0x0c, 0xc6, 0x6e, 0xab, 0x8d,
	0x15, 0xdd, 0x18, 0xed, 0x31, 0x64, 0xa1, 0xb4, 0xad, 0x89, 0x43, 0x34, 0xe3, 0x11, 0xe0, 0x8c,
	0x14, 0xbb, 0x34, 0x3b, 0xc1, 0x04, 0x66, 0xad, 0xbe, 0xc6, 0xa0, 0x33, 0x0e, 0x26, 0x4c, 0x93,
	0xca, 0x16, 0x5e, 0x3b, 0x6f, 0xaa, 0x80, 0xa1, 0x67, 0x3c, 0xaf, 0x2c, 0x8f, 0x04, 0x5c, 0x2a,
	0x9a, 0x60, 0xdd, 0x46, 0xec, 0xf0, 0x01, 0x32, 0xde, 0x63, 0x18, 0xeb, 0xcd, 0x4a, 0x16, 0x70,
	0x45, 0x1e, 0x27, 0x60, 0xb3, 0x92, 0x77, 0x62, 0x47, 0xbf, 0x20, 0xa7, 0xa6, 0x2e, 0xa4, 0xb5,
	0x4e, 0xa7, 0xc7, 0x27, 0xb8, 0x7e, 0x62, 0xea, 0xb7, 0x7b, 0x92, 0x7e, 0x49, 0x9e, 0xa4, 0xfd,
	0x85, 0xf3, 0xba, 0x35, 0x7a, 0x9b, 0x06, 0xec, 0x49, 0x3c, 0xe7, 0x2e, 0x92, 0xd0, 0xd4, 0x95,
	0x2d, 0x16, 0x42, 0xde, 0xaf, 0xbc, 0x6d, 0x2a, 0x95, 0xe6, 0xed, 0x71, 0x65, 0xdf, 0xf4, 0x1c,
	0x88, 0x11, 0x3e, 0x8a, 0x39, 0x49, 0xe3, 0xd8, 0xa3, 0x98, 0xcf, 0xc9, 0x29, 0xdc, 0xb0, 0xf4,
	0x5a, 0x17, 0x5b, 0x11, 0xe4, 0x1a, 0x67, 0x6f, 0xc6, 0x8f, 0x9d, 0xd8, 0x7d, 0xef, 0xb5, 0xfe,
	0x15, 0x38, 0xa8, 0xe9, 0xbe, 0xdf, 0x3e, 0xd0, 0x1a, 0xfd, 0xb7, 0xe5, 0xe0, 0xfd, 0x6f, 0xcb,
	0x83, 0x49, 0x1f, 0x0b, 0x7a, 0x4f, 0xcc, 0xfe, 0x1c, 0x90, 0x11, 0x8c, 0xa6, 0x0f, 0x7c, 0x28,
	0x29, 0x19, 0x61, 0xb8, 0x29, 0xbd, 0x18, 0x25, 0x4c, 0x25, 0x51, 0x95, 0xe2, 0xbe, 0x49, 0xd9,
	0xed, 0x20, 0x5c, 0xee, 0xb5, 0xdb, 0xec, 0xba, 0xe4, 0x22, 0x80, 0x53, 0x97, 0xa2, 0xed, 0x92,
	0xbb, 0x14, 0x2d, 0x9c, 0x2a, 0xad, 0xa9, 0x52, 0x76, 0xd1, 0xc6, 0x4f, 0xd7, 0x5a, 0x78, 0x9d,
	0x32, 0x1b, 0x01, 0x7c, 0x23, 0x2a, 0xbb, 0x2d, 0xbc, 0x48, 0x65, 0x9d, 0xf1, 0x49, 0x65, 0xb7,
	0x5c, 0x54, 0xf7, 0xb0, 0xb4, 0x36, 0x75, 0x5c, 0x8a, 0x59, 0x9d, 0xac, 0x4d, 0x8d, 0x4b, 0x94,
	0x8c, 0x36, 0xe6, 0x5e, 0xa7, 0x64, 0xa2, 0x8d, 0xaa, 0x4d, 0x8d, 0xf4, 0x51, 0x52, 0x1d, 0xe1,
	0x62, 0x8c, 0x7f, 0x23, 0xbe, 0xfa, 0x2b, 0x00, 0x00, 0xff, 0xff, 0x91, 0xb0, 0x37, 0x6d, 0x78,
	0x08, 0x00, 0x00,
}
